// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// UniversalSearchKnowledgeBaseSearch UniversalSearchKnowledgeBaseSearch
//
// The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
//     whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
//
// swagger:model UniversalSearchKnowledgeBaseSearch
type UniversalSearchKnowledgeBaseSearch string

const (

	// UniversalSearchKnowledgeBaseSearchDefaultOrInherit captures enum value "default or inherit"
	UniversalSearchKnowledgeBaseSearchDefaultOrInherit UniversalSearchKnowledgeBaseSearch = "default or inherit"

	// UniversalSearchKnowledgeBaseSearchHide captures enum value "hide"
	UniversalSearchKnowledgeBaseSearchHide UniversalSearchKnowledgeBaseSearch = "hide"

	// UniversalSearchKnowledgeBaseSearchShow captures enum value "show"
	UniversalSearchKnowledgeBaseSearchShow UniversalSearchKnowledgeBaseSearch = "show"
)

// for schema
var universalSearchKnowledgeBaseSearchEnum []interface{}

func init() {
	var res []UniversalSearchKnowledgeBaseSearch
	if err := json.Unmarshal([]byte(`["default or inherit","hide","show"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		universalSearchKnowledgeBaseSearchEnum = append(universalSearchKnowledgeBaseSearchEnum, v)
	}
}

func (m UniversalSearchKnowledgeBaseSearch) validateUniversalSearchKnowledgeBaseSearchEnum(path, location string, value UniversalSearchKnowledgeBaseSearch) error {
	if err := validate.Enum(path, location, value, universalSearchKnowledgeBaseSearchEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this universal search knowledge base search
func (m UniversalSearchKnowledgeBaseSearch) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateUniversalSearchKnowledgeBaseSearchEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
