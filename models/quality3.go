// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Quality3 Quality3
//
// Quality of the camera. Can be one of 'Standard' or 'Enhanced'.
//
// swagger:model Quality3
type Quality3 string

const (

	// Quality3Standard captures enum value "Standard"
	Quality3Standard Quality3 = "Standard"

	// Quality3Enhanced captures enum value "Enhanced"
	Quality3Enhanced Quality3 = "Enhanced"
)

// for schema
var quality3Enum []interface{}

func init() {
	var res []Quality3
	if err := json.Unmarshal([]byte(`["Standard","Enhanced"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		quality3Enum = append(quality3Enum, v)
	}
}

func (m Quality3) validateQuality3Enum(path, location string, value Quality3) error {
	if err := validate.Enum(path, location, value, quality3Enum); err != nil {
		return err
	}
	return nil
}

// Validate validates this quality3
func (m Quality3) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateQuality3Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
