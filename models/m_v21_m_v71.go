// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MV21MV71 MV21MV71
//
// Quality and resolution for MV21/MV71 camera models.
//
// swagger:model MV21MV71
type MV21MV71 struct {

	// quality
	// Required: true
	Quality Quality1 `json:"quality"`

	// Resolution of the camera. Can be one of '1280x720'.
	// Required: true
	Resolution *string `json:"resolution"`
}

// Validate validates this m v21 m v71
func (m *MV21MV71) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateQuality(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResolution(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MV21MV71) validateQuality(formats strfmt.Registry) error {

	if err := m.Quality.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("quality")
		}
		return err
	}

	return nil
}

func (m *MV21MV71) validateResolution(formats strfmt.Registry) error {

	if err := validate.Required("resolution", "body", m.Resolution); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MV21MV71) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MV21MV71) UnmarshalBinary(b []byte) error {
	var res MV21MV71
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
