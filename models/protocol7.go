// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Protocol7 Protocol7
//
// The type of protocol (must be 'tcp', 'udp', or 'any').
//
// swagger:model Protocol7
type Protocol7 string

const (

	// Protocol7TCP captures enum value "tcp"
	Protocol7TCP Protocol7 = "tcp"

	// Protocol7UDP captures enum value "udp"
	Protocol7UDP Protocol7 = "udp"

	// Protocol7Any captures enum value "any"
	Protocol7Any Protocol7 = "any"
)

// for schema
var protocol7Enum []interface{}

func init() {
	var res []Protocol7
	if err := json.Unmarshal([]byte(`["tcp","udp","any"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		protocol7Enum = append(protocol7Enum, v)
	}
}

func (m Protocol7) validateProtocol7Enum(path, location string, value Protocol7) error {
	if err := validate.Enum(path, location, value, protocol7Enum); err != nil {
		return err
	}
	return nil
}

// Validate validates this protocol7
func (m Protocol7) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateProtocol7Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
