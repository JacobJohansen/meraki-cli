// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FixedIPAssignment FixedIpAssignment
//
// swagger:model FixedIpAssignment
type FixedIPAssignment struct {

	// The IP address you want to assign to a specific server or device
	// Required: true
	IP *string `json:"ip"`

	// The MAC address of the server or device that hosts the internal resource that you wish to receive the specified IP address
	// Required: true
	Mac *string `json:"mac"`

	// A descriptive name of the assignment
	Name string `json:"name,omitempty"`
}

// Validate validates this fixed Ip assignment
func (m *FixedIPAssignment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIP(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMac(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FixedIPAssignment) validateIP(formats strfmt.Registry) error {

	if err := validate.Required("ip", "body", m.IP); err != nil {
		return err
	}

	return nil
}

func (m *FixedIPAssignment) validateMac(formats strfmt.Registry) error {

	if err := validate.Required("mac", "body", m.Mac); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *FixedIPAssignment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FixedIPAssignment) UnmarshalBinary(b []byte) error {
	var res FixedIPAssignment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
