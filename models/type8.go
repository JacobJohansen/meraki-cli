// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Type8 Type8
//
// The signature type for the custom pie chart item. Can be one of 'host', 'port' or 'ipRange'.
//
// swagger:model Type8
type Type8 string

const (

	// Type8Host captures enum value "host"
	Type8Host Type8 = "host"

	// Type8Port captures enum value "port"
	Type8Port Type8 = "port"

	// Type8IPRange captures enum value "ipRange"
	Type8IPRange Type8 = "ipRange"
)

// for schema
var type8Enum []interface{}

func init() {
	var res []Type8
	if err := json.Unmarshal([]byte(`["host","port","ipRange"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		type8Enum = append(type8Enum, v)
	}
}

func (m Type8) validateType8Enum(path, location string, value Type8) error {
	if err := validate.Enum(path, location, value, type8Enum); err != nil {
		return err
	}
	return nil
}

// Validate validates this type8
func (m Type8) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateType8Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
