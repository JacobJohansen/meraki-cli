// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V3AuthMode V3AuthMode
//
// The SNMP version 3 authentication mode. Can be either 'MD5' or 'SHA'.
//
// swagger:model V3AuthMode
type V3AuthMode string

const (

	// V3AuthModeMD5 captures enum value "MD5"
	V3AuthModeMD5 V3AuthMode = "MD5"

	// V3AuthModeSHA captures enum value "SHA"
	V3AuthModeSHA V3AuthMode = "SHA"
)

// for schema
var v3AuthModeEnum []interface{}

func init() {
	var res []V3AuthMode
	if err := json.Unmarshal([]byte(`["MD5","SHA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v3AuthModeEnum = append(v3AuthModeEnum, v)
	}
}

func (m V3AuthMode) validateV3AuthModeEnum(path, location string, value V3AuthMode) error {
	if err := validate.Enum(path, location, value, v3AuthModeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this v3 auth mode
func (m V3AuthMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV3AuthModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
