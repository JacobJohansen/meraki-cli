// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Settings1 Settings1
//
// How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'.
//
// swagger:model Settings1
type Settings1 string

const (

	// Settings1NetworkDefault captures enum value "network default"
	Settings1NetworkDefault Settings1 = "network default"

	// Settings1Ignore captures enum value "ignore"
	Settings1Ignore Settings1 = "ignore"

	// Settings1Custom captures enum value "custom"
	Settings1Custom Settings1 = "custom"
)

// for schema
var settings1Enum []interface{}

func init() {
	var res []Settings1
	if err := json.Unmarshal([]byte(`["network default","ignore","custom"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		settings1Enum = append(settings1Enum, v)
	}
}

func (m Settings1) validateSettings1Enum(path, location string, value Settings1) error {
	if err := validate.Enum(path, location, value, settings1Enum); err != nil {
		return err
	}
	return nil
}

// Validate validates this settings1
func (m Settings1) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSettings1Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
