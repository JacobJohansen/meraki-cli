// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PowerType PowerType
//
// Per switch exception (combined, redundant, useNetworkSetting)
//
// swagger:model PowerType
type PowerType string

const (

	// PowerTypeCombined captures enum value "combined"
	PowerTypeCombined PowerType = "combined"

	// PowerTypeRedundant captures enum value "redundant"
	PowerTypeRedundant PowerType = "redundant"

	// PowerTypeUseNetworkSetting captures enum value "useNetworkSetting"
	PowerTypeUseNetworkSetting PowerType = "useNetworkSetting"
)

// for schema
var powerTypeEnum []interface{}

func init() {
	var res []PowerType
	if err := json.Unmarshal([]byte(`["combined","redundant","useNetworkSetting"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		powerTypeEnum = append(powerTypeEnum, v)
	}
}

func (m PowerType) validatePowerTypeEnum(path, location string, value PowerType) error {
	if err := validate.Enum(path, location, value, powerTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this power type
func (m PowerType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePowerTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
