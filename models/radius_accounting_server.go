// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RadiusAccountingServer RadiusAccountingServer
//
// swagger:model RadiusAccountingServer
type RadiusAccountingServer struct {

	// IP address to which the APs will send RADIUS accounting messages
	// Required: true
	Host *string `json:"host"`

	// Port on the RADIUS server that is listening for accounting messages
	Port int32 `json:"port,omitempty"`

	// Shared key used to authenticate messages between the APs and RADIUS server
	// Required: true
	Secret *string `json:"secret"`
}

// Validate validates this radius accounting server
func (m *RadiusAccountingServer) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHost(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSecret(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RadiusAccountingServer) validateHost(formats strfmt.Registry) error {

	if err := validate.Required("host", "body", m.Host); err != nil {
		return err
	}

	return nil
}

func (m *RadiusAccountingServer) validateSecret(formats strfmt.Registry) error {

	if err := validate.Required("secret", "body", m.Secret); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RadiusAccountingServer) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RadiusAccountingServer) UnmarshalBinary(b []byte) error {
	var res RadiusAccountingServer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
