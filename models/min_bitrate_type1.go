// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// MinBitrateType1 MinBitrateType1
//
// Minimum bitrate can be set to either 'band' or 'ssid'.
//
// swagger:model MinBitrateType1
type MinBitrateType1 string

const (

	// MinBitrateType1Band captures enum value "band"
	MinBitrateType1Band MinBitrateType1 = "band"

	// MinBitrateType1Ssid captures enum value "ssid"
	MinBitrateType1Ssid MinBitrateType1 = "ssid"
)

// for schema
var minBitrateType1Enum []interface{}

func init() {
	var res []MinBitrateType1
	if err := json.Unmarshal([]byte(`["band","ssid"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		minBitrateType1Enum = append(minBitrateType1Enum, v)
	}
}

func (m MinBitrateType1) validateMinBitrateType1Enum(path, location string, value MinBitrateType1) error {
	if err := validate.Enum(path, location, value, minBitrateType1Enum); err != nil {
		return err
	}
	return nil
}

// Validate validates this min bitrate type1
func (m MinBitrateType1) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMinBitrateType1Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
