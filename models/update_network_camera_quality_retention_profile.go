// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateNetworkCameraQualityRetentionProfile updateNetworkCameraQualityRetentionProfile
//
// swagger:model updateNetworkCameraQualityRetentionProfile
type UpdateNetworkCameraQualityRetentionProfile struct {

	// Whether or not to record audio. Can be either true or false. Defaults to false.
	AudioRecordingEnabled bool `json:"audioRecordingEnabled,omitempty"`

	// Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false.
	CloudArchiveEnabled bool `json:"cloudArchiveEnabled,omitempty"`

	// The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days
	MaxRetentionDays int32 `json:"maxRetentionDays,omitempty"`

	// Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false.
	MotionBasedRetentionEnabled bool `json:"motionBasedRetentionEnabled,omitempty"`

	// The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
	MotionDetectorVersion int32 `json:"motionDetectorVersion,omitempty"`

	// The name of the new profile. Must be unique.
	Name string `json:"name,omitempty"`

	// Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false.
	RestrictedBandwidthModeEnabled bool `json:"restrictedBandwidthModeEnabled,omitempty"`

	// Schedule for which this camera will record video, or 'null' to always record.
	ScheduleID string `json:"scheduleId,omitempty"`

	// video settings
	VideoSettings *VideoSettings `json:"videoSettings,omitempty"`
}

// Validate validates this update network camera quality retention profile
func (m *UpdateNetworkCameraQualityRetentionProfile) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateVideoSettings(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateNetworkCameraQualityRetentionProfile) validateVideoSettings(formats strfmt.Registry) error {

	if swag.IsZero(m.VideoSettings) { // not required
		return nil
	}

	if m.VideoSettings != nil {
		if err := m.VideoSettings.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("videoSettings")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UpdateNetworkCameraQualityRetentionProfile) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateNetworkCameraQualityRetentionProfile) UnmarshalBinary(b []byte) error {
	var res UpdateNetworkCameraQualityRetentionProfile
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
