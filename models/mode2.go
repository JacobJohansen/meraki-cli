// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Mode2 Mode2
//
// The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'
//
// swagger:model Mode2
type Mode2 string

const (

	// Mode2None captures enum value "none"
	Mode2None Mode2 = "none"

	// Mode2Spoke captures enum value "spoke"
	Mode2Spoke Mode2 = "spoke"

	// Mode2Hub captures enum value "hub"
	Mode2Hub Mode2 = "hub"
)

// for schema
var mode2Enum []interface{}

func init() {
	var res []Mode2
	if err := json.Unmarshal([]byte(`["none","spoke","hub"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mode2Enum = append(mode2Enum, v)
	}
}

func (m Mode2) validateMode2Enum(path, location string, value Mode2) error {
	if err := validate.Enum(path, location, value, mode2Enum); err != nil {
		return err
	}
	return nil
}

// Validate validates this mode2
func (m Mode2) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMode2Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
