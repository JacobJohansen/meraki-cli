// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Protocol9 Protocol9
//
// The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY".
//
// swagger:model Protocol9
type Protocol9 string

const (

	// Protocol9ANY captures enum value "ANY"
	Protocol9ANY Protocol9 = "ANY"

	// Protocol9TCP captures enum value "TCP"
	Protocol9TCP Protocol9 = "TCP"

	// Protocol9UDP captures enum value "UDP"
	Protocol9UDP Protocol9 = "UDP"
)

// for schema
var protocol9Enum []interface{}

func init() {
	var res []Protocol9
	if err := json.Unmarshal([]byte(`["ANY","TCP","UDP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		protocol9Enum = append(protocol9Enum, v)
	}
}

func (m Protocol9) validateProtocol9Enum(path, location string, value Protocol9) error {
	if err := validate.Enum(path, location, value, protocol9Enum); err != nil {
		return err
	}
	return nil
}

// Validate validates this protocol9
func (m Protocol9) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateProtocol9Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
