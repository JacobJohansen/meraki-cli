// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// MinBitrateType MinBitrateType
//
// Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.
//
// swagger:model MinBitrateType
type MinBitrateType string

const (

	// MinBitrateTypeBand captures enum value "band"
	MinBitrateTypeBand MinBitrateType = "band"

	// MinBitrateTypeSsid captures enum value "ssid"
	MinBitrateTypeSsid MinBitrateType = "ssid"
)

// for schema
var minBitrateTypeEnum []interface{}

func init() {
	var res []MinBitrateType
	if err := json.Unmarshal([]byte(`["band","ssid"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		minBitrateTypeEnum = append(minBitrateTypeEnum, v)
	}
}

func (m MinBitrateType) validateMinBitrateTypeEnum(path, location string, value MinBitrateType) error {
	if err := validate.Enum(path, location, value, minBitrateTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this min bitrate type
func (m MinBitrateType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMinBitrateTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
