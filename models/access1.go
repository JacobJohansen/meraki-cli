// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Access1 Access1
//
// The type of SNMP access. Can be one of 'none' (disabled), 'community' (V1/V2c), or 'users' (V3).
//
// swagger:model Access1
type Access1 string

const (

	// Access1None captures enum value "none"
	Access1None Access1 = "none"

	// Access1Community captures enum value "community"
	Access1Community Access1 = "community"

	// Access1Users captures enum value "users"
	Access1Users Access1 = "users"
)

// for schema
var access1Enum []interface{}

func init() {
	var res []Access1
	if err := json.Unmarshal([]byte(`["none","community","users"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		access1Enum = append(access1Enum, v)
	}
}

func (m Access1) validateAccess1Enum(path, location string, value Access1) error {
	if err := validate.Enum(path, location, value, access1Enum); err != nil {
		return err
	}
	return nil
}

// Validate validates this access1
func (m Access1) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAccess1Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
