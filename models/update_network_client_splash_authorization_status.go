// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateNetworkClientSplashAuthorizationStatus updateNetworkClientSplashAuthorizationStatus
//
// swagger:model updateNetworkClientSplashAuthorizationStatus
type UpdateNetworkClientSplashAuthorizationStatus struct {

	// The target SSIDs. Each SSID must be enabled and must have Click-through splash enabled. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID's splash frequency. Not all networks support configuring all SSIDs
	// Required: true
	Ssids map[string]GeneratedObject10 `json:"ssids"`
}

// Validate validates this update network client splash authorization status
func (m *UpdateNetworkClientSplashAuthorizationStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSsids(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateNetworkClientSplashAuthorizationStatus) validateSsids(formats strfmt.Registry) error {

	for k := range m.Ssids {

		if err := validate.Required("ssids"+"."+k, "body", m.Ssids[k]); err != nil {
			return err
		}
		if val, ok := m.Ssids[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *UpdateNetworkClientSplashAuthorizationStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateNetworkClientSplashAuthorizationStatus) UnmarshalBinary(b []byte) error {
	var res UpdateNetworkClientSplashAuthorizationStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
