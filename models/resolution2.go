// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Resolution2 Resolution2
//
// Resolution of the camera. Can be one of '1080x1080' or '2058x2058'.
//
// swagger:model Resolution2
type Resolution2 string

const (

	// Resolution2Nr1080x1080 captures enum value "1080x1080"
	Resolution2Nr1080x1080 Resolution2 = "1080x1080"

	// Resolution2Nr2058x2058 captures enum value "2058x2058"
	Resolution2Nr2058x2058 Resolution2 = "2058x2058"
)

// for schema
var resolution2Enum []interface{}

func init() {
	var res []Resolution2
	if err := json.Unmarshal([]byte(`["1080x1080","2058x2058"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		resolution2Enum = append(resolution2Enum, v)
	}
}

func (m Resolution2) validateResolution2Enum(path, location string, value Resolution2) error {
	if err := validate.Enum(path, location, value, resolution2Enum); err != nil {
		return err
	}
	return nil
}

// Validate validates this resolution2
func (m Resolution2) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateResolution2Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
