// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Protocol3 Protocol3
//
// 'tcp' or 'udp'
//
// swagger:model Protocol3
type Protocol3 string

const (

	// Protocol3TCP captures enum value "tcp"
	Protocol3TCP Protocol3 = "tcp"

	// Protocol3UDP captures enum value "udp"
	Protocol3UDP Protocol3 = "udp"
)

// for schema
var protocol3Enum []interface{}

func init() {
	var res []Protocol3
	if err := json.Unmarshal([]byte(`["tcp","udp"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		protocol3Enum = append(protocol3Enum, v)
	}
}

func (m Protocol3) validateProtocol3Enum(path, location string, value Protocol3) error {
	if err := validate.Enum(path, location, value, protocol3Enum); err != nil {
		return err
	}
	return nil
}

// Validate validates this protocol3
func (m Protocol3) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateProtocol3Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
