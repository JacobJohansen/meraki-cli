// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FiveGhzSettings FiveGhzSettings
//
// Settings related to 5Ghz band
//
// swagger:model FiveGhzSettings
type FiveGhzSettings struct {

	// Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'. Defaults to auto.
	ChannelWidth string `json:"channelWidth,omitempty"`

	// Sets max power (dBm) of 5Ghz band. Can be integer between 8 and 30. Defaults to 30.
	MaxPower int32 `json:"maxPower,omitempty"`

	// Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'. Defaults to 12.
	MinBitrate int32 `json:"minBitrate,omitempty"`

	// Sets min power (dBm) of 5Ghz band. Can be integer between 8 and 30. Defaults to 8.
	MinPower int32 `json:"minPower,omitempty"`

	// The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after
	//     consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will
	//     reset this to the default.
	Rxsop int32 `json:"rxsop,omitempty"`

	// Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'.Defaults to [36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157, 161, 165].
	ValidAutoChannels []int32 `json:"validAutoChannels"`
}

// Validate validates this five ghz settings
func (m *FiveGhzSettings) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FiveGhzSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FiveGhzSettings) UnmarshalBinary(b []byte) error {
	var res FiveGhzSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
