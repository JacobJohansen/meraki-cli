// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Settings5 Settings5
//
// How VLAN tagging is applied. Can be 'network default', 'ignore' or 'custom'.
//
// swagger:model Settings5
type Settings5 string

const (

	// Settings5NetworkDefault captures enum value "network default"
	Settings5NetworkDefault Settings5 = "network default"

	// Settings5Ignore captures enum value "ignore"
	Settings5Ignore Settings5 = "ignore"

	// Settings5Custom captures enum value "custom"
	Settings5Custom Settings5 = "custom"
)

// for schema
var settings5Enum []interface{}

func init() {
	var res []Settings5
	if err := json.Unmarshal([]byte(`["network default","ignore","custom"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		settings5Enum = append(settings5Enum, v)
	}
}

func (m Settings5) validateSettings5Enum(path, location string, value Settings5) error {
	if err := validate.Enum(path, location, value, settings5Enum); err != nil {
		return err
	}
	return nil
}

// Validate validates this settings5
func (m Settings5) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSettings5Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
