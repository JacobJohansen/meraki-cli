// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Protocol8 Protocol8
//
// The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY"
//
// swagger:model Protocol8
type Protocol8 string

const (

	// Protocol8ANY captures enum value "ANY"
	Protocol8ANY Protocol8 = "ANY"

	// Protocol8TCP captures enum value "TCP"
	Protocol8TCP Protocol8 = "TCP"

	// Protocol8UDP captures enum value "UDP"
	Protocol8UDP Protocol8 = "UDP"
)

// for schema
var protocol8Enum []interface{}

func init() {
	var res []Protocol8
	if err := json.Unmarshal([]byte(`["ANY","TCP","UDP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		protocol8Enum = append(protocol8Enum, v)
	}
}

func (m Protocol8) validateProtocol8Enum(path, location string, value Protocol8) error {
	if err := validate.Enum(path, location, value, protocol8Enum); err != nil {
		return err
	}
	return nil
}

// Validate validates this protocol8
func (m Protocol8) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateProtocol8Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
