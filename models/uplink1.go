// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Uplink1 Uplink1
//
// The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')
//
// swagger:model Uplink1
type Uplink1 string

const (

	// Uplink1Internet1 captures enum value "internet1"
	Uplink1Internet1 Uplink1 = "internet1"

	// Uplink1Internet2 captures enum value "internet2"
	Uplink1Internet2 Uplink1 = "internet2"
)

// for schema
var uplink1Enum []interface{}

func init() {
	var res []Uplink1
	if err := json.Unmarshal([]byte(`["internet1","internet2"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		uplink1Enum = append(uplink1Enum, v)
	}
}

func (m Uplink1) validateUplink1Enum(path, location string, value Uplink1) error {
	if err := validate.Enum(path, location, value, uplink1Enum); err != nil {
		return err
	}
	return nil
}

// Validate validates this uplink1
func (m Uplink1) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateUplink1Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
