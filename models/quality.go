// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Quality Quality
//
// Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model.
//
// swagger:model Quality
type Quality string

const (

	// QualityStandard captures enum value "Standard"
	QualityStandard Quality = "Standard"

	// QualityHigh captures enum value "High"
	QualityHigh Quality = "High"

	// QualityEnhanced captures enum value "Enhanced"
	QualityEnhanced Quality = "Enhanced"
)

// for schema
var qualityEnum []interface{}

func init() {
	var res []Quality
	if err := json.Unmarshal([]byte(`["Standard","High","Enhanced"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		qualityEnum = append(qualityEnum, v)
	}
}

func (m Quality) validateQualityEnum(path, location string, value Quality) error {
	if err := validate.Enum(path, location, value, qualityEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this quality
func (m Quality) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateQualityEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
