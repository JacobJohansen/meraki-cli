// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Mode1 Mode1
//
// Set mode to 'enabled' to enable malware prevention, otherwise 'disabled'
//
// swagger:model Mode1
type Mode1 string

const (

	// Mode1Enabled captures enum value "enabled"
	Mode1Enabled Mode1 = "enabled"

	// Mode1Disabled captures enum value "disabled"
	Mode1Disabled Mode1 = "disabled"
)

// for schema
var mode1Enum []interface{}

func init() {
	var res []Mode1
	if err := json.Unmarshal([]byte(`["enabled","disabled"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mode1Enum = append(mode1Enum, v)
	}
}

func (m Mode1) validateMode1Enum(path, location string, value Mode1) error {
	if err := validate.Enum(path, location, value, mode1Enum); err != nil {
		return err
	}
	return nil
}

// Validate validates this mode1
func (m Mode1) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMode1Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
