// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Protocol Protocol
//
// The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')
//
// swagger:model Protocol
type Protocol string

const (

	// ProtocolTCP captures enum value "tcp"
	ProtocolTCP Protocol = "tcp"

	// ProtocolUDP captures enum value "udp"
	ProtocolUDP Protocol = "udp"

	// ProtocolIcmp captures enum value "icmp"
	ProtocolIcmp Protocol = "icmp"

	// ProtocolAny captures enum value "any"
	ProtocolAny Protocol = "any"
)

// for schema
var protocolEnum []interface{}

func init() {
	var res []Protocol
	if err := json.Unmarshal([]byte(`["tcp","udp","icmp","any"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		protocolEnum = append(protocolEnum, v)
	}
}

func (m Protocol) validateProtocolEnum(path, location string, value Protocol) error {
	if err := validate.Enum(path, location, value, protocolEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this protocol
func (m Protocol) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateProtocolEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
