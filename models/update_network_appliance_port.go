// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateNetworkAppliancePort updateNetworkAppliancePort
//
// swagger:model updateNetworkAppliancePort
type UpdateNetworkAppliancePort struct {

	// The name of the policy. Only applicable to Access ports. Valid values are: 'open', '8021x-radius', 'mac-radius', 'hybris-radius' for MX64 or Z3 or any MX supporting the per port authentication feature. Otherwise, 'open' is the only valid value and 'open' is the default value if the field is missing.
	AccessPolicy string `json:"accessPolicy,omitempty"`

	// Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port.
	AllowedVlans string `json:"allowedVlans,omitempty"`

	// Trunk port can Drop all Untagged traffic. When true, no VLAN is required. Access ports cannot have dropUntaggedTraffic set to true.
	DropUntaggedTraffic bool `json:"dropUntaggedTraffic,omitempty"`

	// The status of the port
	Enabled bool `json:"enabled,omitempty"`

	// The type of the port: 'access' or 'trunk'.
	Type string `json:"type,omitempty"`

	// Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.
	Vlan int32 `json:"vlan,omitempty"`
}

// Validate validates this update network appliance port
func (m *UpdateNetworkAppliancePort) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateNetworkAppliancePort) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateNetworkAppliancePort) UnmarshalBinary(b []byte) error {
	var res UpdateNetworkAppliancePort
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
