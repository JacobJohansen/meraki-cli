swagger: '2.0'
info:
  version: '0.9.0'
  title: Meraki Dashboard API
  description: >
    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.


    > Date: 04 March, 2020

    >

    > [What's New](https://meraki.io/whats-new/)


    ---


    [API Documentation](https://meraki.io/api)


    [Community Support](https://meraki.io/community)


    [Meraki Homepage](https://www.meraki.com)
  contact: {}
host: api.meraki.com
basePath: /api/v0
securityDefinitions:
  Cisco-Meraki-API-Key:
    type: apiKey
    name: X-Cisco-Meraki-API-Key
    in: header
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /organizations/{organizationId}/apiRequests:
    get:
      description: List the API requests made by an organization
      summary: getOrganizationApiRequests
      tags:
      - API usage
      operationId: getOrganizationApiRequests
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.
      - name: perPage
        in: query
        required: false
        type: integer
        format: int32
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.
      - name: startingAfter
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: endingBefore
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: adminId
        in: query
        required: false
        type: string
        description: Filter the results by the ID of the admin who made the API requests
      - name: path
        in: query
        required: false
        type: string
        description: Filter the results by the path of the API requests
      - name: method
        in: query
        required: false
        type: string
        description: Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')
      - name: responseCode
        in: query
        required: false
        type: integer
        format: int32
        description: Filter the results by the response code of the API requests
      - name: sourceIp
        in: query
        required: false
        type: string
        description: Filter the results by the IP address of the originating API request
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "adminId": "212406",

                  "method": "GET",

                  "host": "api.meraki.com",

                  "path": "/api/v0/organizations/33349/apiRequests",

                  "queryString": "timespan=604800",

                  "userAgent": "PostmanRuntime/7.6.0",

                  "ts": "2019-02-20T17:31:23Z",

                  "responseCode": 200,

                  "sourceIp": "123.123.123.1"

                }

              ]
          headers: {}
  /organizations/{organizationId}/apiRequests/overview:
    get:
      description: Return an aggregated overview of API requests data
      summary: getOrganizationApiRequestsOverview
      tags:
      - API usage
      operationId: getOrganizationApiRequestsOverview
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "responseCodeCounts": {

                  "200": 50000,

                  "201": 4000,

                  "204": 1000,

                  "400": 3500,

                  "404": 1500,

                  "429": 10000

                }

              }
          headers: {}
  /organizations/{organizationId}/actionBatches:
    post:
      description: Create an action batch
      summary: createOrganizationActionBatch
      tags:
      - Action batches
      operationId: createOrganizationActionBatch
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: createOrganizationActionBatch
        in: body
        required: true
        schema:
          $ref: '#/definitions/createOrganizationActionBatch'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "123",

                "organizationId": "2930418",

                "confirmed": true,

                "synchronous": false,

                "status": {

                  "completed": false,

                  "failed": false,

                  "errors": []

                },

                "actions": [

                  {

                    "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",

                    "operation": "update",

                    "body": {

                      "enabled": false

                    }

                  }

                ]

              }
          headers: {}
    get:
      description: Return the list of action batches in the organization
      summary: getOrganizationActionBatches
      tags:
      - Action batches
      operationId: getOrganizationActionBatches
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "123",

                  "organizationId": "2930418",

                  "confirmed": true,

                  "synchronous": false,

                  "status": {

                    "completed": false,

                    "failed": false,

                    "errors": []

                  },

                  "actions": [

                    {

                      "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",

                      "operation": "update",

                      "body": {

                        "enabled": false

                      }

                    }

                  ]

                }

              ]
          headers: {}
  /organizations/{organizationId}/actionBatches/{actionBatchId}:
    get:
      description: Return an action batch
      summary: getOrganizationActionBatch
      tags:
      - Action batches
      operationId: getOrganizationActionBatch
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: actionBatchId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "123",

                "organizationId": "2930418",

                "confirmed": true,

                "synchronous": false,

                "status": {

                  "completed": false,

                  "failed": false,

                  "errors": []

                },

                "actions": [

                  {

                    "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",

                    "operation": "update",

                    "body": {

                      "enabled": false

                    }

                  }

                ]

              }
          headers: {}
    put:
      description: Update an action batch
      summary: updateOrganizationActionBatch
      tags:
      - Action batches
      operationId: updateOrganizationActionBatch
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: actionBatchId
        in: path
        required: true
        type: string
      - name: updateOrganizationActionBatch
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateOrganizationActionBatch'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "123",

                "organizationId": "2930418",

                "confirmed": true,

                "synchronous": false,

                "status": {

                  "completed": false,

                  "failed": false,

                  "errors": []

                },

                "actions": [

                  {

                    "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",

                    "operation": "update",

                    "body": {

                      "enabled": false

                    }

                  }

                ]

              }
          headers: {}
    delete:
      description: Delete an action batch
      summary: deleteOrganizationActionBatch
      tags:
      - Action batches
      operationId: deleteOrganizationActionBatch
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: actionBatchId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
  /organizations/{organizationId}/admins:
    post:
      description: Create a new dashboard administrator
      summary: createOrganizationAdmin
      tags:
      - Admins
      operationId: createOrganizationAdmin
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: createOrganizationAdmin
        in: body
        required: true
        schema:
          $ref: '#/definitions/createOrganizationAdmin'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "212406",

                "name": "Miles Meraki",

                "email": "miles@meraki.com",

                "orgAccess": "none",

                "accountStatus": "ok",

                "twoFactorAuthEnabled": false,

                "hasApiKey": true,

                "lastActive": "2019-01-28 14:58:56 -0800",

                "tags": [

                  {

                    "tag": "west",

                    "access": "read-only"

                  }

                ],

                "networks": [

                  {

                    "id": "N_24329156",

                    "access": "full"

                  }

                ]

              }
          headers: {}
    get:
      description: List the dashboard administrators in this organization
      summary: getOrganizationAdmins
      tags:
      - Admins
      operationId: getOrganizationAdmins
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "212406",

                  "name": "Miles Meraki",

                  "email": "miles@meraki.com",

                  "orgAccess": "none",

                  "accountStatus": "ok",

                  "twoFactorAuthEnabled": false,

                  "hasApiKey": true,

                  "lastActive": "2019-01-28 14:58:56 -0800",

                  "tags": [

                    {

                      "tag": "west",

                      "access": "read-only"

                    }

                  ],

                  "networks": [

                    {

                      "id": "N_24329156",

                      "access": "full"

                    }

                  ]

                }

              ]
          headers: {}
  /organizations/{organizationId}/admins/{id}:
    delete:
      description: Revoke all access for a dashboard administrator within this organization
      summary: deleteOrganizationAdmin
      tags:
      - Admins
      operationId: deleteOrganizationAdmin
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
    put:
      description: Update an administrator
      summary: updateOrganizationAdmin
      tags:
      - Admins
      operationId: updateOrganizationAdmin
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
      - name: updateOrganizationAdmin
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateOrganizationAdmin'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "212406",

                "name": "Miles Meraki",

                "email": "miles@meraki.com",

                "orgAccess": "none",

                "accountStatus": "ok",

                "twoFactorAuthEnabled": false,

                "hasApiKey": true,

                "lastActive": "2019-01-28 14:58:56 -0800",

                "tags": [

                  {

                    "tag": "west",

                    "access": "read-only"

                  }

                ],

                "networks": [

                  {

                    "id": "N_24329156",

                    "access": "full"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/alertSettings:
    put:
      description: Update the alert configuration for this network
      summary: updateNetworkAlertSettings
      tags:
      - Alert settings
      operationId: updateNetworkAlertSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkAlertSettings
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkAlertSettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "defaultDestinations": {

                  "emails": [

                    "miles@meraki.com"

                  ],

                  "allAdmins": true,

                  "snmp": true

                },

                "alerts": [

                  {

                    "type": "gatewayDown",

                    "enabled": true,

                    "alertDestinations": {

                      "emails": [

                        "miles@meraki.com"

                      ],

                      "allAdmins": false,

                      "snmp": false

                    },

                    "filters": {

                      "timeout": 60

                    }

                  }

                ]

              }
          headers: {}
    get:
      description: Return the alert configuration for this network
      summary: getNetworkAlertSettings
      tags:
      - Alert settings
      operationId: getNetworkAlertSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "defaultDestinations": {

                  "emails": [

                    "miles@meraki.com"

                  ],

                  "allAdmins": true,

                  "snmp": true

                },

                "alerts": [

                  {

                    "type": "gatewayDown",

                    "enabled": true,

                    "alertDestinations": {

                      "emails": [

                        "miles@meraki.com"

                      ],

                      "allAdmins": false,

                      "snmp": false

                    },

                    "filters": {

                      "timeout": 60

                    }

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/bluetoothClients:
    get:
      description: List the Bluetooth clients seen by APs in this network
      summary: getNetworkBluetoothClients
      tags:
      - Bluetooth clients
      operationId: getNetworkBluetoothClients
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 7 days from today.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day.
      - name: perPage
        in: query
        required: false
        type: integer
        format: int32
        description: The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10.
      - name: startingAfter
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: endingBefore
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: includeConnectivityHistory
        in: query
        required: false
        type: boolean
        description: Include the connectivity history for this client
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "1284392014819",

                  "mac": "22:33:44:55:66:77",

                  "networkId": "N_24329156",

                  "name": "Miles's phone",

                  "deviceName": "Bose QuietComfort 35",

                  "manufacturer": "Bose",

                  "lastSeen": 1526087474,

                  "seenByDeviceMac": "00:11:22:33:44:55",

                  "inSightAlert": false,

                  "outOfSightAlert": false,

                  "tags": [

                    "tag1",

                    "tag2"

                  ]

                }

              ]
          headers: {}
  /networks/{networkId}/bluetoothClients/{bluetoothClientId}:
    get:
      description: Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.
      summary: getNetworkBluetoothClient
      tags:
      - Bluetooth clients
      operationId: getNetworkBluetoothClient
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: bluetoothClientId
        in: path
        required: true
        type: string
      - name: includeConnectivityHistory
        in: query
        required: false
        type: boolean
        description: Include the connectivity history for this client
      - name: connectivityHistoryTimespan
        in: query
        required: false
        type: integer
        format: int32
        description: The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1284392014819",

                "mac": "22:33:44:55:66:77",

                "networkId": "N_24329156",

                "name": "Miles's phone",

                "deviceName": "Bose QuietComfort 35",

                "manufacturer": "Bose",

                "lastSeen": 1526087474,

                "seenByDeviceMac": "00:11:22:33:44:55",

                "inSightAlert": false,

                "outOfSightAlert": false,

                "tags": [

                  "tag1",

                  "tag2"

                ]

              }
          headers: {}
  /devices/{serial}/wireless/bluetooth/settings:
    put:
      description: Update the bluetooth settings for a wireless device
      summary: updateDeviceWirelessBluetoothSettings
      tags:
      - Bluetooth settings
      operationId: updateDeviceWirelessBluetoothSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      - name: updateDeviceWirelessBluetoothSettings
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateDeviceWirelessBluetoothSettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "uuid": "00000000-0000-0000-000-000000000000",

                "major": 13,

                "minor": 125

              }
          headers: {}
    get:
      description: Return the bluetooth settings for a wireless device
      summary: getDeviceWirelessBluetoothSettings
      tags:
      - Bluetooth settings
      operationId: getDeviceWirelessBluetoothSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "uuid": "00000000-0000-0000-000-000000000000",

                "major": 13,

                "minor": 125

              }
          headers: {}
  /networks/{networkId}/bluetoothSettings:
    put:
      description: Update the Bluetooth settings for a network. See the docs page for <a href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth settings</a>.
      summary: updateNetworkBluetoothSettings
      tags:
      - Bluetooth settings
      operationId: updateNetworkBluetoothSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkBluetoothSettings
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkBluetoothSettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "scanningEnabled": true,

                "advertisingEnabled": true,

                "uuid": "00000000-0000-0000-000-000000000000",

                "majorMinorAssignmentMode": "Non-unique",

                "major": 1

              }
          headers: {}
    get:
      description: Return the Bluetooth settings for a network. <a href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth settings</a> must be enabled on the network.
      summary: getNetworkBluetoothSettings
      tags:
      - Bluetooth settings
      operationId: getNetworkBluetoothSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "scanningEnabled": true,

                "advertisingEnabled": true,

                "uuid": "00000000-0000-0000-000-000000000000",

                "majorMinorAssignmentMode": "Non-unique",

                "major": 1

              }
          headers: {}
  /networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}:
    delete:
      description: Delete an existing quality retention profile for this network.
      summary: deleteNetworkCameraQualityRetentionProfile
      tags:
      - Camera quality retention profiles
      operationId: deleteNetworkCameraQualityRetentionProfile
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: qualityRetentionProfileId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
    put:
      description: Update an existing quality retention profile for this network.
      summary: updateNetworkCameraQualityRetentionProfile
      tags:
      - Camera quality retention profiles
      operationId: updateNetworkCameraQualityRetentionProfile
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: qualityRetentionProfileId
        in: path
        required: true
        type: string
      - name: updateNetworkCameraQualityRetentionProfile
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkCameraQualityRetentionProfile'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "networkId": "N_24329156",

                "name": "Sample quality retention profile",

                "restrictedBandwidthModeEnabled": true,

                "motionBasedRetentionEnabled": false,

                "audioRecordingEnabled": false,

                "cloudArchiveEnabled": false,

                "maxRetentionDays": 7,

                "scheduleId": null,

                "motionDetectorVersion": 2,

                "videoSettings": {

                  "MV32": {

                    "quality": "Enhanced",

                    "resolution": "1080x1080"

                  },

                  "MV21/MV71": {

                    "quality": "High",

                    "resolution": "1280x720"

                  },

                  "MV12/MV22/MV72": {

                    "quality": "High",

                    "resolution": "1920x1080"

                  },

                  "MV12WE": {

                    "quality": "High",

                    "resolution": "1920x1080"

                  }

                }

              }
          headers: {}
    get:
      description: Retrieve a single quality retention profile
      summary: getNetworkCameraQualityRetentionProfile
      tags:
      - Camera quality retention profiles
      operationId: getNetworkCameraQualityRetentionProfile
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: qualityRetentionProfileId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "networkId": "N_24329156",

                "name": "Sample quality retention profile",

                "restrictedBandwidthModeEnabled": true,

                "motionBasedRetentionEnabled": false,

                "audioRecordingEnabled": false,

                "cloudArchiveEnabled": false,

                "maxRetentionDays": 7,

                "scheduleId": null,

                "motionDetectorVersion": 2,

                "videoSettings": {

                  "MV32": {

                    "quality": "Enhanced",

                    "resolution": "1080x1080"

                  },

                  "MV21/MV71": {

                    "quality": "High",

                    "resolution": "1280x720"

                  },

                  "MV12/MV22/MV72": {

                    "quality": "High",

                    "resolution": "1920x1080"

                  },

                  "MV12WE": {

                    "quality": "High",

                    "resolution": "1920x1080"

                  }

                }

              }
          headers: {}
  /networks/{networkId}/camera/qualityRetentionProfiles:
    get:
      description: List the quality retention profiles for this network
      summary: getNetworkCameraQualityRetentionProfiles
      tags:
      - Camera quality retention profiles
      operationId: getNetworkCameraQualityRetentionProfiles
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "Sample quality retention profile",

                  "restrictedBandwidthModeEnabled": true,

                  "motionBasedRetentionEnabled": false,

                  "audioRecordingEnabled": false,

                  "cloudArchiveEnabled": false,

                  "maxRetentionDays": 7,

                  "scheduleId": null,

                  "motionDetectorVersion": 2,

                  "videoSettings": {

                    "MV32": {

                      "quality": "Enhanced",

                      "resolution": "1080x1080"

                    },

                    "MV21/MV71": {

                      "quality": "High",

                      "resolution": "1280x720"

                    },

                    "MV12/MV22/MV72": {

                      "quality": "High",

                      "resolution": "1920x1080"

                    },

                    "MV12WE": {

                      "quality": "High",

                      "resolution": "1920x1080"

                    }

                  }

                }

              ]
          headers: {}
    post:
      description: Creates new quality retention profile for this network.
      summary: createNetworkCameraQualityRetentionProfile
      tags:
      - Camera quality retention profiles
      operationId: createNetworkCameraQualityRetentionProfile
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: createNetworkCameraQualityRetentionProfile
        in: body
        required: true
        schema:
          $ref: '#/definitions/createNetworkCameraQualityRetentionProfile'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "networkId": "N_24329156",

                "name": "Sample quality retention profile",

                "restrictedBandwidthModeEnabled": true,

                "motionBasedRetentionEnabled": false,

                "audioRecordingEnabled": false,

                "cloudArchiveEnabled": false,

                "maxRetentionDays": 7,

                "scheduleId": null,

                "motionDetectorVersion": 2,

                "videoSettings": {

                  "MV32": {

                    "quality": "Enhanced",

                    "resolution": "1080x1080"

                  },

                  "MV21/MV71": {

                    "quality": "High",

                    "resolution": "1280x720"

                  },

                  "MV12/MV22/MV72": {

                    "quality": "High",

                    "resolution": "1920x1080"

                  },

                  "MV12WE": {

                    "quality": "High",

                    "resolution": "1920x1080"

                  }

                }

              }
          headers: {}
  /networks/{networkId}/cameras/{serial}/videoLink:
    get:
      description: Returns video link to the specified camera. If a timestamp is supplied, it links to that timestamp.
      summary: getNetworkCameraVideoLink
      tags:
      - Cameras
      operationId: getNetworkCameraVideoLink
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      - name: timestamp
        in: query
        required: false
        type: string
        description: '[optional] The video link will start at this timestamp. The timestamp is in UNIX Epoch time (milliseconds). If no timestamp is specified, we will assume current time.'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "url": "https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077"

              }
          headers: {}
  /devices/{serial}/camera/qualityAndRetentionSettings:
    put:
      description: Update quality and retention settings for the given camera
      summary: updateDeviceCameraQualityAndRetentionSettings
      tags:
      - Cameras
      operationId: updateDeviceCameraQualityAndRetentionSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      - name: updateDeviceCameraQualityAndRetentionSettings
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateDeviceCameraQualityAndRetentionSettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "motionBasedRetentionEnabled": false,

                "audioRecordingEnabled": false,

                "restrictedBandwidthModeEnabled": false,

                "profileId": null,

                "quality": "Standard",

                "resolution": 720

              }
          headers: {}
    get:
      description: Returns quality and retention settings for the given camera
      summary: getDeviceCameraQualityAndRetentionSettings
      tags:
      - Cameras
      operationId: getDeviceCameraQualityAndRetentionSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "motionBasedRetentionEnabled": false,

                "audioRecordingEnabled": false,

                "restrictedBandwidthModeEnabled": false,

                "profileId": null,

                "quality": "Standard",

                "resolution": 720

              }
          headers: {}
  /networks/{networkId}/cameras/{serial}/snapshot:
    post:
      description: Generate a snapshot of what the camera sees at the specified time and return a link to that image.
      summary: generateNetworkCameraSnapshot
      tags:
      - Cameras
      operationId: generateNetworkCameraSnapshot
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      - name: generateNetworkCameraSnapshot
        in: body
        required: false
        schema:
          $ref: '#/definitions/generateNetworkCameraSnapshot'
      responses:
        202:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "url": "https://spn4.meraki.com/stream/jpeg/snapshot/b2d123asdf423qd22d2",

                "expiry": "Access to the image will expire at 2018-12-11T03:12:39Z."

              }
          headers: {}
  /networks/{networkId}/camera/schedules:
    get:
      description: Returns a list of all camera recording schedules.
      summary: getNetworkCameraSchedules
      tags:
      - Cameras
      operationId: getNetworkCameraSchedules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "123",

                  "name": "Weekday schedule"

                },

                {

                  "id": "124",

                  "name": "Office hours"

                }

              ]
          headers: {}
  /organizations/{organizationId}/configurationChanges:
    get:
      description: View the Change Log for your organization
      summary: getOrganizationConfigurationChanges
      tags:
      - Change log
      operationId: getOrganizationConfigurationChanges
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 365 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 365 days.
      - name: perPage
        in: query
        required: false
        type: integer
        format: int32
        description: The number of entries per page returned. Acceptable range is 3 - 5000. Default is 5000.
      - name: startingAfter
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: endingBefore
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: networkId
        in: query
        required: false
        type: string
        description: Filters on the given network
      - name: adminId
        in: query
        required: false
        type: string
        description: Filters on the given Admin
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "ts": "2018-02-11T00:00:00.090210Z",

                  "adminName": "Miles Meraki",

                  "adminEmail": "miles@meraki.com",

                  "adminId": "212406",

                  "page": "via API",

                  "label": "PUT /api/v1/organizations/2930418",

                  "oldValue": "{\"id\":\"2930418\",\"name\":\"My organization\",\"url\":\"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\"}",

                  "newValue": "{\"id\":\"2930418\",\"name\":\"My organization changed\",\"url\":\"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\"}"

                }

              ]
          headers: {}
  /networks/{networkId}/clients/{clientId}/splashAuthorizationStatus:
    get:
      description: Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      summary: getNetworkClientSplashAuthorizationStatus
      tags:
      - Clients
      operationId: getNetworkClientSplashAuthorizationStatus
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: clientId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "ssids": {

                  "0": {

                    "isAuthorized": true,

                    "authorizedAt": "2017-07-19 16:24:13 UTC",

                    "expiresAt": "2017-07-20 16:24:13 UTC"

                  },

                  "2": {

                    "isAuthorized": false

                  }

                }

              }
          headers: {}
    put:
      description: Update a client's splash authorization. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      summary: updateNetworkClientSplashAuthorizationStatus
      tags:
      - Clients
      operationId: updateNetworkClientSplashAuthorizationStatus
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: clientId
        in: path
        required: true
        type: string
      - name: updateNetworkClientSplashAuthorizationStatus
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateNetworkClientSplashAuthorizationStatus'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "ssids": {

                  "0": {

                    "isAuthorized": true,

                    "authorizedAt": "2017-07-19 16:24:13 UTC",

                    "expiresAt": "2017-07-20 16:24:13 UTC"

                  },

                  "2": {

                    "isAuthorized": false

                  }

                }

              }
          headers: {}
  /networks/{networkId}/clients/{clientId}:
    get:
      description: Return the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      summary: getNetworkClient
      tags:
      - Clients
      operationId: getNetworkClient
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: clientId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "k74272e",

                "description": "Miles's phone",

                "mac": "22:33:44:55:66:77",

                "ip": "1.2.3.4",

                "user": "null",

                "vlan": "255",

                "switchport": null,

                "ip6": "",

                "firstSeen": 1518365681,

                "lastSeen": 1526087474,

                "manufacturer": "Apple",

                "os": "iOS",

                "ssid": "My SSID",

                "wirelessCapabilities": "802.11ac - 2.4 and 5 GHz",

                "smInstalled": true,

                "recentDeviceMac": "00:11:22:33:44:55",

                "clientVpnConnections": [

                  {

                    "remoteIp": "1.2.3.4",

                    "connectedAt": 1522613355,

                    "disconnectedAt": 1522613360

                  }

                ],

                "lldp": [

                  [

                    "System name",

                    "Some system name"

                  ],

                  [

                    "System description",

                    "Some system description"

                  ],

                  [

                    "Port ID",

                    "1"

                  ],

                  [

                    "Chassis ID",

                    "00:18:0a:00:00:00"

                  ],

                  [

                    "Port description",

                    "eth0"

                  ],

                  [

                    "System capabilities",

                    "Two-port MAC Relay"

                  ]

                ],

                "cdp": null,

                "status": "Online"

              }
          headers: {}
  /networks/{networkId}/clients/{clientId}/usageHistory:
    get:
      description: Return the client's daily usage history. Usage data is in kilobytes. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      summary: getNetworkClientUsageHistory
      tags:
      - Clients
      operationId: getNetworkClientUsageHistory
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: clientId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "sent": 500,

                  "received": 680,

                  "ts": 1518365681

                }

              ]
          headers: {}
  /devices/{serial}/clients:
    get:
      description: List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.
      summary: getDeviceClients
      tags:
      - Clients
      operationId: getDeviceClients
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "usage": {

                    "sent": 138.0,

                    "recv": 61.0

                  },

                  "id": "k74272e",

                  "description": "Miles's phone",

                  "mac": "22:33:44:55:66:77",

                  "ip": "1.2.3.4",

                  "user": "milesmeraki",

                  "vlan": 255,

                  "switchport": null,

                  "mdnsName": "Miles's phone",

                  "dhcpHostname": "MilesPhone"

                }

              ]
          headers: {}
  /networks/{networkId}/clients/{clientId}/events:
    get:
      description: Return the events associated with this client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      summary: getNetworkClientEvents
      tags:
      - Clients
      operationId: getNetworkClientEvents
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: clientId
        in: path
        required: true
        type: string
      - name: perPage
        in: query
        required: false
        type: integer
        format: int32
        description: The number of entries per page returned. Acceptable range is 3 - 100. Default is 100.
      - name: startingAfter
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: endingBefore
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "deviceSerial": "Q234-ABCD-5678",

                  "occurredAt": 1518365681,

                  "type": "l3roaming_assoc_start",

                  "details": {

                    "vap": "1",

                    "on_packet": "true"

                  }

                }

              ]
          headers: {}
  /networks/{networkId}/clients/{clientId}/policy:
    put:
      description: Update the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      summary: updateNetworkClientPolicy
      tags:
      - Clients
      operationId: updateNetworkClientPolicy
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: clientId
        in: path
        required: true
        type: string
      - name: updateNetworkClientPolicy
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateNetworkClientPolicy'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "mac": "00:11:22:33:44:55",

                "type": "Group policy",

                "groupPolicyId": "101"

              }
          headers: {}
    get:
      description: Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      summary: getNetworkClientPolicy
      tags:
      - Clients
      operationId: getNetworkClientPolicy
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: clientId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "mac": "00:11:22:33:44:55",

                "type": "Group policy",

                "groupPolicyId": "101"

              }
          headers: {}
  /networks/{networkId}/clients/provision:
    post:
      description: Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.
      summary: provisionNetworkClients
      tags:
      - Clients
      operationId: provisionNetworkClients
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: provisionNetworkClients
        in: body
        required: true
        schema:
          $ref: '#/definitions/provisionNetworkClients'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "mac": "00:11:22:33:44:55",

                "clientId": "k74272e",

                "name": "Miles's phone",

                "devicePolicy": "Group policy",

                "groupPolicyId": "101"

              }
          headers: {}
  /networks/{networkId}/clients/{clientId}/latencyHistory:
    get:
      description: 'Return the latency history for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds.'
      summary: getNetworkClientLatencyHistory
      tags:
      - Clients
      operationId: getNetworkClientLatencyHistory
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: clientId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 791 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 791 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day.
      - name: resolution
        in: query
        required: false
        type: integer
        format: int32
        description: 'The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400.'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "t0": 1550534400,

                  "t1": 1550620800,

                  "latencyBinsByCategory": {

                    "backgroundTraffic": {

                      "0.5": 41750,

                      "1.0": 21552,

                      "2.0": 59940,

                      "4.0": 146622,

                      "8.0": 57354,

                      "16.0": 0,

                      "32.0": 9954,

                      "64.0": 0,

                      "128.0": 0,

                      "256.0": 1896,

                      "512.0": 0,

                      "1024.0": 0,

                      "2048.0": 0

                    },

                    "bestEffortTraffic": {

                      "0.5": 1840899,

                      "1.0": 1644506,

                      "2.0": 629958,

                      "4.0": 449564,

                      "8.0": 2009658,

                      "16.0": 1329568,

                      "32.0": 282168,

                      "64.0": 97573,

                      "128.0": 191977,

                      "256.0": 30560,

                      "512.0": 26032,

                      "1024.0": 4943,

                      "2048.0": 12072

                    },

                    "videoTraffic": {

                      "0.5": 0,

                      "1.0": 0,

                      "2.0": 0,

                      "4.0": 0,

                      "8.0": 0,

                      "16.0": 0,

                      "32.0": 0,

                      "64.0": 0,

                      "128.0": 0,

                      "256.0": 0,

                      "512.0": 0,

                      "1024.0": 0,

                      "2048.0": 0

                    },

                    "voiceTraffic": {

                      "0.5": 716,

                      "1.0": 948,

                      "2.0": 474,

                      "4.0": 78,

                      "8.0": 0,

                      "16.0": 0,

                      "32.0": 0,

                      "64.0": 0,

                      "128.0": 0,

                      "256.0": 0,

                      "512.0": 0,

                      "1024.0": 0,

                      "2048.0": 0

                    }

                  }

                }

              ]
          headers: {}
  /networks/{networkId}/clients:
    get:
      description: List the clients that have used this network in the timespan
      summary: getNetworkClients
      tags:
      - Clients
      operationId: getNetworkClients
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
      - name: perPage
        in: query
        required: false
        type: integer
        format: int32
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10.
      - name: startingAfter
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: endingBefore
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "usage": {

                    "sent": 138.0,

                    "recv": 61.0

                  },

                  "id": "k74272e",

                  "description": "Miles's phone",

                  "mac": "22:33:44:55:66:77",

                  "ip": "1.2.3.4",

                  "user": "milesmeraki",

                  "vlan": 255,

                  "switchport": null,

                  "ip6": "",

                  "firstSeen": 1518365681,

                  "lastSeen": 1526087474,

                  "manufacturer": "Apple",

                  "os": "iOS",

                  "recentDeviceSerial": "Q234-ABCD-5678",

                  "recentDeviceName": "My AP",

                  "recentDeviceMac": "00:11:22:33:44:55",

                  "ssid": "My SSID",

                  "status": "Online"

                }

              ]
          headers: {}
  /networks/{networkId}/clients/{clientId}/trafficHistory:
    get:
      description: Return the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      summary: getNetworkClientTrafficHistory
      tags:
      - Clients
      operationId: getNetworkClientTrafficHistory
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: clientId
        in: path
        required: true
        type: string
      - name: perPage
        in: query
        required: false
        type: integer
        format: int32
        description: The number of entries per page returned. Acceptable range is 3 - 1000.
      - name: startingAfter
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: endingBefore
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "ts": 1518365681,

                  "application": "Google",

                  "destination": "www.google.com",

                  "protocol": "UDP",

                  "port": 443,

                  "recv": 383,

                  "sent": 56,

                  "numFlows": 5,

                  "activeSeconds": 240

                }

              ]
          headers: {}
  /organizations/{organizationId}/configTemplates:
    get:
      description: List the configuration templates for this organization
      summary: getOrganizationConfigTemplates
      tags:
      - Config templates
      operationId: getOrganizationConfigTemplates
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "N_24329156",

                  "name": "My config template",

                  "productTypes": [

                    "appliance",

                    "switch",

                    "wireless"

                  ]

                }

              ]
          headers: {}
  /organizations/{organizationId}/configTemplates/{configTemplateId}:
    delete:
      description: Remove a configuration template
      summary: deleteOrganizationConfigTemplate
      tags:
      - Config templates
      operationId: deleteOrganizationConfigTemplate
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: configTemplateId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
  /networks/{networkId}/connectivityMonitoringDestinations:
    get:
      description: Return the connectivity testing destinations for an MX network
      summary: getNetworkConnectivityMonitoringDestinations
      tags:
      - Connectivity monitoring destinations
      operationId: getNetworkConnectivityMonitoringDestinations
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "destinations": [

                  {

                    "ip": "8.8.8.8",

                    "description": "Google",

                    "default": false

                  },

                  {

                    "ip": "1.23.45.67",

                    "description": "test description",

                    "default": true

                  },

                  {

                    "ip": "9.8.7.6",

                    "description": null,

                    "default": false

                  }

                ]

              }
          headers: {}
    put:
      description: Update the connectivity testing destinations for an MX network
      summary: updateNetworkConnectivityMonitoringDestinations
      tags:
      - Connectivity monitoring destinations
      operationId: updateNetworkConnectivityMonitoringDestinations
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkConnectivityMonitoringDestinations
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkConnectivityMonitoringDestinations'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "destinations": [

                  {

                    "ip": "8.8.8.8",

                    "description": "Google",

                    "default": false

                  },

                  {

                    "ip": "1.23.45.67",

                    "description": "test description",

                    "default": true

                  },

                  {

                    "ip": "9.8.7.6",

                    "description": null,

                    "default": false

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/contentFiltering/categories:
    get:
      description: List all available content filtering categories for an MX network
      summary: getNetworkContentFilteringCategories
      tags:
      - Content filtering categories
      operationId: getNetworkContentFilteringCategories
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "categories": [

                  {

                    "id": "meraki:contentFiltering/category/1",

                    "name": "Real Estate"

                  },

                  {

                    "id": "meraki:contentFiltering/category/3",

                    "name": "Financial Services"

                  },

                  "...",

                  {

                    "id": "meraki:contentFiltering/category/11",

                    "name": "Adult and Pornography"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/contentFiltering:
    get:
      description: Return the content filtering settings for an MX network
      summary: getNetworkContentFiltering
      tags:
      - Content filtering rules
      operationId: getNetworkContentFiltering
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "allowedUrlPatterns": [

                  "http://www.example.org",

                  "http://help.com.au"

                ],

                "blockedUrlPatterns": [

                  "http://www.example.com",

                  "http://www.betting.com"

                ],

                "blockedUrlCategories": [

                  {

                    "id": "meraki:contentFiltering/category/1",

                    "name": "Real Estate"

                  },

                  {

                    "id": "meraki:contentFiltering/category/7",

                    "name": "Shopping"

                  }

                ],

                "urlCategoryListSize": "topSites"

              }
          headers: {}
    put:
      description: Update the content filtering settings for an MX network
      summary: updateNetworkContentFiltering
      tags:
      - Content filtering rules
      operationId: updateNetworkContentFiltering
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkContentFiltering
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkContentFiltering'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "allowedUrlPatterns": [

                  "http://www.example.org",

                  "http://help.com.au"

                ],

                "blockedUrlPatterns": [

                  "http://www.example.com",

                  "http://www.betting.com"

                ],

                "blockedUrlCategories": [

                  {

                    "id": "meraki:contentFiltering/category/1",

                    "name": "Real Estate"

                  },

                  {

                    "id": "meraki:contentFiltering/category/7",

                    "name": "Shopping"

                  }

                ],

                "urlCategoryListSize": "topSites"

              }
          headers: {}
  /organizations/{organizationId}/brandingPolicies/{brandingPolicyId}:
    get:
      description: Return a branding policy
      summary: getOrganizationBrandingPolicy
      tags:
      - Dashboard branding policies
      operationId: getOrganizationBrandingPolicy
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: brandingPolicyId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "brandingPolicyId": "456",

                "name": "My Branding Policy",

                "enabled": true,

                "adminSettings": {

                  "appliesTo": "All admins of networks...",

                  "values": [

                    "N_1234",

                    "L_5678"

                  ]

                },

                "helpSettings": {

                  "helpTab": "show",

                  "getHelpSubtab": "default or inherit",

                  "communitySubtab": "show",

                  "casesSubtab": "hide",

                  "dataProtectionRequestsSubtab": "default or inherit",

                  "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",

                  "universalSearchKnowledgeBaseSearch": "hide",

                  "ciscoMerakiProductDocumentation": "show",

                  "supportContactInfo": "show",

                  "newFeaturesSubtab": "show",

                  "firewallInfoSubtab": "hide",

                  "apiDocsSubtab": "default or inherit",

                  "hardwareReplacementsSubtab": "hide",

                  "smForums": "hide"

                }

              }
          headers: {}
    put:
      description: Update a branding policy
      summary: updateOrganizationBrandingPolicy
      tags:
      - Dashboard branding policies
      operationId: updateOrganizationBrandingPolicy
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: brandingPolicyId
        in: path
        required: true
        type: string
      - name: updateOrganizationBrandingPolicy
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateOrganizationBrandingPolicy'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "brandingPolicyId": "456",

                "name": "My Branding Policy",

                "enabled": true,

                "adminSettings": {

                  "appliesTo": "All admins of networks...",

                  "values": [

                    "N_1234",

                    "L_5678"

                  ]

                },

                "helpSettings": {

                  "helpTab": "show",

                  "getHelpSubtab": "default or inherit",

                  "communitySubtab": "show",

                  "casesSubtab": "hide",

                  "dataProtectionRequestsSubtab": "default or inherit",

                  "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",

                  "universalSearchKnowledgeBaseSearch": "hide",

                  "ciscoMerakiProductDocumentation": "show",

                  "supportContactInfo": "show",

                  "newFeaturesSubtab": "show",

                  "firewallInfoSubtab": "hide",

                  "apiDocsSubtab": "default or inherit",

                  "hardwareReplacementsSubtab": "hide",

                  "smForums": "hide"

                }

              }
          headers: {}
    delete:
      description: Delete a branding policy
      summary: deleteOrganizationBrandingPolicy
      tags:
      - Dashboard branding policies
      operationId: deleteOrganizationBrandingPolicy
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: brandingPolicyId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
  /organizations/{organizationId}/brandingPolicies:
    post:
      description: Add a new branding policy to an organization
      summary: createOrganizationBrandingPolicy
      tags:
      - Dashboard branding policies
      operationId: createOrganizationBrandingPolicy
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: createOrganizationBrandingPolicy
        in: body
        required: true
        schema:
          $ref: '#/definitions/createOrganizationBrandingPolicy'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "brandingPolicyId": "456",

                "name": "My Branding Policy",

                "enabled": true,

                "adminSettings": {

                  "appliesTo": "All admins of networks...",

                  "values": [

                    "N_1234",

                    "L_5678"

                  ]

                },

                "helpSettings": {

                  "helpTab": "show",

                  "getHelpSubtab": "default or inherit",

                  "communitySubtab": "show",

                  "casesSubtab": "hide",

                  "dataProtectionRequestsSubtab": "default or inherit",

                  "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",

                  "universalSearchKnowledgeBaseSearch": "hide",

                  "ciscoMerakiProductDocumentation": "show",

                  "supportContactInfo": "show",

                  "newFeaturesSubtab": "show",

                  "firewallInfoSubtab": "hide",

                  "apiDocsSubtab": "default or inherit",

                  "hardwareReplacementsSubtab": "hide",

                  "smForums": "hide"

                }

              }
          headers: {}
    get:
      description: List the branding policies of an organization
      summary: getOrganizationBrandingPolicies
      tags:
      - Dashboard branding policies
      operationId: getOrganizationBrandingPolicies
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "brandingPolicyId": "456",

                  "name": "My Branding Policy",

                  "enabled": true,

                  "adminSettings": {

                    "appliesTo": "All admins of networks...",

                    "values": [

                      "N_1234",

                      "L_5678"

                    ]

                  },

                  "helpSettings": {

                    "helpTab": "show",

                    "getHelpSubtab": "default or inherit",

                    "communitySubtab": "show",

                    "casesSubtab": "hide",

                    "dataProtectionRequestsSubtab": "default or inherit",

                    "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",

                    "universalSearchKnowledgeBaseSearch": "hide",

                    "ciscoMerakiProductDocumentation": "show",

                    "supportContactInfo": "show",

                    "newFeaturesSubtab": "show",

                    "firewallInfoSubtab": "hide",

                    "apiDocsSubtab": "default or inherit",

                    "hardwareReplacementsSubtab": "hide",

                    "smForums": "hide"

                  }

                }

              ]
          headers: {}
  /organizations/{organizationId}/brandingPolicies/priorities:
    put:
      description: Update the priority ordering of an organization's branding policies.
      summary: updateOrganizationBrandingPoliciesPriorities
      tags:
      - Dashboard branding policies
      operationId: updateOrganizationBrandingPoliciesPriorities
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: updateOrganizationBrandingPoliciesPriorities
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateOrganizationBrandingPoliciesPriorities'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "brandingPolicyIds": [

                  "123",

                  "456",

                  "789"

                ]

              }
          headers: {}
    get:
      description: Return the branding policy IDs of an organization in priority order. IDs are ordered in ascending order of priority (IDs later in the array have higher priority).
      summary: getOrganizationBrandingPoliciesPriorities
      tags:
      - Dashboard branding policies
      operationId: getOrganizationBrandingPoliciesPriorities
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "brandingPolicyIds": [

                  "123",

                  "456",

                  "789"

                ]

              }
          headers: {}
  /networks/{networkId}/devices/claim:
    post:
      description: Claim devices into a network
      summary: claimNetworkDevices
      tags:
      - Devices
      operationId: claimNetworkDevices
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: claimNetworkDevices
        in: body
        required: false
        schema:
          $ref: '#/definitions/claimNetworkDevices'
      responses:
        200:
          description: Successful operation
          headers: {}
  /networks/{networkId}/devices/{serial}/blinkLeds:
    post:
      description: Blink the LEDs on a device
      summary: blinkNetworkDeviceLeds
      tags:
      - Devices
      operationId: blinkNetworkDeviceLeds
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      - name: blinkNetworkDeviceLeds
        in: body
        required: false
        schema:
          $ref: '#/definitions/blinkNetworkDeviceLeds'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "sentToDevice": true

              }
          headers: {}
  /devices/{serial}/switch/ports/cycle:
    post:
      description: Cycle a set of switch ports
      summary: cycleDeviceSwitchPorts
      tags:
      - Devices
      operationId: cycleDeviceSwitchPorts
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      - name: cycleDeviceSwitchPorts
        in: body
        required: true
        schema:
          $ref: '#/definitions/cycleDeviceSwitchPorts'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "ports": [

                  "1",

                  "2-5",

                  "1_MA-MOD-8X10G_1",

                  "1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8"

                ]

              }
          headers: {}
  /networks/{networkId}/devices/{serial}:
    put:
      description: Update the attributes of a device
      summary: updateNetworkDevice
      tags:
      - Devices
      operationId: updateNetworkDevice
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      - name: updateNetworkDevice
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkDevice'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "name": "My AP",

                "lat": 37.4180951010362,

                "lng": -122.098531723022,

                "serial": "Q234-ABCD-5678",

                "mac": "00:11:22:33:44:55",

                "model": "MR34",

                "address": "1600 Pennsylvania Ave",

                "notes": "My AP's note",

                "lanIp": "1.2.3.4",

                "tags": " recently-added ",

                "networkId": "N_24329156",

                "beaconIdParams": {

                  "uuid": "00000000-0000-0000-0000-000000000000",

                  "major": 5,

                  "minor": 3

                },

                "firmware": "wireless-25-14",

                "floorPlanId": "g_1234567"

              }
          headers: {}
    get:
      description: Return a single device
      summary: getNetworkDevice
      tags:
      - Devices
      operationId: getNetworkDevice
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "name": "My AP",

                "lat": 37.4180951010362,

                "lng": -122.098531723022,

                "serial": "Q234-ABCD-5678",

                "mac": "00:11:22:33:44:55",

                "model": "MR34",

                "address": "1600 Pennsylvania Ave",

                "notes": "My AP's note",

                "lanIp": "1.2.3.4",

                "tags": " recently-added ",

                "networkId": "N_24329156",

                "beaconIdParams": {

                  "uuid": "00000000-0000-0000-0000-000000000000",

                  "major": 5,

                  "minor": 3

                },

                "firmware": "wireless-25-14",

                "floorPlanId": "g_1234567"

              }
          headers: {}
  /networks/{networkId}/devices/{serial}/lossAndLatencyHistory:
    get:
      description: Get the uplink loss percentage and latency in milliseconds for a wired network device.
      summary: getNetworkDeviceLossAndLatencyHistory
      tags:
      - Devices
      operationId: getNetworkDeviceLossAndLatencyHistory
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
      - name: resolution
        in: query
        required: false
        type: integer
        format: int32
        description: 'The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60.'
      - name: uplink
        in: query
        required: false
        enum:
        - wan1
        - wan2
        - cellular
        type: string
        description: The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, cellular. The default is wan1.
      - name: ip
        in: query
        required: true
        type: string
        description: The destination IP used to obtain the requested stats. This is required.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "startTime": "2018-10-09T22:18:27Z",

                  "endTime": "2018-10-09T22:19:27Z",

                  "lossPercent": 5,

                  "latencyMs": 324

                },

                {

                  "startTime": "2018-10-09T22:19:27Z",

                  "endTime": "2018-10-09T22:20:27Z",

                  "lossPercent": 1,

                  "latencyMs": 43

                },

                {

                  "startTime": "2018-10-09T22:20:27Z",

                  "endTime": "2018-10-09T22:21:27Z",

                  "lossPercent": 0,

                  "latencyMs": 44

                }

              ]
          headers: {}
  /networks/{networkId}/devices:
    get:
      description: List the devices in a network
      summary: getNetworkDevices
      tags:
      - Devices
      operationId: getNetworkDevices
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "name": "My AP",

                  "lat": 37.4180951010362,

                  "lng": -122.098531723022,

                  "serial": "Q234-ABCD-5678",

                  "mac": "00:11:22:33:44:55",

                  "model": "MR34",

                  "address": "1600 Pennsylvania Ave",

                  "notes": "My AP's note",

                  "lanIp": "1.2.3.4",

                  "tags": " recently-added ",

                  "networkId": "N_24329156",

                  "beaconIdParams": {

                    "uuid": "00000000-0000-0000-0000-000000000000",

                    "major": 5,

                    "minor": 3

                  },

                  "firmware": "wireless-25-14",

                  "floorPlanId": "g_1234567"

                }

              ]
          headers: {}
  /networks/{networkId}/devices/{serial}/lldp_cdp:
    get:
      description: List LLDP and CDP information for a device
      summary: getNetworkDeviceLldp_cdp
      tags:
      - Devices
      operationId: getNetworkDeviceLldp_cdp
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      - name: timespan
        in: query
        required: false
        type: integer
        format: int32
        description: The timespan for which LLDP and CDP information will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds). LLDP and CDP information is sent to the Meraki dashboard every 10 minutes. In instances where this LLDP and CDP information matches an existing entry in the Meraki dashboard, the data is updated once every two hours. Meraki recommends querying LLDP and CDP information at an interval slightly greater than two hours, to ensure that unchanged CDP / LLDP information can be queried consistently.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "sourceMac": "00:11:22:33:44:55",

                "ports": {

                  "8": {

                    "cdp": {

                      "deviceId": "e0553d8cdf53",

                      "portId": "Port 10",

                      "address": "00:11:22:33:44:55",

                      "sourcePort": "8"

                    }

                  },

                  "12": {

                    "cdp": {

                      "deviceId": "e0553d8cdf53",

                      "portId": "Port 11",

                      "address": "00:11:22:33:44:55",

                      "sourcePort": "12"

                    },

                    "lldp": {

                      "systemName": "Meraki MS350-24X - Phineas",

                      "portId": "11",

                      "managementAddress": "00:11:22:33:44:55",

                      "sourcePort": "12"

                    }

                  }

                }

              }
          headers: {}
  /networks/{networkId}/devices/{serial}/performance:
    get:
      description: Return the performance score for a single device. Only primary MX devices supported. If no data is available, a 204 error code is returned.
      summary: getNetworkDevicePerformance
      tags:
      - Devices
      operationId: getNetworkDevicePerformance
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "perfScore": 10

              }
          headers: {}
  /networks/{networkId}/devices/{serial}/uplink:
    get:
      description: Return the uplink information for a device.
      summary: getNetworkDeviceUplink
      tags:
      - Devices
      operationId: getNetworkDeviceUplink
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "interface": "WAN 1",

                  "status": "Active",

                  "ip": "1.2.3.4",

                  "gateway": "1.2.3.5",

                  "publicIp": "123.123.123.1",

                  "dns": "8.8.8.8, 8.8.4.4",

                  "usingStaticIp": false

                }

              ]
          headers: {}
  /networks/{networkId}/devices/{serial}/reboot:
    post:
      description: Reboot a device
      summary: rebootNetworkDevice
      tags:
      - Devices
      operationId: rebootNetworkDevice
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "success": true

              }
          headers: {}
  /organizations/{organizationId}/devices:
    get:
      description: List the devices in an organization
      summary: getOrganizationDevices
      tags:
      - Devices
      operationId: getOrganizationDevices
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: perPage
        in: query
        required: false
        type: integer
        format: int32
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
      - name: startingAfter
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: endingBefore
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: configurationUpdatedAfter
        in: query
        required: false
        type: string
        description: Filter results by whether or not the device's configuration has been updated after the given timestamp
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "name": "My AP",

                  "lat": 37.4180951010362,

                  "lng": -122.098531723022,

                  "address": "1600 Pennsylvania Ave",

                  "notes": "My AP's note",

                  "tags": " recently-added ",

                  "networkId": "N_24329156",

                  "serial": "Q234-ABCD-5678",

                  "model": "MR34",

                  "mac": "00:11:22:33:44:55",

                  "lanIp": "1.2.3.4",

                  "firmware": "wireless-25-14"

                }

              ]
          headers: {}
  /networks/{networkId}/devices/{serial}/remove:
    post:
      description: Remove a single device
      summary: removeNetworkDevice
      tags:
      - Devices
      operationId: removeNetworkDevice
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
  /networks/{networkId}/events:
    get:
      description: List the events for the network
      summary: getNetworkEvents
      tags:
      - Events
      operationId: getNetworkEvents
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: productType
        in: query
        required: false
        type: string
        description: The product type to fetch events for. This parameter is required for networks with multiple device types. Valid types are wireless, appliance, switch, systemsManager, camera, and cellularGateway
      - name: includedEventTypes
        in: query
        required: false
        type: array
        items:
          type: string
        description: A list of event types. The returned events will be filtered to only include events with these types.
      - name: excludedEventTypes
        in: query
        required: false
        type: array
        items:
          type: string
        description: A list of event types. The returned events will be filtered to exclude events with these types.
      - name: deviceMac
        in: query
        required: false
        type: string
        description: The MAC address of the Meraki device which the list of events will be filtered with
      - name: deviceSerial
        in: query
        required: false
        type: string
        description: The serial of the Meraki device which the list of events will be filtered with
      - name: deviceName
        in: query
        required: false
        type: string
        description: The name of the Meraki device which the list of events will be filtered with
      - name: clientIp
        in: query
        required: false
        type: string
        description: The IP of the client which the list of events will be filtered with. Only supported for track-by-IP networks.
      - name: clientMac
        in: query
        required: false
        type: string
        description: The MAC address of the client which the list of events will be filtered with. Only supported for track-by-MAC networks.
      - name: clientName
        in: query
        required: false
        type: string
        description: The name, or partial name, of the client which the list of events will be filtered with
      - name: smDeviceMac
        in: query
        required: false
        type: string
        description: The MAC address of the Systems Manager device which the list of events will be filtered with
      - name: smDeviceName
        in: query
        required: false
        type: string
        description: The name of the Systems Manager device which the list of events will be filtered with
      - name: perPage
        in: query
        required: false
        type: integer
        format: int32
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10.
      - name: startingAfter
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: endingBefore
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "message": null,

                "pageStartAt": "2018-02-11T00:00:00.090210Z",

                "pageEndAt": "2018-02-11T00:00:00.090210Z",

                "events": [

                  {

                    "occurredAt": "2018-02-11T00:00:00.090210Z",

                    "networkId": "N_24329156",

                    "type": "association",

                    "description": "802.11 association",

                    "clientId": "k74272e",

                    "clientDescription": "Miles's phone",

                    "deviceSerial": "Q234-ABCD-5678",

                    "deviceName": "My AP",

                    "ssidNumber": 1,

                    "ssidName": "My SSID",

                    "eventData": {

                      "radio": "1",

                      "vap": "1",

                      "client_mac": "22:33:44:55:66:77",

                      "client_ip": "1.2.3.4",

                      "channel": "36",

                      "rssi": "12",

                      "aid": "2104009183"

                    }

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/events/eventTypes:
    get:
      description: List the event type to human-readable description
      summary: getNetworkEventsEventTypes
      tags:
      - Events
      operationId: getNetworkEventsEventTypes
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "category": "802.11",

                  "type": "association",

                  "description": "802.11 association"

                }

              ]
          headers: {}
  /networks/{networkId}/firewalledServices/{service}:
    get:
      description: Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')
      summary: getNetworkFirewalledService
      tags:
      - Firewalled services
      operationId: getNetworkFirewalledService
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: service
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "service": "web",

                "access": "restricted",

                "allowedIps": [

                  "123.123.123.1"

                ]

              }
          headers: {}
    put:
      description: Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')
      summary: updateNetworkFirewalledService
      tags:
      - Firewalled services
      operationId: updateNetworkFirewalledService
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: service
        in: path
        required: true
        type: string
      - name: updateNetworkFirewalledService
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateNetworkFirewalledService'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "service": "web",

                "access": "restricted",

                "allowedIps": [

                  "123.123.123.1"

                ]

              }
          headers: {}
  /networks/{networkId}/firewalledServices:
    get:
      description: List the appliance services and their accessibility rules
      summary: getNetworkFirewalledServices
      tags:
      - Firewalled services
      operationId: getNetworkFirewalledServices
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "service": "web",

                  "access": "restricted",

                  "allowedIps": [

                    "123.123.123.1"

                  ]

                }

              ]
          headers: {}
  /networks/{networkId}/floorPlans:
    post:
      description: Upload a floor plan
      summary: createNetworkFloorPlan
      tags:
      - Floorplans
      operationId: createNetworkFloorPlan
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: createNetworkFloorPlan
        in: body
        required: true
        schema:
          $ref: '#/definitions/createNetworkFloorPlan'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "floorPlanId": "g_1234567",

                "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",

                "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",

                "imageExtension": "png",

                "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",

                "name": "HQ Floor Plan",

                "devices": [

                  {

                    "name": "My AP",

                    "lat": 37.4180951010362,

                    "lng": -122.098531723022,

                    "serial": "Q234-ABCD-5678",

                    "mac": "00:11:22:33:44:55",

                    "model": "MR34",

                    "address": "1600 Pennsylvania Ave",

                    "notes": "My AP's note",

                    "lanIp": "1.2.3.4",

                    "tags": " recently-added ",

                    "networkId": "N_24329156",

                    "beaconIdParams": {

                      "uuid": "00000000-0000-0000-0000-000000000000",

                      "major": 5,

                      "minor": 3

                    },

                    "firmware": "wireless-25-14",

                    "floorPlanId": "g_1234567"

                  }

                ],

                "width": 100,

                "height": 150,

                "center": {

                  "lat": 37.770040510499996,

                  "lng": -122.38714009525

                },

                "bottomLeftCorner": {

                  "lat": 37.7696461495,

                  "lng": -122.3880815506

                },

                "bottomRightCorner": {

                  "lat": 37.771524649766654,

                  "lng": -122.38795275055205

                },

                "topLeftCorner": {

                  "lat": 37.769700101836364,

                  "lng": -122.3888684251381

                },

                "topRightCorner": {

                  "lat": 37.77157860210302,

                  "lng": -122.38873962509013

                }

              }
          headers: {}
    get:
      description: List the floor plans that belong to your network
      summary: getNetworkFloorPlans
      tags:
      - Floorplans
      operationId: getNetworkFloorPlans
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "floorPlanId": "g_1234567",

                  "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",

                  "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",

                  "imageExtension": "png",

                  "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",

                  "name": "HQ Floor Plan",

                  "devices": [

                    {

                      "name": "My AP",

                      "lat": 37.4180951010362,

                      "lng": -122.098531723022,

                      "serial": "Q234-ABCD-5678",

                      "mac": "00:11:22:33:44:55",

                      "model": "MR34",

                      "address": "1600 Pennsylvania Ave",

                      "notes": "My AP's note",

                      "lanIp": "1.2.3.4",

                      "tags": " recently-added ",

                      "networkId": "N_24329156",

                      "beaconIdParams": {

                        "uuid": "00000000-0000-0000-0000-000000000000",

                        "major": 5,

                        "minor": 3

                      },

                      "firmware": "wireless-25-14",

                      "floorPlanId": "g_1234567"

                    }

                  ],

                  "width": 100,

                  "height": 150,

                  "center": {

                    "lat": 37.770040510499996,

                    "lng": -122.38714009525

                  },

                  "bottomLeftCorner": {

                    "lat": 37.7696461495,

                    "lng": -122.3880815506

                  },

                  "bottomRightCorner": {

                    "lat": 37.771524649766654,

                    "lng": -122.38795275055205

                  },

                  "topLeftCorner": {

                    "lat": 37.769700101836364,

                    "lng": -122.3888684251381

                  },

                  "topRightCorner": {

                    "lat": 37.77157860210302,

                    "lng": -122.38873962509013

                  }

                }

              ]
          headers: {}
  /networks/{networkId}/floorPlans/{floorPlanId}:
    get:
      description: Find a floor plan by ID
      summary: getNetworkFloorPlan
      tags:
      - Floorplans
      operationId: getNetworkFloorPlan
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: floorPlanId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "floorPlanId": "g_1234567",

                "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",

                "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",

                "imageExtension": "png",

                "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",

                "name": "HQ Floor Plan",

                "devices": [

                  {

                    "name": "My AP",

                    "lat": 37.4180951010362,

                    "lng": -122.098531723022,

                    "serial": "Q234-ABCD-5678",

                    "mac": "00:11:22:33:44:55",

                    "model": "MR34",

                    "address": "1600 Pennsylvania Ave",

                    "notes": "My AP's note",

                    "lanIp": "1.2.3.4",

                    "tags": " recently-added ",

                    "networkId": "N_24329156",

                    "beaconIdParams": {

                      "uuid": "00000000-0000-0000-0000-000000000000",

                      "major": 5,

                      "minor": 3

                    },

                    "firmware": "wireless-25-14",

                    "floorPlanId": "g_1234567"

                  }

                ],

                "width": 100,

                "height": 150,

                "center": {

                  "lat": 37.770040510499996,

                  "lng": -122.38714009525

                },

                "bottomLeftCorner": {

                  "lat": 37.7696461495,

                  "lng": -122.3880815506

                },

                "bottomRightCorner": {

                  "lat": 37.771524649766654,

                  "lng": -122.38795275055205

                },

                "topLeftCorner": {

                  "lat": 37.769700101836364,

                  "lng": -122.3888684251381

                },

                "topRightCorner": {

                  "lat": 37.77157860210302,

                  "lng": -122.38873962509013

                }

              }
          headers: {}
    delete:
      description: Destroy a floor plan
      summary: deleteNetworkFloorPlan
      tags:
      - Floorplans
      operationId: deleteNetworkFloorPlan
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: floorPlanId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
    put:
      description: Update a floor plan's geolocation and other meta data
      summary: updateNetworkFloorPlan
      tags:
      - Floorplans
      operationId: updateNetworkFloorPlan
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: floorPlanId
        in: path
        required: true
        type: string
      - name: updateNetworkFloorPlan
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkFloorPlan'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "floorPlanId": "g_1234567",

                "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",

                "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",

                "imageExtension": "png",

                "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",

                "name": "HQ Floor Plan",

                "devices": [

                  {

                    "name": "My AP",

                    "lat": 37.4180951010362,

                    "lng": -122.098531723022,

                    "serial": "Q234-ABCD-5678",

                    "mac": "00:11:22:33:44:55",

                    "model": "MR34",

                    "address": "1600 Pennsylvania Ave",

                    "notes": "My AP's note",

                    "lanIp": "1.2.3.4",

                    "tags": " recently-added ",

                    "networkId": "N_24329156",

                    "beaconIdParams": {

                      "uuid": "00000000-0000-0000-0000-000000000000",

                      "major": 5,

                      "minor": 3

                    },

                    "firmware": "wireless-25-14",

                    "floorPlanId": "g_1234567"

                  }

                ],

                "width": 100,

                "height": 150,

                "center": {

                  "lat": 37.770040510499996,

                  "lng": -122.38714009525

                },

                "bottomLeftCorner": {

                  "lat": 37.7696461495,

                  "lng": -122.3880815506

                },

                "bottomRightCorner": {

                  "lat": 37.771524649766654,

                  "lng": -122.38795275055205

                },

                "topLeftCorner": {

                  "lat": 37.769700101836364,

                  "lng": -122.3888684251381

                },

                "topRightCorner": {

                  "lat": 37.77157860210302,

                  "lng": -122.38873962509013

                }

              }
          headers: {}
  /networks/{networkId}/groupPolicies:
    get:
      description: List the group policies in a network
      summary: getNetworkGroupPolicies
      tags:
      - Group policies
      operationId: getNetworkGroupPolicies
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "name": "No video streaming",

                  "groupPolicyId": "101",

                  "scheduling": {

                    "enabled": true,

                    "monday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "tuesday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "wednesday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "thursday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "friday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "saturday": {

                      "active": false,

                      "from": "0:00",

                      "to": "24:00"

                    },

                    "sunday": {

                      "active": false,

                      "from": "0:00",

                      "to": "24:00"

                    }

                  },

                  "bandwidth": {

                    "settings": "custom",

                    "bandwidthLimits": {

                      "limitUp": 1000000,

                      "limitDown": 1000000

                    }

                  },

                  "firewallAndTrafficShaping": {

                    "settings": "custom",

                    "trafficShapingRules": [

                      {

                        "definitions": [

                          {

                            "type": "host",

                            "value": "google.com"

                          },

                          {

                            "type": "port",

                            "value": "9090"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0/16"

                          },

                          {

                            "type": "ipRange",

                            "value": "10.1.0.0/16:80"

                          },

                          {

                            "type": "localNet",

                            "value": "192.168.0.0/16"

                          },

                          {

                            "type": "applicationCategory",

                            "value": {

                              "id": "meraki:layer7/category/2",

                              "name": "Blogging"

                            }

                          },

                          {

                            "type": "application",

                            "value": {

                              "id": "meraki:layer7/application/133",

                              "name": "Battle.net"

                            }

                          }

                        ],

                        "perClientBandwidthLimits": {

                          "settings": "custom",

                          "bandwidthLimits": {

                            "limitUp": 1000000,

                            "limitDown": 1000000

                          }

                        },

                        "dscpTagValue": null,

                        "pcpTagValue": null

                      }

                    ],

                    "l3FirewallRules": [

                      {

                        "comment": "Allow TCP traffic to subnet with HTTP servers.",

                        "policy": "allow",

                        "protocol": "tcp",

                        "destPort": 443,

                        "destCidr": "192.168.1.0/24"

                      }

                    ],

                    "l7FirewallRules": [

                      [

                        {

                          "policy": "deny",

                          "type": "application",

                          "value": {

                            "id": "meraki:layer7/application/67",

                            "name": "Xbox LIVE"

                          }

                        },

                        {

                          "policy": "deny",

                          "type": "applicationCategory",

                          "value": {

                            "id": "meraki:layer7/category/2",

                            "name": "Blogging"

                          }

                        },

                        {

                          "policy": "deny",

                          "type": "host",

                          "value": "google.com"

                        },

                        {

                          "policy": "deny",

                          "type": "port",

                          "value": "23"

                        },

                        {

                          "policy": "deny",

                          "type": "ipRange",

                          "value": "10.11.12.00/24"

                        },

                        {

                          "policy": "deny",

                          "type": "ipRange",

                          "value": "10.11.12.00/24:5555"

                        },

                        {

                          "policy": "deny",

                          "type": "blacklistedCountries",

                          "value": [

                            "AX",

                            "CA"

                          ]

                        },

                        {

                          "policy": "deny",

                          "type": "whitelistedCountries",

                          "value": [

                            "US"

                          ]

                        }

                      ]

                    ]

                  },

                  "contentFiltering": {

                    "allowedUrlPatterns": {

                      "settings": "network default",

                      "patterns": []

                    },

                    "blockedUrlPatterns": {

                      "settings": "append",

                      "patterns": [

                        "http://www.example.com",

                        "http://www.betting.com"

                      ]

                    },

                    "blockedUrlCategories": {

                      "settings": "override",

                      "categories": [

                        "meraki:contentFiltering/category/1",

                        "meraki:contentFiltering/category/7"

                      ]

                    }

                  },

                  "splashAuthSettings": "bypass",

                  "vlanTagging": {

                    "settings": "custom",

                    "vlanId": "1"

                  },

                  "bonjourForwarding": {

                    "settings": "custom",

                    "rules": [

                      {

                        "description": "A simple bonjour rule",

                        "vlanId": "1",

                        "services": [

                          "All Services"

                        ]

                      }

                    ]

                  }

                }

              ]
          headers: {}
    post:
      description: Create a group policy
      summary: createNetworkGroupPolicy
      tags:
      - Group policies
      operationId: createNetworkGroupPolicy
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: createNetworkGroupPolicy
        in: body
        required: true
        schema:
          $ref: '#/definitions/createNetworkGroupPolicy'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "name": "No video streaming",

                "groupPolicyId": "101",

                "scheduling": {

                  "enabled": true,

                  "monday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "tuesday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "wednesday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "thursday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "friday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "saturday": {

                    "active": false,

                    "from": "0:00",

                    "to": "24:00"

                  },

                  "sunday": {

                    "active": false,

                    "from": "0:00",

                    "to": "24:00"

                  }

                },

                "bandwidth": {

                  "settings": "custom",

                  "bandwidthLimits": {

                    "limitUp": 1000000,

                    "limitDown": 1000000

                  }

                },

                "firewallAndTrafficShaping": {

                  "settings": "custom",

                  "trafficShapingRules": [

                    {

                      "definitions": [

                        {

                          "type": "host",

                          "value": "google.com"

                        },

                        {

                          "type": "port",

                          "value": "9090"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0/16"

                        },

                        {

                          "type": "ipRange",

                          "value": "10.1.0.0/16:80"

                        },

                        {

                          "type": "localNet",

                          "value": "192.168.0.0/16"

                        },

                        {

                          "type": "applicationCategory",

                          "value": {

                            "id": "meraki:layer7/category/2",

                            "name": "Blogging"

                          }

                        },

                        {

                          "type": "application",

                          "value": {

                            "id": "meraki:layer7/application/133",

                            "name": "Battle.net"

                          }

                        }

                      ],

                      "perClientBandwidthLimits": {

                        "settings": "custom",

                        "bandwidthLimits": {

                          "limitUp": 1000000,

                          "limitDown": 1000000

                        }

                      },

                      "dscpTagValue": null,

                      "pcpTagValue": null

                    }

                  ],

                  "l3FirewallRules": [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24"

                    }

                  ],

                  "l7FirewallRules": [

                    [

                      {

                        "policy": "deny",

                        "type": "application",

                        "value": {

                          "id": "meraki:layer7/application/67",

                          "name": "Xbox LIVE"

                        }

                      },

                      {

                        "policy": "deny",

                        "type": "applicationCategory",

                        "value": {

                          "id": "meraki:layer7/category/2",

                          "name": "Blogging"

                        }

                      },

                      {

                        "policy": "deny",

                        "type": "host",

                        "value": "google.com"

                      },

                      {

                        "policy": "deny",

                        "type": "port",

                        "value": "23"

                      },

                      {

                        "policy": "deny",

                        "type": "ipRange",

                        "value": "10.11.12.00/24"

                      },

                      {

                        "policy": "deny",

                        "type": "ipRange",

                        "value": "10.11.12.00/24:5555"

                      },

                      {

                        "policy": "deny",

                        "type": "blacklistedCountries",

                        "value": [

                          "AX",

                          "CA"

                        ]

                      },

                      {

                        "policy": "deny",

                        "type": "whitelistedCountries",

                        "value": [

                          "US"

                        ]

                      }

                    ]

                  ]

                },

                "contentFiltering": {

                  "allowedUrlPatterns": {

                    "settings": "network default",

                    "patterns": []

                  },

                  "blockedUrlPatterns": {

                    "settings": "append",

                    "patterns": [

                      "http://www.example.com",

                      "http://www.betting.com"

                    ]

                  },

                  "blockedUrlCategories": {

                    "settings": "override",

                    "categories": [

                      "meraki:contentFiltering/category/1",

                      "meraki:contentFiltering/category/7"

                    ]

                  }

                },

                "splashAuthSettings": "bypass",

                "vlanTagging": {

                  "settings": "custom",

                  "vlanId": "1"

                },

                "bonjourForwarding": {

                  "settings": "custom",

                  "rules": [

                    {

                      "description": "A simple bonjour rule",

                      "vlanId": "1",

                      "services": [

                        "All Services"

                      ]

                    }

                  ]

                }

              }
          headers: {}
  /networks/{networkId}/groupPolicies/{groupPolicyId}:
    put:
      description: Update a group policy
      summary: updateNetworkGroupPolicy
      tags:
      - Group policies
      operationId: updateNetworkGroupPolicy
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: groupPolicyId
        in: path
        required: true
        type: string
      - name: updateNetworkGroupPolicy
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkGroupPolicy'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "name": "No video streaming",

                "groupPolicyId": "101",

                "scheduling": {

                  "enabled": true,

                  "monday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "tuesday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "wednesday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "thursday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "friday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "saturday": {

                    "active": false,

                    "from": "0:00",

                    "to": "24:00"

                  },

                  "sunday": {

                    "active": false,

                    "from": "0:00",

                    "to": "24:00"

                  }

                },

                "bandwidth": {

                  "settings": "custom",

                  "bandwidthLimits": {

                    "limitUp": 1000000,

                    "limitDown": 1000000

                  }

                },

                "firewallAndTrafficShaping": {

                  "settings": "custom",

                  "trafficShapingRules": [

                    {

                      "definitions": [

                        {

                          "type": "host",

                          "value": "google.com"

                        },

                        {

                          "type": "port",

                          "value": "9090"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0/16"

                        },

                        {

                          "type": "ipRange",

                          "value": "10.1.0.0/16:80"

                        },

                        {

                          "type": "localNet",

                          "value": "192.168.0.0/16"

                        },

                        {

                          "type": "applicationCategory",

                          "value": {

                            "id": "meraki:layer7/category/2",

                            "name": "Blogging"

                          }

                        },

                        {

                          "type": "application",

                          "value": {

                            "id": "meraki:layer7/application/133",

                            "name": "Battle.net"

                          }

                        }

                      ],

                      "perClientBandwidthLimits": {

                        "settings": "custom",

                        "bandwidthLimits": {

                          "limitUp": 1000000,

                          "limitDown": 1000000

                        }

                      },

                      "dscpTagValue": null,

                      "pcpTagValue": null

                    }

                  ],

                  "l3FirewallRules": [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24"

                    }

                  ],

                  "l7FirewallRules": [

                    [

                      {

                        "policy": "deny",

                        "type": "application",

                        "value": {

                          "id": "meraki:layer7/application/67",

                          "name": "Xbox LIVE"

                        }

                      },

                      {

                        "policy": "deny",

                        "type": "applicationCategory",

                        "value": {

                          "id": "meraki:layer7/category/2",

                          "name": "Blogging"

                        }

                      },

                      {

                        "policy": "deny",

                        "type": "host",

                        "value": "google.com"

                      },

                      {

                        "policy": "deny",

                        "type": "port",

                        "value": "23"

                      },

                      {

                        "policy": "deny",

                        "type": "ipRange",

                        "value": "10.11.12.00/24"

                      },

                      {

                        "policy": "deny",

                        "type": "ipRange",

                        "value": "10.11.12.00/24:5555"

                      },

                      {

                        "policy": "deny",

                        "type": "blacklistedCountries",

                        "value": [

                          "AX",

                          "CA"

                        ]

                      },

                      {

                        "policy": "deny",

                        "type": "whitelistedCountries",

                        "value": [

                          "US"

                        ]

                      }

                    ]

                  ]

                },

                "contentFiltering": {

                  "allowedUrlPatterns": {

                    "settings": "network default",

                    "patterns": []

                  },

                  "blockedUrlPatterns": {

                    "settings": "append",

                    "patterns": [

                      "http://www.example.com",

                      "http://www.betting.com"

                    ]

                  },

                  "blockedUrlCategories": {

                    "settings": "override",

                    "categories": [

                      "meraki:contentFiltering/category/1",

                      "meraki:contentFiltering/category/7"

                    ]

                  }

                },

                "splashAuthSettings": "bypass",

                "vlanTagging": {

                  "settings": "custom",

                  "vlanId": "1"

                },

                "bonjourForwarding": {

                  "settings": "custom",

                  "rules": [

                    {

                      "description": "A simple bonjour rule",

                      "vlanId": "1",

                      "services": [

                        "All Services"

                      ]

                    }

                  ]

                }

              }
          headers: {}
    delete:
      description: Delete a group policy
      summary: deleteNetworkGroupPolicy
      tags:
      - Group policies
      operationId: deleteNetworkGroupPolicy
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: groupPolicyId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
    get:
      description: Display a group policy
      summary: getNetworkGroupPolicy
      tags:
      - Group policies
      operationId: getNetworkGroupPolicy
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: groupPolicyId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "name": "No video streaming",

                "groupPolicyId": "101",

                "scheduling": {

                  "enabled": true,

                  "monday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "tuesday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "wednesday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "thursday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "friday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "saturday": {

                    "active": false,

                    "from": "0:00",

                    "to": "24:00"

                  },

                  "sunday": {

                    "active": false,

                    "from": "0:00",

                    "to": "24:00"

                  }

                },

                "bandwidth": {

                  "settings": "custom",

                  "bandwidthLimits": {

                    "limitUp": 1000000,

                    "limitDown": 1000000

                  }

                },

                "firewallAndTrafficShaping": {

                  "settings": "custom",

                  "trafficShapingRules": [

                    {

                      "definitions": [

                        {

                          "type": "host",

                          "value": "google.com"

                        },

                        {

                          "type": "port",

                          "value": "9090"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0/16"

                        },

                        {

                          "type": "ipRange",

                          "value": "10.1.0.0/16:80"

                        },

                        {

                          "type": "localNet",

                          "value": "192.168.0.0/16"

                        },

                        {

                          "type": "applicationCategory",

                          "value": {

                            "id": "meraki:layer7/category/2",

                            "name": "Blogging"

                          }

                        },

                        {

                          "type": "application",

                          "value": {

                            "id": "meraki:layer7/application/133",

                            "name": "Battle.net"

                          }

                        }

                      ],

                      "perClientBandwidthLimits": {

                        "settings": "custom",

                        "bandwidthLimits": {

                          "limitUp": 1000000,

                          "limitDown": 1000000

                        }

                      },

                      "dscpTagValue": null,

                      "pcpTagValue": null

                    }

                  ],

                  "l3FirewallRules": [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24"

                    }

                  ],

                  "l7FirewallRules": [

                    [

                      {

                        "policy": "deny",

                        "type": "application",

                        "value": {

                          "id": "meraki:layer7/application/67",

                          "name": "Xbox LIVE"

                        }

                      },

                      {

                        "policy": "deny",

                        "type": "applicationCategory",

                        "value": {

                          "id": "meraki:layer7/category/2",

                          "name": "Blogging"

                        }

                      },

                      {

                        "policy": "deny",

                        "type": "host",

                        "value": "google.com"

                      },

                      {

                        "policy": "deny",

                        "type": "port",

                        "value": "23"

                      },

                      {

                        "policy": "deny",

                        "type": "ipRange",

                        "value": "10.11.12.00/24"

                      },

                      {

                        "policy": "deny",

                        "type": "ipRange",

                        "value": "10.11.12.00/24:5555"

                      },

                      {

                        "policy": "deny",

                        "type": "blacklistedCountries",

                        "value": [

                          "AX",

                          "CA"

                        ]

                      },

                      {

                        "policy": "deny",

                        "type": "whitelistedCountries",

                        "value": [

                          "US"

                        ]

                      }

                    ]

                  ]

                },

                "contentFiltering": {

                  "allowedUrlPatterns": {

                    "settings": "network default",

                    "patterns": []

                  },

                  "blockedUrlPatterns": {

                    "settings": "append",

                    "patterns": [

                      "http://www.example.com",

                      "http://www.betting.com"

                    ]

                  },

                  "blockedUrlCategories": {

                    "settings": "override",

                    "categories": [

                      "meraki:contentFiltering/category/1",

                      "meraki:contentFiltering/category/7"

                    ]

                  }

                },

                "splashAuthSettings": "bypass",

                "vlanTagging": {

                  "settings": "custom",

                  "vlanId": "1"

                },

                "bonjourForwarding": {

                  "settings": "custom",

                  "rules": [

                    {

                      "description": "A simple bonjour rule",

                      "vlanId": "1",

                      "services": [

                        "All Services"

                      ]

                    }

                  ]

                }

              }
          headers: {}
  /networks/{networkId}/httpServers:
    post:
      description: Add an HTTP server to a network
      summary: createNetworkHttpServer
      tags:
      - HTTP servers
      operationId: createNetworkHttpServer
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: createNetworkHttpServer
        in: body
        required: true
        schema:
          $ref: '#/definitions/createNetworkHttpServer'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "ABC123",

                "networkId": "N_123",

                "name": "My HTTP server",

                "url": "https://www.example.com/webhooks",

                "sharedSecret": "foobar"

              }
          headers: {}
    get:
      description: List the HTTP servers for a network
      summary: getNetworkHttpServers
      tags:
      - HTTP servers
      operationId: getNetworkHttpServers
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "ABC123",

                  "networkId": "N_123",

                  "name": "My HTTP server",

                  "url": "https://www.example.com/webhooks",

                  "sharedSecret": "foobar"

                }

              ]
          headers: {}
  /networks/{networkId}/httpServers/{id}:
    delete:
      description: Delete an HTTP server from a network
      summary: deleteNetworkHttpServer
      tags:
      - HTTP servers
      operationId: deleteNetworkHttpServer
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
    put:
      description: Update an HTTP server
      summary: updateNetworkHttpServer
      tags:
      - HTTP servers
      operationId: updateNetworkHttpServer
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
      - name: updateNetworkHttpServer
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkHttpServer'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "ABC123",

                "networkId": "N_123",

                "name": "My HTTP server",

                "url": "https://www.example.com/webhooks",

                "sharedSecret": "foobar"

              }
          headers: {}
    get:
      description: Return an HTTP server for a network
      summary: getNetworkHttpServer
      tags:
      - HTTP servers
      operationId: getNetworkHttpServer
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "ABC123",

                "networkId": "N_123",

                "name": "My HTTP server",

                "url": "https://www.example.com/webhooks",

                "sharedSecret": "foobar"

              }
          headers: {}
  /networks/{networkId}/httpServers/webhookTests/{id}:
    get:
      description: Return the status of a webhook test for a network
      summary: getNetworkHttpServersWebhookTest
      tags:
      - HTTP servers
      operationId: getNetworkHttpServersWebhookTest
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "url": "https://www.example.com/path",

                "status": "delivered"

              }
          headers: {}
  /networks/{networkId}/httpServers/webhookTests:
    post:
      description: Send a test webhook for a network
      summary: createNetworkHttpServersWebhookTest
      tags:
      - HTTP servers
      operationId: createNetworkHttpServersWebhookTest
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: createNetworkHttpServersWebhookTest
        in: body
        required: true
        schema:
          $ref: '#/definitions/createNetworkHttpServersWebhookTest'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "url": "https://www.example.com/path",

                "status": "enqueued"

              }
          headers: {}
  /networks/{networkId}/security/intrusionSettings:
    get:
      description: Returns all supported intrusion settings for an MX network
      summary: getNetworkSecurityIntrusionSettings
      tags:
      - Intrusion settings
      operationId: getNetworkSecurityIntrusionSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "mode": "prevention",

                "idsRulesets": "balanced",

                "protectedNetworks": {

                  "useDefault": false,

                  "includedCidr": [

                    "10.0.0.0/8",

                    "127.0.0.0/8",

                    "169.254.0.0/16",

                    "172.16.0.0/12"

                  ],

                  "excludedCidr": [

                    "10.0.0.0/8",

                    "127.0.0.0/8"

                  ]

                }

              }
          headers: {}
    put:
      description: Set the supported intrusion settings for an MX network
      summary: updateNetworkSecurityIntrusionSettings
      tags:
      - Intrusion settings
      operationId: updateNetworkSecurityIntrusionSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkSecurityIntrusionSettings
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkSecurityIntrusionSettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "mode": "prevention",

                "idsRulesets": "balanced",

                "protectedNetworks": {

                  "useDefault": false,

                  "includedCidr": [

                    "10.0.0.0/8",

                    "127.0.0.0/8",

                    "169.254.0.0/16",

                    "172.16.0.0/12"

                  ],

                  "excludedCidr": [

                    "10.0.0.0/8",

                    "127.0.0.0/8"

                  ]

                }

              }
          headers: {}
  /organizations/{organizationId}/security/intrusionSettings:
    get:
      description: Returns all supported intrusion settings for an organization
      summary: getOrganizationSecurityIntrusionSettings
      tags:
      - Intrusion settings
      operationId: getOrganizationSecurityIntrusionSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "whitelistedRules": [

                  {

                    "ruleId": "meraki:intrusion/snort/GID/01/SID/688",

                    "message": "SQL sa login failed"

                  },

                  {

                    "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",

                    "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"

                  }

                ]

              }
          headers: {}
    put:
      description: Sets supported intrusion settings for an organization
      summary: updateOrganizationSecurityIntrusionSettings
      tags:
      - Intrusion settings
      operationId: updateOrganizationSecurityIntrusionSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: updateOrganizationSecurityIntrusionSettings
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateOrganizationSecurityIntrusionSettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "whitelistedRules": [

                  {

                    "ruleId": "meraki:intrusion/snort/GID/01/SID/688",

                    "message": "SQL sa login failed"

                  },

                  {

                    "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",

                    "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"

                  }

                ]

              }
          headers: {}
  /organizations/{organizationId}/licenses/moveSeats:
    post:
      description: Move SM seats to another organization
      summary: moveOrganizationLicensesSeats
      tags:
      - Licenses
      operationId: moveOrganizationLicensesSeats
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: moveOrganizationLicensesSeats
        in: body
        required: true
        schema:
          $ref: '#/definitions/moveOrganizationLicensesSeats'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "destOrganizationId": "2930418",

                "licenseId": "1234",

                "seatCount": 20

              }
          headers: {}
  /organizations/{organizationId}/licenses/{licenseId}:
    get:
      description: Display a license
      summary: getOrganizationLicense
      tags:
      - Licenses
      operationId: getOrganizationLicense
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: licenseId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "licenseType": "MX64-ENT",

                "licenseKey": "Z21234567890",

                "orderNumber": "4C1234567",

                "deviceSerial": "Q234-ABCD-5678",

                "networkId": "N_24329156",

                "state": "active",

                "seatCount": null,

                "totalDurationInDays": 425,

                "durationInDays": 365,

                "permanentlyQueuedLicenses": [

                  {

                    "id": "5678",

                    "licenseType": "MX64-ENT",

                    "licenseKey": "Z21234567890",

                    "orderNumber": "4C1234567",

                    "durationInDays": 60

                  }

                ],

                "claimDate": "2019-08-29T12:40:10Z",

                "activationDate": "2019-09-01T15:01:46Z",

                "expirationDate": "2020-10-30T15:01:46Z"

              }
          headers: {}
    put:
      description: Update a license
      summary: updateOrganizationLicense
      tags:
      - Licenses
      operationId: updateOrganizationLicense
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: licenseId
        in: path
        required: true
        type: string
      - name: updateOrganizationLicense
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateOrganizationLicense'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "licenseType": "MX64-ENT",

                "licenseKey": "Z21234567890",

                "orderNumber": "4C1234567",

                "deviceSerial": "Q234-ABCD-5678",

                "networkId": "N_24329156",

                "state": "active",

                "seatCount": null,

                "totalDurationInDays": 425,

                "durationInDays": 365,

                "permanentlyQueuedLicenses": [

                  {

                    "id": "5678",

                    "licenseType": "MX64-ENT",

                    "licenseKey": "Z21234567890",

                    "orderNumber": "4C1234567",

                    "durationInDays": 60

                  }

                ],

                "claimDate": "2019-08-29T12:40:10Z",

                "activationDate": "2019-09-01T15:01:46Z",

                "expirationDate": "2020-10-30T15:01:46Z"

              }
          headers: {}
  /organizations/{organizationId}/licenses/renewSeats:
    post:
      description: Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license
      summary: renewOrganizationLicensesSeats
      tags:
      - Licenses
      operationId: renewOrganizationLicensesSeats
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: renewOrganizationLicensesSeats
        in: body
        required: true
        schema:
          $ref: '#/definitions/renewOrganizationLicensesSeats'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "resultingLicenses": [

                  {

                    "id": "1234",

                    "licenseType": "SME",

                    "licenseKey": "Z21234567890",

                    "orderNumber": "4C1234567",

                    "deviceSerial": null,

                    "networkId": "N_24329156",

                    "state": "active",

                    "seatCount": 25,

                    "totalDurationInDays": 365,

                    "durationInDays": 365,

                    "permanentlyQueuedLicenses": [],

                    "claimDate": "2019-08-29T12:40:10Z",

                    "activationDate": "2019-09-01T15:01:46Z",

                    "expirationDate": "2020-08-31T15:01:46Z"

                  }

                ]

              }
          headers: {}
  /organizations/{organizationId}/licenses/assignSeats:
    post:
      description: Assign SM seats to a network. This will increase the managed SM device limit of the network
      summary: assignOrganizationLicensesSeats
      tags:
      - Licenses
      operationId: assignOrganizationLicensesSeats
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: assignOrganizationLicensesSeats
        in: body
        required: true
        schema:
          $ref: '#/definitions/assignOrganizationLicensesSeats'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "resultingLicenses": [

                  {

                    "id": "1234",

                    "licenseType": "SME",

                    "licenseKey": "Z21234567890",

                    "orderNumber": "4C1234567",

                    "deviceSerial": null,

                    "networkId": "N_24329156",

                    "state": "active",

                    "seatCount": 25,

                    "totalDurationInDays": 365,

                    "durationInDays": 365,

                    "permanentlyQueuedLicenses": [],

                    "claimDate": "2019-08-29T12:40:10Z",

                    "activationDate": "2019-09-01T15:01:46Z",

                    "expirationDate": "2020-08-31T15:01:46Z"

                  }

                ]

              }
          headers: {}
  /organizations/{organizationId}/licenses:
    get:
      description: List the licenses for an organization
      summary: getOrganizationLicenses
      tags:
      - Licenses
      operationId: getOrganizationLicenses
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: perPage
        in: query
        required: false
        type: integer
        format: int32
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
      - name: startingAfter
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: endingBefore
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: deviceSerial
        in: query
        required: false
        type: string
        description: Filter the licenses to those assigned to a particular device
      - name: networkId
        in: query
        required: false
        type: string
        description: Filter the licenses to those assigned in a particular network
      - name: state
        in: query
        required: false
        enum:
        - active
        - expired
        - expiring
        - unused
        - unusedActive
        - recentlyQueued
        type: string
        description: Filter the licenses to those in a particular state. Can be one of 'active', 'expired', 'expiring', 'unused', 'unusedActive' or 'recentlyQueued'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "1234",

                  "licenseType": "MX64-ENT",

                  "licenseKey": "Z21234567890",

                  "orderNumber": "4C1234567",

                  "deviceSerial": "Q234-ABCD-5678",

                  "networkId": "N_24329156",

                  "state": "active",

                  "seatCount": null,

                  "totalDurationInDays": 425,

                  "durationInDays": 365,

                  "permanentlyQueuedLicenses": [

                    {

                      "id": "5678",

                      "licenseType": "MX64-ENT",

                      "licenseKey": "Z21234567890",

                      "orderNumber": "4C1234567",

                      "durationInDays": 60

                    }

                  ],

                  "claimDate": "2019-08-29T12:40:10Z",

                  "activationDate": "2019-09-01T15:01:46Z",

                  "expirationDate": "2020-10-30T15:01:46Z"

                }

              ]
          headers: {}
  /organizations/{organizationId}/licenses/move:
    post:
      description: Move licenses to another organization. This will also move any devices that the licenses are assigned to
      summary: moveOrganizationLicenses
      tags:
      - Licenses
      operationId: moveOrganizationLicenses
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: moveOrganizationLicenses
        in: body
        required: true
        schema:
          $ref: '#/definitions/moveOrganizationLicenses'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "destOrganizationId": "2930418",

                "licenseIds": [

                  "123",

                  "456"

                ]

              }
          headers: {}
  /networks/{networkId}/switch/linkAggregations/{linkAggregationId}:
    delete:
      description: Split a link aggregation group into separate ports
      summary: deleteNetworkSwitchLinkAggregation
      tags:
      - Link aggregations
      operationId: deleteNetworkSwitchLinkAggregation
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: linkAggregationId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
    put:
      description: Update a link aggregation group
      summary: updateNetworkSwitchLinkAggregation
      tags:
      - Link aggregations
      operationId: updateNetworkSwitchLinkAggregation
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: linkAggregationId
        in: path
        required: true
        type: string
      - name: updateNetworkSwitchLinkAggregation
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkSwitchLinkAggregation'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "NDU2N18yXzM=",

                "switchPorts": [

                  {

                    "serial": "Q234-ABCD-0001",

                    "portId": "1"

                  },

                  {

                    "serial": "Q234-ABCD-0002",

                    "portId": "2"

                  },

                  {

                    "serial": "Q234-ABCD-0003",

                    "portId": "3"

                  },

                  {

                    "serial": "Q234-ABCD-0004",

                    "portId": "4"

                  },

                  {

                    "serial": "Q234-ABCD-0005",

                    "portId": "5"

                  },

                  {

                    "serial": "Q234-ABCD-0006",

                    "portId": "6"

                  },

                  {

                    "serial": "Q234-ABCD-0007",

                    "portId": "7"

                  },

                  {

                    "serial": "Q234-ABCD-0008",

                    "portId": "8"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/switch/linkAggregations:
    get:
      description: List link aggregation groups
      summary: getNetworkSwitchLinkAggregations
      tags:
      - Link aggregations
      operationId: getNetworkSwitchLinkAggregations
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "NDU2N18yXzM=",

                  "switchPorts": [

                    {

                      "serial": "Q234-ABCD-0001",

                      "portId": "1"

                    },

                    {

                      "serial": "Q234-ABCD-0002",

                      "portId": "2"

                    },

                    {

                      "serial": "Q234-ABCD-0003",

                      "portId": "3"

                    },

                    {

                      "serial": "Q234-ABCD-0004",

                      "portId": "4"

                    },

                    {

                      "serial": "Q234-ABCD-0005",

                      "portId": "5"

                    },

                    {

                      "serial": "Q234-ABCD-0006",

                      "portId": "6"

                    },

                    {

                      "serial": "Q234-ABCD-0007",

                      "portId": "7"

                    },

                    {

                      "serial": "Q234-ABCD-0008",

                      "portId": "8"

                    }

                  ]

                }

              ]
          headers: {}
    post:
      description: Create a link aggregation group
      summary: createNetworkSwitchLinkAggregation
      tags:
      - Link aggregations
      operationId: createNetworkSwitchLinkAggregation
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: createNetworkSwitchLinkAggregation
        in: body
        required: false
        schema:
          $ref: '#/definitions/createNetworkSwitchLinkAggregation'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "NDU2N18yXzM=",

                "switchPorts": [

                  {

                    "serial": "Q234-ABCD-0001",

                    "portId": "1"

                  },

                  {

                    "serial": "Q234-ABCD-0002",

                    "portId": "2"

                  },

                  {

                    "serial": "Q234-ABCD-0003",

                    "portId": "3"

                  },

                  {

                    "serial": "Q234-ABCD-0004",

                    "portId": "4"

                  },

                  {

                    "serial": "Q234-ABCD-0005",

                    "portId": "5"

                  },

                  {

                    "serial": "Q234-ABCD-0006",

                    "portId": "6"

                  },

                  {

                    "serial": "Q234-ABCD-0007",

                    "portId": "7"

                  },

                  {

                    "serial": "Q234-ABCD-0008",

                    "portId": "8"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/cellularGateway/settings/dhcp:
    put:
      description: Update common DHCP settings of MGs
      summary: updateNetworkCellularGatewaySettingsDhcp
      tags:
      - MG DHCP settings
      operationId: updateNetworkCellularGatewaySettingsDhcp
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkCellularGatewaySettingsDhcp
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkCellularGatewaySettingsDhcp'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "dhcpLeaseTime": "1 hour",

                "dnsNameservers": "custom",

                "dnsCustomNameservers": [

                  "172.16.2.111",

                  "172.16.2.30"

                ]

              }
          headers: {}
    get:
      description: List common DHCP settings of MGs
      summary: getNetworkCellularGatewaySettingsDhcp
      tags:
      - MG DHCP settings
      operationId: getNetworkCellularGatewaySettingsDhcp
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "dhcpLeaseTime": "1 hour",

                "dnsNameservers": "custom",

                "dnsCustomNameservers": [

                  "172.16.2.111",

                  "172.16.2.30"

                ]

              }
          headers: {}
  /devices/{serial}/cellularGateway/settings:
    put:
      description: Update the LAN Settings for a single MG.
      summary: updateDeviceCellularGatewaySettings
      tags:
      - MG LAN settings
      operationId: updateDeviceCellularGatewaySettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      - name: updateDeviceCellularGatewaySettings
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateDeviceCellularGatewaySettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "deviceName": "name of the MG",

                "deviceLanIp": "192.168.0.33",

                "deviceSubnet": "192.168.0.32/27",

                "fixedIpAssignments": [

                  {

                    "mac": "0b:00:00:00:00:ac",

                    "name": "server 1",

                    "ip": "192.168.0.10"

                  },

                  {

                    "mac": "0b:00:00:00:00:ab",

                    "name": "server 2",

                    "ip": "192.168.0.20"

                  }

                ],

                "reservedIpRanges": [

                  {

                    "start": "192.168.1.0",

                    "end": "192.168.1.1",

                    "comment": "A reserved IP range"

                  }

                ]

              }
          headers: {}
    get:
      description: Show the LAN Settings of a MG
      summary: getDeviceCellularGatewaySettings
      tags:
      - MG LAN settings
      operationId: getDeviceCellularGatewaySettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "deviceName": "name of the MG",

                "deviceLanIp": "192.168.0.33",

                "deviceSubnet": "192.168.0.32/27",

                "fixedIpAssignments": [

                  {

                    "mac": "0b:00:00:00:00:ac",

                    "name": "server 1",

                    "ip": "192.168.0.10"

                  },

                  {

                    "mac": "0b:00:00:00:00:ab",

                    "name": "server 2",

                    "ip": "192.168.0.20"

                  }

                ],

                "reservedIpRanges": [

                  {

                    "start": "192.168.1.0",

                    "end": "192.168.1.1",

                    "comment": "A reserved IP range"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/cellularGateway/settings/connectivityMonitoringDestinations:
    get:
      description: Return the connectivity testing destinations for an MG network
      summary: getNetworkCellularGatewaySettingsConnectivityMonitoringDestinations
      tags:
      - MG connectivity monitoring destinations
      operationId: getNetworkCellularGatewaySettingsConnectivityMonitoringDestinations
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "destinations": [

                  {

                    "ip": "8.8.8.8",

                    "description": "Google",

                    "default": false

                  },

                  {

                    "ip": "1.23.45.67",

                    "description": "test description",

                    "default": true

                  },

                  {

                    "ip": "9.8.7.6",

                    "description": null,

                    "default": false

                  }

                ]

              }
          headers: {}
    put:
      description: Update the connectivity testing destinations for an MG network
      summary: updateNetworkCellularGatewaySettingsConnectivityMonitoringDestinations
      tags:
      - MG connectivity monitoring destinations
      operationId: updateNetworkCellularGatewaySettingsConnectivityMonitoringDestinations
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkCellularGatewaySettingsConnectivityMonitoringDestinations
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkCellularGatewaySettingsConnectivityMonitoringDestinations'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "destinations": [

                  {

                    "ip": "8.8.8.8",

                    "description": "Google",

                    "default": false

                  },

                  {

                    "ip": "1.23.45.67",

                    "description": "test description",

                    "default": true

                  },

                  {

                    "ip": "9.8.7.6",

                    "description": null,

                    "default": false

                  }

                ]

              }
          headers: {}
  /devices/{serial}/cellularGateway/settings/portForwardingRules:
    get:
      description: Returns the port forwarding rules for a single MG.
      summary: getDeviceCellularGatewaySettingsPortForwardingRules
      tags:
      - MG port forwarding rules
      operationId: getDeviceCellularGatewaySettingsPortForwardingRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "rules": [

                  {

                    "lanIp": "172.31.128.5",

                    "name": "test",

                    "access": "any",

                    "publicPort": "11-12",

                    "localPort": "4",

                    "uplink": "both",

                    "protocol": "tcp"

                  },

                  {

                    "lanIp": "172.31.128.5",

                    "name": "test 2",

                    "access": "restricted",

                    "allowedIps": [

                      "10.10.10.10",

                      "10.10.10.11"

                    ],

                    "publicPort": "99",

                    "localPort": "5",

                    "uplink": "both",

                    "protocol": "tcp"

                  }

                ]

              }
          headers: {}
    put:
      description: Updates the port forwarding rules for a single MG.
      summary: updateDeviceCellularGatewaySettingsPortForwardingRules
      tags:
      - MG port forwarding rules
      operationId: updateDeviceCellularGatewaySettingsPortForwardingRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      - name: updateDeviceCellularGatewaySettingsPortForwardingRules
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateDeviceCellularGatewaySettingsPortForwardingRules'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "rules": [

                  {

                    "lanIp": "172.31.128.5",

                    "name": "test",

                    "access": "any",

                    "publicPort": "11-12",

                    "localPort": "4",

                    "uplink": "both",

                    "protocol": "tcp"

                  },

                  {

                    "lanIp": "172.31.128.5",

                    "name": "test 2",

                    "access": "restricted",

                    "allowedIps": [

                      "10.10.10.10",

                      "10.10.10.11"

                    ],

                    "publicPort": "99",

                    "localPort": "5",

                    "uplink": "both",

                    "protocol": "tcp"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/cellularGateway/settings/subnetPool:
    get:
      description: Return the subnet pool and mask configured for MGs in the network.
      summary: getNetworkCellularGatewaySettingsSubnetPool
      tags:
      - MG subnet pool settings
      operationId: getNetworkCellularGatewaySettingsSubnetPool
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "cidr": "192.168.0.0/16",

                "mask": "24",

                "subnets": [

                  {

                    "serial": "AAAA-AAAA-AAAA",

                    "name": "my first MG",

                    "applianceIp": "192.168.0.1",

                    "subnet": "192.168.0.0/24"

                  },

                  {

                    "serial": "BBBB-BBBB-BBBB",

                    "name": "my second MG",

                    "applianceIp": "192.168.0.33",

                    "subnet": "192.168.0.32/24"

                  }

                ]

              }
          headers: {}
    put:
      description: Update the subnet pool and mask configuration for MGs in the network.
      summary: updateNetworkCellularGatewaySettingsSubnetPool
      tags:
      - MG subnet pool settings
      operationId: updateNetworkCellularGatewaySettingsSubnetPool
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkCellularGatewaySettingsSubnetPool
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkCellularGatewaySettingsSubnetPool'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "cidr": "192.168.0.0/16",

                "mask": "24",

                "subnets": [

                  {

                    "serial": "AAAA-AAAA-AAAA",

                    "name": "my first MG",

                    "applianceIp": "192.168.0.1",

                    "subnet": "192.168.0.0/24"

                  },

                  {

                    "serial": "BBBB-BBBB-BBBB",

                    "name": "my second MG",

                    "applianceIp": "192.168.0.33",

                    "subnet": "192.168.0.32/24"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/cellularGateway/settings/uplink:
    get:
      description: Returns the uplink settings for your MG network.
      summary: getNetworkCellularGatewaySettingsUplink
      tags:
      - MG uplink settings
      operationId: getNetworkCellularGatewaySettingsUplink
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "bandwidthLimits": {

                  "limitUp": 51200,

                  "limitDown": 51200

                }

              }
          headers: {}
    put:
      description: Updates the uplink settings for your MG network.
      summary: updateNetworkCellularGatewaySettingsUplink
      tags:
      - MG uplink settings
      operationId: updateNetworkCellularGatewaySettingsUplink
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkCellularGatewaySettingsUplink
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkCellularGatewaySettingsUplink'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "bandwidthLimits": {

                  "limitUp": 51200,

                  "limitDown": 51200

                }

              }
          headers: {}
  /networks/{networkId}/ssids/{number}/l3FirewallRules:
    put:
      description: Update the L3 firewall rules of an SSID on an MR network
      summary: updateNetworkSsidL3FirewallRules
      tags:
      - MR L3 firewall
      operationId: updateNetworkSsidL3FirewallRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: number
        in: path
        required: true
        type: string
      - name: updateNetworkSsidL3FirewallRules
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkSsidL3FirewallRules'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "comment": "Allow TCP traffic to subnet with HTTP servers.",

                  "policy": "allow",

                  "protocol": "tcp",

                  "destPort": 443,

                  "destCidr": "192.168.1.0/24"

                }

              ]
          headers: {}
    get:
      description: Return the L3 firewall rules for an SSID on an MR network
      summary: getNetworkSsidL3FirewallRules
      tags:
      - MR L3 firewall
      operationId: getNetworkSsidL3FirewallRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: number
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "comment": "Allow TCP traffic to subnet with HTTP servers.",

                  "policy": "allow",

                  "protocol": "tcp",

                  "destPort": 443,

                  "destCidr": "192.168.1.0/24"

                }

              ]
          headers: {}
  /devices/{serial}/camera/analytics/overview:
    get:
      description: Returns an overview of aggregate analytics data for a timespan
      summary: getDeviceCameraAnalyticsOverview
      tags:
      - MV Sense
      operationId: getDeviceCameraAnalyticsOverview
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour.
      - name: objectType
        in: query
        required: false
        enum:
        - person
        - vehicle
        type: string
        description: '[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "startTs": "2018-08-15T18:32:38.123Z",

                  "endTs": "2018-08-15T18:33:38.123Z",

                  "zoneId": 0,

                  "entrances": 254,

                  "averageCount": 5

                }

              ]
          headers: {}
  /devices/{serial}/camera/analytics/recent:
    get:
      description: Returns most recent record for analytics zones
      summary: getDeviceCameraAnalyticsRecent
      tags:
      - MV Sense
      operationId: getDeviceCameraAnalyticsRecent
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      - name: objectType
        in: query
        required: false
        enum:
        - person
        - vehicle
        type: string
        description: '[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "startTs": "2018-08-15T18:32:38.123Z",

                  "endTs": "2018-08-15T18:33:38.123Z",

                  "zoneId": 0,

                  "entrances": 10,

                  "averageCount": 2.54

                }

              ]
          headers: {}
  /devices/{serial}/camera/analytics/live:
    get:
      description: Returns live state from camera of analytics zones
      summary: getDeviceCameraAnalyticsLive
      tags:
      - MV Sense
      operationId: getDeviceCameraAnalyticsLive
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "ts": "2018-08-15T18:32:38.123Z",

                "zones": {

                  "0": {

                    "person": 0

                  }

                }

              }
          headers: {}
  /devices/{serial}/camera/analytics/zones/{zoneId}/history:
    get:
      description: Return historical records for analytic zones
      summary: getDeviceCameraAnalyticsZoneHistory
      tags:
      - MV Sense
      operationId: getDeviceCameraAnalyticsZoneHistory
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      - name: zoneId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 14 hours after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour.
      - name: resolution
        in: query
        required: false
        type: integer
        format: int32
        description: 'The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60.'
      - name: objectType
        in: query
        required: false
        enum:
        - person
        - vehicle
        type: string
        description: '[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "startTs": "2018-08-15T18:32:38.123Z",

                  "endTs": "2018-08-15T18:33:38.123Z",

                  "entrances": 5,

                  "averageCount": 1.5

                }

              ]
          headers: {}
  /devices/{serial}/camera/analytics/zones:
    get:
      description: Returns all configured analytic zones for this camera
      summary: getDeviceCameraAnalyticsZones
      tags:
      - MV Sense
      operationId: getDeviceCameraAnalyticsZones
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "0",

                  "type": "occupancy",

                  "label": "Full Frame",

                  "regionOfInterest": {

                    "x0": "0.00",

                    "y0": "0.00",

                    "x1": "1.00",

                    "y1": "1.00"

                  }

                }

              ]
          headers: {}
  /networks/{networkId}/oneToOneNatRules:
    get:
      description: Return the 1:1 NAT mapping rules for an MX network
      summary: getNetworkOneToOneNatRules
      tags:
      - MX 1:1 NAT rules
      operationId: getNetworkOneToOneNatRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "rules": [

                  {

                    "name": "Service behind NAT",

                    "lanIp": "192.168.128.22",

                    "publicIp": "146.12.3.33",

                    "uplink": "internet1",

                    "allowedInbound": [

                      {

                        "protocol": "tcp",

                        "destinationPorts": [

                          "80"

                        ],

                        "allowedIps": [

                          "10.82.112.0/24",

                          "10.82.0.0/16"

                        ]

                      },

                      {

                        "protocol": "udp",

                        "destinationPorts": [

                          "8080"

                        ],

                        "allowedIps": [

                          "10.81.110.5",

                          "10.81.0.0/16"

                        ]

                      }

                    ]

                  }

                ]

              }
          headers: {}
    put:
      description: Set the 1:1 NAT mapping rules for an MX network
      summary: updateNetworkOneToOneNatRules
      tags:
      - MX 1:1 NAT rules
      operationId: updateNetworkOneToOneNatRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkOneToOneNatRules
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateNetworkOneToOneNatRules'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "rules": [

                  {

                    "name": "Service behind NAT",

                    "lanIp": "192.168.128.22",

                    "publicIp": "146.12.3.33",

                    "uplink": "internet1",

                    "allowedInbound": [

                      {

                        "protocol": "tcp",

                        "destinationPorts": [

                          "80"

                        ],

                        "allowedIps": [

                          "10.82.112.0/24",

                          "10.82.0.0/16"

                        ]

                      },

                      {

                        "protocol": "udp",

                        "destinationPorts": [

                          "8080"

                        ],

                        "allowedIps": [

                          "10.81.110.5",

                          "10.81.0.0/16"

                        ]

                      }

                    ]

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/oneToManyNatRules:
    get:
      description: Return the 1:Many NAT mapping rules for an MX network
      summary: getNetworkOneToManyNatRules
      tags:
      - MX 1:Many NAT rules
      operationId: getNetworkOneToManyNatRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "rules": [

                  {

                    "publicIp": "146.11.11.13",

                    "uplink": "internet1",

                    "portRules": [

                      {

                        "name": "Rule 1",

                        "protocol": "tcp",

                        "publicPort": "9443",

                        "localIp": "192.168.128.1",

                        "localPort": "443",

                        "allowedIps": [

                          "any"

                        ]

                      },

                      {

                        "name": "Rule 2",

                        "protocol": "tcp",

                        "publicPort": "8080",

                        "localIp": "192.168.128.1",

                        "localPort": "80",

                        "allowedIps": [

                          "10.82.110.0/24",

                          "10.82.111.0/24"

                        ]

                      }

                    ]

                  }

                ]

              }
          headers: {}
    put:
      description: Set the 1:Many NAT mapping rules for an MX network
      summary: updateNetworkOneToManyNatRules
      tags:
      - MX 1:Many NAT rules
      operationId: updateNetworkOneToManyNatRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkOneToManyNatRules
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateNetworkOneToManyNatRules'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "rules": [

                  {

                    "publicIp": "146.11.11.13",

                    "uplink": "internet1",

                    "portRules": [

                      {

                        "name": "Rule 1",

                        "protocol": "tcp",

                        "publicPort": "9443",

                        "localIp": "192.168.128.1",

                        "localPort": "443",

                        "allowedIps": [

                          "any"

                        ]

                      },

                      {

                        "name": "Rule 2",

                        "protocol": "tcp",

                        "publicPort": "8080",

                        "localIp": "192.168.128.1",

                        "localPort": "80",

                        "allowedIps": [

                          "10.82.110.0/24",

                          "10.82.111.0/24"

                        ]

                      }

                    ]

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/l3FirewallRules:
    get:
      description: Return the L3 firewall rules for an MX network
      summary: getNetworkL3FirewallRules
      tags:
      - MX L3 firewall
      operationId: getNetworkL3FirewallRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "comment": "Allow TCP traffic to subnet with HTTP servers.",

                  "policy": "allow",

                  "protocol": "tcp",

                  "destPort": 443,

                  "destCidr": "192.168.1.0/24",

                  "srcPort": "Any",

                  "srcCidr": "Any",

                  "syslogEnabled": false

                }

              ]
          headers: {}
    put:
      description: Update the L3 firewall rules of an MX network
      summary: updateNetworkL3FirewallRules
      tags:
      - MX L3 firewall
      operationId: updateNetworkL3FirewallRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkL3FirewallRules
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkL3FirewallRules'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "comment": "Allow TCP traffic to subnet with HTTP servers.",

                  "policy": "allow",

                  "protocol": "tcp",

                  "destPort": 443,

                  "destCidr": "192.168.1.0/24",

                  "srcPort": "Any",

                  "srcCidr": "Any",

                  "syslogEnabled": false

                }

              ]
          headers: {}
  /networks/{networkId}/l7FirewallRules/applicationCategories:
    get:
      description: Return the L7 firewall application categories and their associated applications for an MX network
      summary: getNetworkL7FirewallRulesApplicationCategories
      tags:
      - MX L7 application categories
      operationId: getNetworkL7FirewallRulesApplicationCategories
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "applicationCategories": [

                    {

                      "id": "meraki:layer7/category/24",

                      "name": "Advertising",

                      "applications": [

                        {

                          "id": "meraki:layer7/application/5",

                          "name": "Advertising.com"

                        },

                        {

                          "id": "meraki:layer7/application/0",

                          "name": "AppNexus"

                        },

                        {

                          "id": "meraki:layer7/application/1",

                          "name": "Brightroll"

                        }

                      ]

                    }

                  ]

                }

              ]
          headers: {}
  /networks/{networkId}/l7FirewallRules:
    put:
      description: Update the MX L7 firewall rules for an MX network
      summary: updateNetworkL7FirewallRules
      tags:
      - MX L7 firewall
      operationId: updateNetworkL7FirewallRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkL7FirewallRules
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkL7FirewallRules'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "rules": [

                  {

                    "policy": "deny",

                    "type": "application",

                    "value": {

                      "id": "meraki:layer7/application/67",

                      "name": "Xbox LIVE"

                    }

                  },

                  {

                    "policy": "deny",

                    "type": "applicationCategory",

                    "value": {

                      "id": "meraki:layer7/category/2",

                      "name": "Blogging"

                    }

                  },

                  {

                    "policy": "deny",

                    "type": "host",

                    "value": "google.com"

                  },

                  {

                    "policy": "deny",

                    "type": "port",

                    "value": "23"

                  },

                  {

                    "policy": "deny",

                    "type": "ipRange",

                    "value": "10.11.12.00/24"

                  },

                  {

                    "policy": "deny",

                    "type": "ipRange",

                    "value": "10.11.12.00/24:5555"

                  },

                  {

                    "policy": "deny",

                    "type": "blacklistedCountries",

                    "value": [

                      "AX",

                      "CA"

                    ]

                  },

                  {

                    "policy": "deny",

                    "type": "whitelistedCountries",

                    "value": [

                      "US"

                    ]

                  }

                ]

              }
          headers: {}
    get:
      description: List the MX L7 firewall rules for an MX network
      summary: getNetworkL7FirewallRules
      tags:
      - MX L7 firewall
      operationId: getNetworkL7FirewallRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "rules": [

                  {

                    "policy": "deny",

                    "type": "application",

                    "value": {

                      "id": "meraki:layer7/application/67",

                      "name": "Xbox LIVE"

                    }

                  },

                  {

                    "policy": "deny",

                    "type": "applicationCategory",

                    "value": {

                      "id": "meraki:layer7/category/2",

                      "name": "Blogging"

                    }

                  },

                  {

                    "policy": "deny",

                    "type": "host",

                    "value": "google.com"

                  },

                  {

                    "policy": "deny",

                    "type": "port",

                    "value": "23"

                  },

                  {

                    "policy": "deny",

                    "type": "ipRange",

                    "value": "10.11.12.00/24"

                  },

                  {

                    "policy": "deny",

                    "type": "ipRange",

                    "value": "10.11.12.00/24:5555"

                  },

                  {

                    "policy": "deny",

                    "type": "blacklistedCountries",

                    "value": [

                      "AX",

                      "CA"

                    ]

                  },

                  {

                    "policy": "deny",

                    "type": "whitelistedCountries",

                    "value": [

                      "US"

                    ]

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/appliancePorts/{appliancePortId}:
    get:
      description: Return per-port VLAN settings for a single MX port.
      summary: getNetworkAppliancePort
      tags:
      - MX VLAN ports
      operationId: getNetworkAppliancePort
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: appliancePortId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "number": 1,

                "enabled": true,

                "type": "access",

                "dropUntaggedTraffic": false,

                "vlan": 3,

                "accessPolicy": "open"

              }
          headers: {}
    put:
      description: Update the per-port VLAN settings for a single MX port.
      summary: updateNetworkAppliancePort
      tags:
      - MX VLAN ports
      operationId: updateNetworkAppliancePort
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: appliancePortId
        in: path
        required: true
        type: string
      - name: updateNetworkAppliancePort
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkAppliancePort'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "number": 1,

                "enabled": true,

                "type": "access",

                "dropUntaggedTraffic": false,

                "vlan": 3,

                "accessPolicy": "open"

              }
          headers: {}
  /networks/{networkId}/appliancePorts:
    get:
      description: List per-port VLAN settings for all ports of a MX.
      summary: getNetworkAppliancePorts
      tags:
      - MX VLAN ports
      operationId: getNetworkAppliancePorts
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "number": 1,

                  "enabled": true,

                  "type": "access",

                  "dropUntaggedTraffic": false,

                  "vlan": 3,

                  "accessPolicy": "open"

                }

              ]
          headers: {}
  /organizations/{organizationId}/vpnFirewallRules:
    get:
      description: Return the firewall rules for an organization's site-to-site VPN
      summary: getOrganizationVpnFirewallRules
      tags:
      - MX VPN firewall
      operationId: getOrganizationVpnFirewallRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "comment": "Allow TCP traffic to subnet with HTTP servers.",

                  "policy": "allow",

                  "protocol": "tcp",

                  "destPort": 443,

                  "destCidr": "192.168.1.0/24",

                  "srcPort": "Any",

                  "srcCidr": "Any",

                  "syslogEnabled": false

                }

              ]
          headers: {}
    put:
      description: Update the firewall rules of an organization's site-to-site VPN
      summary: updateOrganizationVpnFirewallRules
      tags:
      - MX VPN firewall
      operationId: updateOrganizationVpnFirewallRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: updateOrganizationVpnFirewallRules
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateOrganizationVpnFirewallRules'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "comment": "Allow TCP traffic to subnet with HTTP servers.",

                  "policy": "allow",

                  "protocol": "tcp",

                  "destPort": 443,

                  "destCidr": "192.168.1.0/24",

                  "srcPort": "Any",

                  "srcCidr": "Any",

                  "syslogEnabled": false

                }

              ]
          headers: {}
  /networks/{networkId}/cellularFirewallRules:
    put:
      description: Update the cellular firewall rules of an MX network
      summary: updateNetworkCellularFirewallRules
      tags:
      - MX cellular firewall
      operationId: updateNetworkCellularFirewallRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkCellularFirewallRules
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkCellularFirewallRules'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "comment": "Allow TCP traffic to subnet with HTTP servers.",

                  "policy": "allow",

                  "protocol": "tcp",

                  "destPort": 443,

                  "destCidr": "192.168.1.0/24",

                  "srcPort": "Any",

                  "srcCidr": "Any",

                  "syslogEnabled": false

                }

              ]
          headers: {}
    get:
      description: Return the cellular firewall rules for an MX network
      summary: getNetworkCellularFirewallRules
      tags:
      - MX cellular firewall
      operationId: getNetworkCellularFirewallRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "comment": "Allow TCP traffic to subnet with HTTP servers.",

                  "policy": "allow",

                  "protocol": "tcp",

                  "destPort": 443,

                  "destCidr": "192.168.1.0/24",

                  "srcPort": "Any",

                  "srcCidr": "Any",

                  "syslogEnabled": false

                }

              ]
          headers: {}
  /networks/{networkId}/appliance/firewall/inboundFirewallRules:
    put:
      description: Update the inbound firewall rules of an MX network
      summary: updateNetworkApplianceFirewallInboundFirewallRules
      tags:
      - MX inbound firewall
      operationId: updateNetworkApplianceFirewallInboundFirewallRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkApplianceFirewallInboundFirewallRules
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkApplianceFirewallInboundFirewallRules'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "rules": [

                  {

                    "comment": "Allow TCP traffic to subnet with HTTP servers.",

                    "policy": "allow",

                    "protocol": "tcp",

                    "destPort": 443,

                    "destCidr": "192.168.1.0/24",

                    "srcPort": "Any",

                    "srcCidr": "Any",

                    "syslogEnabled": false

                  }

                ],

                "syslogDefaultRule": true

              }
          headers: {}
    get:
      description: Return the inbound firewall rules for an MX network
      summary: getNetworkApplianceFirewallInboundFirewallRules
      tags:
      - MX inbound firewall
      operationId: getNetworkApplianceFirewallInboundFirewallRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "rules": [

                  {

                    "comment": "Allow TCP traffic to subnet with HTTP servers.",

                    "policy": "allow",

                    "protocol": "tcp",

                    "destPort": 443,

                    "destCidr": "192.168.1.0/24",

                    "srcPort": "Any",

                    "srcCidr": "Any",

                    "syslogEnabled": false

                  }

                ],

                "syslogDefaultRule": true

              }
          headers: {}
  /networks/{networkId}/portForwardingRules:
    get:
      description: Return the port forwarding rules for an MX network
      summary: getNetworkPortForwardingRules
      tags:
      - MX port forwarding rules
      operationId: getNetworkPortForwardingRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "rules": [

                  {

                    "lanIp": "192.168.128.1",

                    "allowedIps": [

                      "any"

                    ],

                    "name": "Description of Port Forwarding Rule",

                    "protocol": "tcp",

                    "publicPort": "8100-8101",

                    "localPort": "442-443",

                    "uplink": "both"

                  }

                ]

              }
          headers: {}
    put:
      description: Update the port forwarding rules for an MX network
      summary: updateNetworkPortForwardingRules
      tags:
      - MX port forwarding rules
      operationId: updateNetworkPortForwardingRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkPortForwardingRules
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateNetworkPortForwardingRules'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "rules": [

                  {

                    "lanIp": "192.168.128.1",

                    "allowedIps": [

                      "any"

                    ],

                    "name": "Description of Port Forwarding Rule",

                    "protocol": "tcp",

                    "publicPort": "8100-8101",

                    "localPort": "442-443",

                    "uplink": "both"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/staticRoutes/{staticRouteId}:
    get:
      description: Return a static route for an MX or teleworker network
      summary: getNetworkStaticRoute
      tags:
      - MX static routes
      operationId: getNetworkStaticRoute
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: staticRouteId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",

                "networkId": "N_24329156",

                "enabled": true,

                "name": "My route",

                "subnet": "192.168.1.0/24",

                "gatewayIp": "1.2.3.5",

                "fixedIpAssignments": {

                  "22:33:44:55:66:77": {

                    "ip": "1.2.3.4",

                    "name": "Some client name"

                  }

                },

                "reservedIpRanges": [

                  {

                    "start": "192.168.1.0",

                    "end": "192.168.1.1",

                    "comment": "A reserved IP range"

                  }

                ]

              }
          headers: {}
    put:
      description: Update a static route for an MX or teleworker network
      summary: updateNetworkStaticRoute
      tags:
      - MX static routes
      operationId: updateNetworkStaticRoute
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: staticRouteId
        in: path
        required: true
        type: string
      - name: updateNetworkStaticRoute
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkStaticRoute'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",

                "networkId": "N_24329156",

                "enabled": true,

                "name": "My route",

                "subnet": "192.168.1.0/24",

                "gatewayIp": "1.2.3.5",

                "fixedIpAssignments": {

                  "22:33:44:55:66:77": {

                    "ip": "1.2.3.4",

                    "name": "Some client name"

                  }

                },

                "reservedIpRanges": [

                  {

                    "start": "192.168.1.0",

                    "end": "192.168.1.1",

                    "comment": "A reserved IP range"

                  }

                ]

              }
          headers: {}
    delete:
      description: Delete a static route from an MX or teleworker network
      summary: deleteNetworkStaticRoute
      tags:
      - MX static routes
      operationId: deleteNetworkStaticRoute
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: staticRouteId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
  /networks/{networkId}/staticRoutes:
    post:
      description: Add a static route for an MX or teleworker network
      summary: createNetworkStaticRoute
      tags:
      - MX static routes
      operationId: createNetworkStaticRoute
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: createNetworkStaticRoute
        in: body
        required: true
        schema:
          $ref: '#/definitions/createNetworkStaticRoute'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",

                "networkId": "N_24329156",

                "enabled": true,

                "name": "My route",

                "subnet": "192.168.1.0/24",

                "gatewayIp": "1.2.3.5",

                "fixedIpAssignments": {},

                "reservedIpRanges": []

              }
          headers: {}
    get:
      description: List the static routes for an MX or teleworker network
      summary: getNetworkStaticRoutes
      tags:
      - MX static routes
      operationId: getNetworkStaticRoutes
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",

                  "networkId": "N_24329156",

                  "enabled": true,

                  "name": "My route",

                  "subnet": "192.168.1.0/24",

                  "gatewayIp": "1.2.3.5",

                  "fixedIpAssignments": {

                    "22:33:44:55:66:77": {

                      "ip": "1.2.3.4",

                      "name": "Some client name"

                    }

                  },

                  "reservedIpRanges": [

                    {

                      "start": "192.168.1.0",

                      "end": "192.168.1.1",

                      "comment": "A reserved IP range"

                    }

                  ]

                }

              ]
          headers: {}
  /networks/{networkId}/swapWarmSpare:
    post:
      description: Swap MX primary and warm spare appliances
      summary: swapNetworkWarmspare
      tags:
      - MX warm spare settings
      operationId: swapNetworkWarmspare
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "success": true

              }
          headers: {}
  /networks/{networkId}/warmSpareSettings:
    get:
      description: Return MX warm spare settings
      summary: getNetworkWarmSpareSettings
      tags:
      - MX warm spare settings
      operationId: getNetworkWarmSpareSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "enabled": true,

                "primarySerial": "Q234-ABCD-5678",

                "spareSerial": "Q234-ABCD-5678",

                "uplinkMode": "virtual",

                "wan1": {

                  "ip": "1.2.3.4",

                  "subnet": "192.168.1.0/24"

                },

                "wan2": {

                  "ip": "1.2.3.4",

                  "subnet": "192.168.128.0/24"

                }

              }
          headers: {}
    put:
      description: Update MX warm spare settings
      summary: updateNetworkWarmSpareSettings
      tags:
      - MX warm spare settings
      operationId: updateNetworkWarmSpareSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkWarmSpareSettings
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateNetworkWarmSpareSettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "enabled": true,

                "primarySerial": "Q234-ABCD-5678",

                "spareSerial": "Q234-ABCD-5678",

                "uplinkMode": "virtual",

                "wan1": {

                  "ip": "1.2.3.4",

                  "subnet": "192.168.1.0/24"

                },

                "wan2": {

                  "ip": "1.2.3.4",

                  "subnet": "192.168.128.0/24"

                }

              }
          headers: {}
  /networks/{networkId}/security/malwareSettings:
    get:
      description: Returns all supported malware settings for an MX network
      summary: getNetworkSecurityMalwareSettings
      tags:
      - Malware settings
      operationId: getNetworkSecurityMalwareSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "mode": "enabled",

                "allowedUrls": [

                  {

                    "url": "example.org",

                    "comment": "allow example.org"

                  },

                  {

                    "url": "help.com.au",

                    "comment": "allow help.com.au"

                  }

                ],

                "allowedFiles": [

                  {

                    "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",

                    "comment": "allow ZIP file"

                  }

                ]

              }
          headers: {}
    put:
      description: Set the supported malware settings for an MX network
      summary: updateNetworkSecurityMalwareSettings
      tags:
      - Malware settings
      operationId: updateNetworkSecurityMalwareSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkSecurityMalwareSettings
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateNetworkSecurityMalwareSettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "mode": "enabled",

                "allowedUrls": [

                  {

                    "url": "example.org",

                    "comment": "allow example.org"

                  },

                  {

                    "url": "help.com.au",

                    "comment": "allow help.com.au"

                  }

                ],

                "allowedFiles": [

                  {

                    "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",

                    "comment": "allow ZIP file"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/devices/{serial}/managementInterfaceSettings:
    get:
      description: Return the management interface settings for a device
      summary: getNetworkDeviceManagementInterfaceSettings
      tags:
      - Management interface settings
      operationId: getNetworkDeviceManagementInterfaceSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "ddnsHostnames": {

                  "activeDdnsHostname": "mx1-sample.dynamic-m.com",

                  "ddnsHostnameWan1": "mx1-sample-1.dynamic-m.com",

                  "ddnsHostnameWan2": "mx1-sample-2.dynamic-m.com"

                },

                "wan1": {

                  "wanEnabled": "not configured",

                  "usingStaticIp": true,

                  "staticIp": "1.2.3.4",

                  "staticSubnetMask": "255.255.255.0",

                  "staticGatewayIp": "1.2.3.1",

                  "staticDns": [

                    "1.2.3.2",

                    "1.2.3.3"

                  ],

                  "vlan": 7

                },

                "wan2": {

                  "wanEnabled": "enabled",

                  "usingStaticIp": false,

                  "vlan": 2

                }

              }
          headers: {}
    put:
      description: Update the management interface settings for a device
      summary: updateNetworkDeviceManagementInterfaceSettings
      tags:
      - Management interface settings
      operationId: updateNetworkDeviceManagementInterfaceSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      - name: updateNetworkDeviceManagementInterfaceSettings
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkDeviceManagementInterfaceSettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "wan1": {

                  "wanEnabled": "not configured",

                  "usingStaticIp": true,

                  "staticIp": "1.2.3.4",

                  "staticSubnetMask": "255.255.255.0",

                  "staticGatewayIp": "1.2.3.1",

                  "staticDns": [

                    "1.2.3.2",

                    "1.2.3.3"

                  ],

                  "vlan": 7

                },

                "wan2": {

                  "wanEnabled": "enabled",

                  "usingStaticIp": false,

                  "vlan": 2

                }

              }
          headers: {}
  /networks/{networkId}/merakiAuthUsers:
    get:
      description: List the splash or RADIUS users configured under Meraki Authentication for a network
      summary: getNetworkMerakiAuthUsers
      tags:
      - Meraki auth users
      operationId: getNetworkMerakiAuthUsers
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "aGlAaGkuY29t",

                  "email": "miles@meraki.com",

                  "name": "Miles Meraki",

                  "createdAt": 1518365681,

                  "accountType": "Guest",

                  "authorizations": [

                    {

                      "authorizedZone": "Store WiFi",

                      "expiresAt": 1526087474,

                      "authorizedByName": "Miles Meraki",

                      "authorizedByEmail": "miles@meraki.com"

                    }

                  ]

                }

              ]
          headers: {}
  /networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}:
    get:
      description: Return the Meraki Auth splash or RADIUS user
      summary: getNetworkMerakiAuthUser
      tags:
      - Meraki auth users
      operationId: getNetworkMerakiAuthUser
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: merakiAuthUserId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "aGlAaGkuY29t",

                "email": "miles@meraki.com",

                "name": "Miles Meraki",

                "createdAt": 1518365681,

                "accountType": "Guest",

                "authorizations": [

                  {

                    "authorizedZone": "Store WiFi",

                    "expiresAt": 1526087474,

                    "authorizedByName": "Miles Meraki",

                    "authorizedByEmail": "miles@meraki.com"

                  }

                ]

              }
          headers: {}
  /organizations/{organizationId}/insight/monitoredMediaServers:
    post:
      description: Add a media server to be monitored for this organization. Only valid for organizations with Meraki Insight.
      summary: createOrganizationInsightMonitoredMediaServer
      tags:
      - Monitored media servers
      operationId: createOrganizationInsightMonitoredMediaServer
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: createOrganizationInsightMonitoredMediaServer
        in: body
        required: true
        schema:
          $ref: '#/definitions/createOrganizationInsightMonitoredMediaServer'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1284392014819",

                "name": "Sample VoIP Provider",

                "address": "123.123.123.1"

              }
          headers: {}
    get:
      description: List the monitored media servers for this organization. Only valid for organizations with Meraki Insight.
      summary: getOrganizationInsightMonitoredMediaServers
      tags:
      - Monitored media servers
      operationId: getOrganizationInsightMonitoredMediaServers
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "1284392014819",

                  "name": "Sample VoIP Provider",

                  "address": "123.123.123.1"

                }

              ]
          headers: {}
  /organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}:
    get:
      description: Return a monitored media server for this organization. Only valid for organizations with Meraki Insight.
      summary: getOrganizationInsightMonitoredMediaServer
      tags:
      - Monitored media servers
      operationId: getOrganizationInsightMonitoredMediaServer
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: monitoredMediaServerId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1284392014819",

                "name": "Sample VoIP Provider",

                "address": "123.123.123.1"

              }
          headers: {}
    delete:
      description: Delete a monitored media server from this organization. Only valid for organizations with Meraki Insight.
      summary: deleteOrganizationInsightMonitoredMediaServer
      tags:
      - Monitored media servers
      operationId: deleteOrganizationInsightMonitoredMediaServer
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: monitoredMediaServerId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
    put:
      description: Update a monitored media server for this organization. Only valid for organizations with Meraki Insight.
      summary: updateOrganizationInsightMonitoredMediaServer
      tags:
      - Monitored media servers
      operationId: updateOrganizationInsightMonitoredMediaServer
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: monitoredMediaServerId
        in: path
        required: true
        type: string
      - name: updateOrganizationInsightMonitoredMediaServer
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateOrganizationInsightMonitoredMediaServer'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1284392014819",

                "name": "Sample VoIP Provider",

                "address": "123.123.123.1"

              }
          headers: {}
  /networks/{networkId}/sm/targetGroups/{targetGroupId}:
    delete:
      description: Delete a target group from a network
      summary: deleteNetworkSmTargetGroup
      tags:
      - Named tag scope
      operationId: deleteNetworkSmTargetGroup
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: targetGroupId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
    put:
      description: Update a target group
      summary: updateNetworkSmTargetGroup
      tags:
      - Named tag scope
      operationId: updateNetworkSmTargetGroup
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: targetGroupId
        in: path
        required: true
        type: string
      - name: updateNetworkSmTargetGroup
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkSmTargetGroup'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "name": "My target group",

                "scope": "none",

                "tags": "[]",

                "type": "devices"

              }
          headers: {}
    get:
      description: Return a target group
      summary: getNetworkSmTargetGroup
      tags:
      - Named tag scope
      operationId: getNetworkSmTargetGroup
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: targetGroupId
        in: path
        required: true
        type: string
      - name: withDetails
        in: query
        required: false
        type: boolean
        description: Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "name": "My target group",

                "scope": "none",

                "tags": "[]",

                "type": "devices"

              }
          headers: {}
  /networks/{networkId}/sm/targetGroups:
    post:
      description: Add a target group
      summary: createNetworkSmTargetGroup
      tags:
      - Named tag scope
      operationId: createNetworkSmTargetGroup
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: createNetworkSmTargetGroup
        in: body
        required: false
        schema:
          $ref: '#/definitions/createNetworkSmTargetGroup'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "name": "My target group",

                "scope": "none",

                "tags": "[]",

                "type": "devices"

              }
          headers: {}
    get:
      description: List the target groups in this network
      summary: getNetworkSmTargetGroups
      tags:
      - Named tag scope
      operationId: getNetworkSmTargetGroups
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: withDetails
        in: query
        required: false
        type: boolean
        description: Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "name": "My target group",

                  "scope": "none",

                  "tags": "[]",

                  "type": "devices"

                }

              ]
          headers: {}
  /networks/{networkId}/netflowSettings:
    put:
      description: Update the NetFlow traffic reporting settings for a network
      summary: updateNetworkNetflowSettings
      tags:
      - NetFlow settings
      operationId: updateNetworkNetflowSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkNetflowSettings
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkNetflowSettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "reportingEnabled": true,

                "collectorIp": "1.2.3.4",

                "collectorPort": 443

              }
          headers: {}
    get:
      description: Return the NetFlow traffic reporting settings for a network
      summary: getNetworkNetflowSettings
      tags:
      - NetFlow settings
      operationId: getNetworkNetflowSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "reportingEnabled": true,

                "collectorIp": "1.2.3.4",

                "collectorPort": 443

              }
          headers: {}
  /organizations/{organizationId}/networks/combine:
    post:
      description: Combine multiple networks into a single network
      summary: combineOrganizationNetworks
      tags:
      - Networks
      operationId: combineOrganizationNetworks
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: combineOrganizationNetworks
        in: body
        required: true
        schema:
          $ref: '#/definitions/combineOrganizationNetworks'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "resultingNetwork": {

                  "id": "L_123456",

                  "organizationId": "2930418",

                  "name": "Long Island Office",

                  "timeZone": "America/Los_Angeles",

                  "tags": " tag1 tag2 ",

                  "type": "combined",

                  "productTypes": [

                    "appliance",

                    "switch",

                    "wireless"

                  ],

                  "disableMyMerakiCom": false,

                  "enrollmentString": "long-island-office"

                }

              }
          headers: {}
  /networks/{networkId}:
    put:
      description: Update a network
      summary: updateNetwork
      tags:
      - Networks
      operationId: updateNetwork
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetwork
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetwork'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "L_123456",

                "organizationId": "2930418",

                "name": "Long Island Office",

                "timeZone": "America/Los_Angeles",

                "tags": " tag1 tag2 ",

                "type": "combined",

                "productTypes": [

                  "appliance",

                  "switch",

                  "wireless"

                ],

                "disableMyMerakiCom": false,

                "enrollmentString": "long-island-office"

              }
          headers: {}
    get:
      description: Return a network
      summary: getNetwork
      tags:
      - Networks
      operationId: getNetwork
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "L_123456",

                "organizationId": "2930418",

                "name": "Long Island Office",

                "timeZone": "America/Los_Angeles",

                "tags": " tag1 tag2 ",

                "type": "combined",

                "productTypes": [

                  "appliance",

                  "switch",

                  "wireless"

                ],

                "disableMyMerakiCom": false,

                "enrollmentString": "long-island-office"

              }
          headers: {}
    delete:
      description: Delete a network
      summary: deleteNetwork
      tags:
      - Networks
      operationId: deleteNetwork
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
  /networks/{networkId}/siteToSiteVpn:
    put:
      description: Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.
      summary: updateNetworkSiteToSiteVpn
      tags:
      - Networks
      operationId: updateNetworkSiteToSiteVpn
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkSiteToSiteVpn
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateNetworkSiteToSiteVpn'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "mode": "spoke",

                "hubs": [

                  {

                    "hubId": "N_4901849",

                    "useDefaultRoute": true

                  },

                  {

                    "hubId": "N_1892489",

                    "useDefaultRoute": false

                  }

                ],

                "subnets": [

                  {

                    "localSubnet": "192.168.1.0/24",

                    "useVpn": true

                  },

                  {

                    "localSubnet": "192.168.128.0/24",

                    "useVpn": true

                  }

                ]

              }
          headers: {}
    get:
      description: Return the site-to-site VPN settings of a network. Only valid for MX networks.
      summary: getNetworkSiteToSiteVpn
      tags:
      - Networks
      operationId: getNetworkSiteToSiteVpn
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "mode": "spoke",

                "hubs": [

                  {

                    "hubId": "N_4901849",

                    "useDefaultRoute": true

                  },

                  {

                    "hubId": "N_1892489",

                    "useDefaultRoute": false

                  }

                ],

                "subnets": [

                  {

                    "localSubnet": "192.168.1.0/24",

                    "useVpn": true

                  },

                  {

                    "localSubnet": "192.168.128.0/24",

                    "useVpn": true

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/split:
    post:
      description: Split a combined network into individual networks for each type of device
      summary: splitNetwork
      tags:
      - Networks
      operationId: splitNetwork
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "resultingNetworks": [

                  {

                    "id": "N_1234",

                    "organizationId": "2930418",

                    "name": "Long Island Office - switch",

                    "timeZone": "America/Los_Angeles",

                    "tags": " tag1 tag2 ",

                    "type": "switch",

                    "productTypes": [

                      "switch"

                    ],

                    "disableMyMerakiCom": false,

                    "enrollmentString": "long-island-office"

                  },

                  {

                    "id": "N_5678",

                    "organizationId": "2930418",

                    "name": "Long Island Office - wireless",

                    "timeZone": "America/Los_Angeles",

                    "tags": " tag1 tag2 ",

                    "type": "wireless",

                    "productTypes": [

                      "wireless"

                    ],

                    "disableMyMerakiCom": false,

                    "enrollmentString": "long-island-office"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/unbind:
    post:
      description: Unbind a network from a template.
      summary: unbindNetwork
      tags:
      - Networks
      operationId: unbindNetwork
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          headers: {}
  /organizations/{organizationId}/networks:
    get:
      description: List the networks in an organization
      summary: getOrganizationNetworks
      tags:
      - Networks
      operationId: getOrganizationNetworks
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: configTemplateId
        in: query
        required: false
        type: string
        description: An optional parameter that is the ID of a config template. Will return all networks bound to that template.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "L_123456",

                  "organizationId": "2930418",

                  "name": "Long Island Office",

                  "timeZone": "America/Los_Angeles",

                  "tags": " tag1 tag2 ",

                  "type": "combined",

                  "productTypes": [

                    "appliance",

                    "switch",

                    "wireless"

                  ],

                  "disableMyMerakiCom": false,

                  "enrollmentString": "long-island-office"

                }

              ]
          headers: {}
    post:
      description: Create a network
      summary: createOrganizationNetwork
      tags:
      - Networks
      operationId: createOrganizationNetwork
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: createOrganizationNetwork
        in: body
        required: true
        schema:
          $ref: '#/definitions/createOrganizationNetwork'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "L_123456",

                "organizationId": "2930418",

                "name": "Long Island Office",

                "timeZone": "America/Los_Angeles",

                "tags": " tag1 tag2 ",

                "type": "combined",

                "productTypes": [

                  "appliance",

                  "switch",

                  "wireless"

                ],

                "disableMyMerakiCom": false,

                "enrollmentString": "long-island-office"

              }
          headers: {}
  /networks/{networkId}/bind:
    post:
      description: Bind a network to a template.
      summary: bindNetwork
      tags:
      - Networks
      operationId: bindNetwork
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: bindNetwork
        in: body
        required: true
        schema:
          $ref: '#/definitions/bindNetwork'
      responses:
        200:
          description: Successful operation
          headers: {}
  /networks/{networkId}/accessPolicies:
    get:
      description: List the access policies for this network. Only valid for MS networks.
      summary: getNetworkAccessPolicies
      tags:
      - Networks
      operationId: getNetworkAccessPolicies
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "number": 1,

                  "name": "My access policy",

                  "accessType": "8021.x",

                  "guestVlan": 3700,

                  "radiusServers": [

                    {

                      "ip": "1.2.3.4",

                      "port": 1337

                    },

                    {

                      "ip": "2.3.4.5",

                      "port": 1337

                    }

                  ]

                }

              ]
          headers: {}
  /networks/{networkId}/traffic:
    get:
      description: >2
            The traffic analysis data for this network.
            <a href="https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.
      summary: getNetworkTraffic
      tags:
      - Networks
      operationId: getNetworkTraffic
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 30 days from today.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 30 days.
      - name: deviceType
        in: query
        required: false
        type: string
        description: >2
              Filter the data by device type: combined (default), wireless, switch, appliance.
              When using combined, for each rule the data will come from the device type with the most usage.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "application": "Gmail",

                  "destination": null,

                  "protocol": "TCP",

                  "port": 443,

                  "sent": 138.0,

                  "recv": 61.0,

                  "numClients": 7,

                  "activeTime": 77000,

                  "flows": 300

                }

              ]
          headers: {}
  /networks/{networkId}/airMarshal:
    get:
      description: List Air Marshal scan results from a network
      summary: getNetworkAirMarshal
      tags:
      - Networks
      operationId: getNetworkAirMarshal
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "ssid": "linksys",

                  "bssids": [

                    {

                      "bssid": "00:11:22:33:44:55",

                      "contained": false,

                      "detectedBy": [

                        {

                          "device": "Q234-ABCD-5678",

                          "rssi": 17

                        }

                      ]

                    }

                  ],

                  "channels": [

                    36,

                    40

                  ],

                  "firstSeen": 1518365681,

                  "lastSeen": 1526087474,

                  "wiredMacs": [

                    "00:11:22:33:44:55"

                  ],

                  "wiredVlans": [

                    0,

                    108

                  ],

                  "wiredLastSeen": 1526087474

                }

              ]
          headers: {}
  /organizations/{organizationId}/openapiSpec:
    get:
      description: Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON
      summary: getOrganizationOpenapiSpec
      tags:
      - OpenAPI Spec
      operationId: getOrganizationOpenapiSpec
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "swagger": "2.0",

                "info": {

                  "version": "v0",

                  "title": "Meraki Dashboard API",

                  "description": "This collection of API calls provides an easy way to interact with a Cisco Meraki network"

                },

                "paths": {

                  "/organizations": {

                    "get": {

                      "description": "List the organizations that the user has privileges on",

                      "operationId": "getOrganizations",

                      "responses": {

                        "200": {

                          "description": "Successful operation",

                          "examples": {

                            "application/json": [

                              {

                                "id": "2930418",

                                "name": "My organization"

                              }

                            ]

                          }

                        }

                      }

                    }

                  }

                }

              }
          headers: {}
  /organizations/{organizationId}:
    put:
      description: Update an organization
      summary: updateOrganization
      tags:
      - Organizations
      operationId: updateOrganization
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: updateOrganization
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateOrganization'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "2930418",

                "name": "My organization",

                "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"

              }
          headers: {}
    delete:
      description: Delete an organization
      summary: deleteOrganization
      tags:
      - Organizations
      operationId: deleteOrganization
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
    get:
      description: Return an organization
      summary: getOrganization
      tags:
      - Organizations
      operationId: getOrganization
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "2930418",

                "name": "My organization",

                "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"

              }
          headers: {}
  /organizations:
    post:
      description: Create a new organization
      summary: createOrganization
      tags:
      - Organizations
      operationId: createOrganization
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: createOrganization
        in: body
        required: true
        schema:
          $ref: '#/definitions/createOrganization'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "2930418",

                "name": "My organization",

                "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"

              }
          headers: {}
    get:
      description: List the organizations that the user has privileges on
      summary: getOrganizations
      tags:
      - Organizations
      operationId: getOrganizations
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "2930418",

                  "name": "My organization",

                  "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"

                }

              ]
          headers: {}
  /organizations/{organizationId}/clone:
    post:
      description: Create a new organization by cloning the addressed organization
      summary: cloneOrganization
      tags:
      - Organizations
      operationId: cloneOrganization
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: cloneOrganization
        in: body
        required: true
        schema:
          $ref: '#/definitions/cloneOrganization'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "2930418",

                "name": "My organization",

                "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"

              }
          headers: {}
  /organizations/{organizationId}/inventory:
    get:
      description: Return the inventory for an organization
      summary: getOrganizationInventory
      tags:
      - Organizations
      operationId: getOrganizationInventory
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: includeLicenseInfo
        in: query
        required: false
        type: boolean
        description: When this parameter is true, each entity in the response will include the license expiration date of the device (if any). Only applies to organizations that support per-device licensing. Defaults to false.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "mac": "00:11:22:33:44:55",

                  "serial": "Q234-ABCD-5678",

                  "networkId": "N_24329156",

                  "model": "MR34",

                  "claimedAt": 1518365681.0,

                  "publicIp": "123.123.123.1",

                  "name": "My AP"

                }

              ]
          headers: {}
  /organizations/{organizationId}/claim:
    post:
      description: Claim a list of devices, licenses, and/or orders into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory.
      summary: claimOrganization
      tags:
      - Organizations
      operationId: claimOrganization
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: claimOrganization
        in: body
        required: false
        schema:
          $ref: '#/definitions/claimOrganization'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "orders": [

                  "4CXXXXXXX"

                ],

                "serials": [

                  "Q234-ABCD-5678"

                ],

                "licenses": [

                  {

                    "key": "Z2XXXXXXXXXX",

                    "mode": "addDevices"

                  }

                ]

              }
          headers: {}
  /organizations/{organizationId}/thirdPartyVPNPeers:
    put:
      description: Update the third party VPN peers for an organization
      summary: updateOrganizationThirdPartyVPNPeers
      tags:
      - Organizations
      operationId: updateOrganizationThirdPartyVPNPeers
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: updateOrganizationThirdPartyVPNPeers
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateOrganizationThirdPartyVPNPeers'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "name": "My peer 1",

                  "publicIp": "123.123.123.1",

                  "privateSubnets": [

                    "192.168.1.0/24",

                    "192.168.128.0/24"

                  ],

                  "secret": "asdf1234",

                  "ipsecPolicies": {

                    "ikeCipherAlgo": [

                      "tripledes"

                    ],

                    "ikeAuthAlgo": [

                      "sha1"

                    ],

                    "ikeDiffieHellmanGroup": [

                      "group2"

                    ],

                    "ikeLifetime": 28800,

                    "childCipherAlgo": [

                      "aes128"

                    ],

                    "childAuthAlgo": [

                      "sha1"

                    ],

                    "childPfsGroup": [

                      "disabled"

                    ],

                    "childLifetime": 28800

                  }

                },

                {

                  "name": "My peer 2",

                  "publicIp": "123.123.123.2",

                  "remoteId": "miles@meraki.com",

                  "privateSubnets": [

                    "192.168.2.0/24",

                    "192.168.129.0/24"

                  ],

                  "secret": "asdf56785678567856785678",

                  "ipsecPoliciesPreset": "default"

                }

              ]
          headers: {}
    get:
      description: Return the third party VPN peers for an organization
      summary: getOrganizationThirdPartyVPNPeers
      tags:
      - Organizations
      operationId: getOrganizationThirdPartyVPNPeers
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "name": "My peer 1",

                  "publicIp": "123.123.123.1",

                  "privateSubnets": [

                    "192.168.1.0/24",

                    "192.168.128.0/24"

                  ],

                  "secret": "asdf1234",

                  "ipsecPolicies": {

                    "ikeCipherAlgo": [

                      "tripledes"

                    ],

                    "ikeAuthAlgo": [

                      "sha1"

                    ],

                    "ikeDiffieHellmanGroup": [

                      "group2"

                    ],

                    "ikeLifetime": 28800,

                    "childCipherAlgo": [

                      "aes128"

                    ],

                    "childAuthAlgo": [

                      "sha1"

                    ],

                    "childPfsGroup": [

                      "disabled"

                    ],

                    "childLifetime": 28800

                  }

                },

                {

                  "name": "My peer 2",

                  "publicIp": "123.123.123.2",

                  "remoteId": "miles@meraki.com",

                  "privateSubnets": [

                    "192.168.2.0/24",

                    "192.168.129.0/24"

                  ],

                  "secret": "asdf56785678567856785678",

                  "ipsecPoliciesPreset": "default"

                }

              ]
          headers: {}
  /organizations/{organizationId}/licenseState:
    get:
      description: Return an overview of the license state for an organization
      summary: getOrganizationLicenseState
      tags:
      - Organizations
      operationId: getOrganizationLicenseState
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "status": "OK",

                "expirationDate": "Feb 8, 2020 UTC",

                "licensedDeviceCounts": {

                  "MS": 100

                }

              }
          headers: {}
  /organizations/{organizationId}/uplinksLossAndLatency:
    get:
      description: Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago
      summary: getOrganizationUplinksLossAndLatency
      tags:
      - Organizations
      operationId: getOrganizationUplinksLossAndLatency
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes.
      - name: uplink
        in: query
        required: false
        enum:
        - wan1
        - wan2
        - cellular
        type: string
        description: Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks.
      - name: ip
        in: query
        required: false
        type: string
        description: Optional filter for a specific destination IP. Default will return all destination IPs.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "networkId": "N_12345",

                  "serial": "Q2AB-CDEF-GHIJ",

                  "uplink": "wan1",

                  "ip": "8.8.8.8",

                  "timeSeries": [

                    {

                      "ts": "2019-01-31T18:46:13Z",

                      "lossPercent": 5.3,

                      "latencyMs": 194.9

                    }

                  ]

                }

              ]
          headers: {}
  /organizations/{organizationId}/deviceStatuses:
    get:
      description: List the status of every Meraki device in the organization
      summary: getOrganizationDeviceStatuses
      tags:
      - Organizations
      operationId: getOrganizationDeviceStatuses
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "name": "My AP",

                  "serial": "Q234-ABCD-5678",

                  "mac": "00:11:22:33:44:55",

                  "status": "online",

                  "lanIp": "1.2.3.4",

                  "publicIp": "123.123.123.1",

                  "networkId": "N_24329156"

                }

              ]
          headers: {}
  /networks/{networkId}/pii/requests/{requestId}:
    get:
      description: >-
        Return a PII request


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/requests/{requestId}

        ```
      summary: getNetworkPiiRequest
      tags:
      - PII
      operationId: getNetworkPiiRequest
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: requestId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "organizationWide": false,

                "networkId": "N_1234",

                "type": "delete",

                "mac": "00:77:00:77:00:77",

                "datasets": "['usage', 'events']",

                "status": "Completed",

                "createdAt": 1524692227,

                "completedAt": 1524702227

              }
          headers: {}
    delete:
      description: >-
        Delete a restrict processing PII request


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/requests/{requestId}

        ```
      summary: deleteNetworkPiiRequest
      tags:
      - PII
      operationId: deleteNetworkPiiRequest
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: requestId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
  /networks/{networkId}/pii/smDevicesForKey:
    get:
      description: >-
        Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/smDevicesForKey

        ```
      summary: getNetworkPiiSmDevicesForKey
      tags:
      - PII
      operationId: getNetworkPiiSmDevicesForKey
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: username
        in: query
        required: false
        type: string
        description: The username of a Systems Manager user
      - name: email
        in: query
        required: false
        type: string
        description: The email of a network user account or a Systems Manager device
      - name: mac
        in: query
        required: false
        type: string
        description: The MAC of a network client device or a Systems Manager device
      - name: serial
        in: query
        required: false
        type: string
        description: The serial of a Systems Manager device
      - name: imei
        in: query
        required: false
        type: string
        description: The IMEI of a Systems Manager device
      - name: bluetoothMac
        in: query
        required: false
        type: string
        description: The MAC of a Bluetooth client
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "N_1234": [

                  "1099541095293",

                  "8348382288234"

                ]

              }
          headers: {}
  /networks/{networkId}/pii/requests:
    get:
      description: >-
        List the PII requests for this network or organization


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/requests

        ```
      summary: getNetworkPiiRequests
      tags:
      - PII
      operationId: getNetworkPiiRequests
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "1234",

                  "organizationWide": false,

                  "networkId": "N_1234",

                  "type": "delete",

                  "mac": "00:77:00:77:00:77",

                  "datasets": "['usage', 'events']",

                  "status": "Completed",

                  "createdAt": 1524692227,

                  "completedAt": 1524702227

                }

              ]
          headers: {}
    post:
      description: >-
        Submit a new delete or restrict processing PII request


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/requests

        ```
      summary: createNetworkPiiRequest
      tags:
      - PII
      operationId: createNetworkPiiRequest
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: createNetworkPiiRequest
        in: body
        required: false
        schema:
          $ref: '#/definitions/createNetworkPiiRequest'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "organizationWide": false,

                "networkId": "N_1234",

                "type": "delete",

                "mac": "00:77:00:77:00:77",

                "datasets": "['usage', 'events']",

                "status": "Not visible in Dashboard; database deletion in process",

                "createdAt": 1524692227,

                "completedAt": null

              }
          headers: {}
  /networks/{networkId}/pii/piiKeys:
    get:
      description: >-
        List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key "0" containing the applicable keys.


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/piiKeys

        ```
      summary: getNetworkPiiPiiKeys
      tags:
      - PII
      operationId: getNetworkPiiPiiKeys
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: username
        in: query
        required: false
        type: string
        description: The username of a Systems Manager user
      - name: email
        in: query
        required: false
        type: string
        description: The email of a network user account or a Systems Manager device
      - name: mac
        in: query
        required: false
        type: string
        description: The MAC of a network client device or a Systems Manager device
      - name: serial
        in: query
        required: false
        type: string
        description: The serial of a Systems Manager device
      - name: imei
        in: query
        required: false
        type: string
        description: The IMEI of a Systems Manager device
      - name: bluetoothMac
        in: query
        required: false
        type: string
        description: The MAC of a Bluetooth client
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "N_1234": {

                  "macs": [

                    "00:77:00:77:00:77"

                  ],

                  "emails": [

                    "fake@example.com"

                  ],

                  "usernames": [

                    "fakename"

                  ],

                  "serials": [

                    "abcd1234"

                  ],

                  "imeis": [

                    "990000862471854"

                  ],

                  "bluetoothMacs": [

                    "00:77:00:77:00:77"

                  ]

                }

              }
          headers: {}
  /networks/{networkId}/pii/smOwnersForKey:
    get:
      description: >-
        Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/smOwnersForKey

        ```
      summary: getNetworkPiiSmOwnersForKey
      tags:
      - PII
      operationId: getNetworkPiiSmOwnersForKey
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: username
        in: query
        required: false
        type: string
        description: The username of a Systems Manager user
      - name: email
        in: query
        required: false
        type: string
        description: The email of a network user account or a Systems Manager device
      - name: mac
        in: query
        required: false
        type: string
        description: The MAC of a network client device or a Systems Manager device
      - name: serial
        in: query
        required: false
        type: string
        description: The serial of a Systems Manager device
      - name: imei
        in: query
        required: false
        type: string
        description: The IMEI of a Systems Manager device
      - name: bluetoothMac
        in: query
        required: false
        type: string
        description: The MAC of a Bluetooth client
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "N_1234": [

                  "1099541095293"

                ]

              }
          headers: {}
  /networks/{networkId}/wireless/rfProfiles/{rfProfileId}:
    put:
      description: Updates specified RF profile for this network
      summary: updateNetworkWirelessRfProfile
      tags:
      - Radio settings
      operationId: updateNetworkWirelessRfProfile
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: rfProfileId
        in: path
        required: true
        type: string
      - name: updateNetworkWirelessRfProfile
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkWirelessRfProfile'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "networkId": "N_24329156",

                "name": "Some Custom RF Profile",

                "clientBalancingEnabled": true,

                "minBitrateType": "band",

                "bandSelectionType": "ap",

                "apSelectionSettings": {

                  "bandOperationMode": "dual",

                  "bandSteeringEnabled": true

                },

                "twoFourGhzSettings": {

                  "maxPower": 30,

                  "minPower": 5,

                  "minBitrate": 11,

                  "rxsop": null,

                  "validAutoChannels": [

                    1,

                    6,

                    11

                  ],

                  "axEnabled": true

                },

                "fiveGhzSettings": {

                  "maxPower": 30,

                  "minPower": 8,

                  "minBitrate": 12,

                  "rxsop": null,

                  "validAutoChannels": [

                    36,

                    40,

                    44,

                    48,

                    52,

                    56,

                    60,

                    64,

                    100,

                    104,

                    108,

                    112,

                    116,

                    120,

                    124,

                    128,

                    132,

                    136,

                    140,

                    144,

                    149,

                    153,

                    157,

                    161,

                    165

                  ],

                  "channelWidth": "auto"

                }

              }
          headers: {}
    delete:
      description: Delete a RF Profile
      summary: deleteNetworkWirelessRfProfile
      tags:
      - Radio settings
      operationId: deleteNetworkWirelessRfProfile
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: rfProfileId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
    get:
      description: Return a RF profile
      summary: getNetworkWirelessRfProfile
      tags:
      - Radio settings
      operationId: getNetworkWirelessRfProfile
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: rfProfileId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "networkId": "N_24329156",

                "name": "Some Custom RF Profile",

                "clientBalancingEnabled": true,

                "minBitrateType": "band",

                "bandSelectionType": "ap",

                "apSelectionSettings": {

                  "bandOperationMode": "dual",

                  "bandSteeringEnabled": true

                },

                "twoFourGhzSettings": {

                  "maxPower": 30,

                  "minPower": 5,

                  "minBitrate": 11,

                  "rxsop": null,

                  "validAutoChannels": [

                    1,

                    6,

                    11

                  ],

                  "axEnabled": true

                },

                "fiveGhzSettings": {

                  "maxPower": 30,

                  "minPower": 8,

                  "minBitrate": 12,

                  "rxsop": null,

                  "validAutoChannels": [

                    36,

                    40,

                    44,

                    48,

                    52,

                    56,

                    60,

                    64,

                    100,

                    104,

                    108,

                    112,

                    116,

                    120,

                    124,

                    128,

                    132,

                    136,

                    140,

                    144,

                    149,

                    153,

                    157,

                    161,

                    165

                  ],

                  "channelWidth": "auto"

                }

              }
          headers: {}
  /networks/{networkId}/devices/{serial}/wireless/radioSettings:
    get:
      description: Return the radio settings of a device
      summary: getNetworkDeviceWirelessRadioSettings
      tags:
      - Radio settings
      operationId: getNetworkDeviceWirelessRadioSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "serial": "Q234-ABCD-5678",

                "rfProfileId": "1234"

              }
          headers: {}
    put:
      description: Update the radio settings of a device
      summary: updateNetworkDeviceWirelessRadioSettings
      tags:
      - Radio settings
      operationId: updateNetworkDeviceWirelessRadioSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      - name: updateNetworkDeviceWirelessRadioSettings
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkDeviceWirelessRadioSettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "serial": "Q234-ABCD-5678",

                "rfProfileId": "1234"

              }
          headers: {}
  /networks/{networkId}/wireless/rfProfiles:
    get:
      description: List the non-basic RF profiles for this network
      summary: getNetworkWirelessRfProfiles
      tags:
      - Radio settings
      operationId: getNetworkWirelessRfProfiles
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: includeTemplateProfiles
        in: query
        required: false
        type: boolean
        description: >2
              If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template
              should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "Some Custom RF Profile",

                  "clientBalancingEnabled": true,

                  "minBitrateType": "band",

                  "bandSelectionType": "ap",

                  "apSelectionSettings": {

                    "bandOperationMode": "dual",

                    "bandSteeringEnabled": true

                  },

                  "twoFourGhzSettings": {

                    "maxPower": 30,

                    "minPower": 5,

                    "minBitrate": 11,

                    "rxsop": null,

                    "validAutoChannels": [

                      1,

                      6,

                      11

                    ],

                    "axEnabled": true

                  },

                  "fiveGhzSettings": {

                    "maxPower": 30,

                    "minPower": 8,

                    "minBitrate": 12,

                    "rxsop": null,

                    "validAutoChannels": [

                      36,

                      40,

                      44,

                      48,

                      52,

                      56,

                      60,

                      64,

                      100,

                      104,

                      108,

                      112,

                      116,

                      120,

                      124,

                      128,

                      132,

                      136,

                      140,

                      144,

                      149,

                      153,

                      157,

                      161,

                      165

                    ],

                    "channelWidth": "auto"

                  }

                }

              ]
          headers: {}
    post:
      description: Creates new RF profile for this network
      summary: createNetworkWirelessRfProfile
      tags:
      - Radio settings
      operationId: createNetworkWirelessRfProfile
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: createNetworkWirelessRfProfile
        in: body
        required: true
        schema:
          $ref: '#/definitions/createNetworkWirelessRfProfile'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "networkId": "N_24329156",

                "name": "Some Custom RF Profile",

                "clientBalancingEnabled": true,

                "minBitrateType": "band",

                "bandSelectionType": "ap",

                "apSelectionSettings": {

                  "bandOperationMode": "dual",

                  "bandSteeringEnabled": true

                },

                "twoFourGhzSettings": {

                  "maxPower": 30,

                  "minPower": 5,

                  "minBitrate": 11,

                  "rxsop": null,

                  "validAutoChannels": [

                    1,

                    6,

                    11

                  ],

                  "axEnabled": true

                },

                "fiveGhzSettings": {

                  "maxPower": 30,

                  "minPower": 8,

                  "minBitrate": 12,

                  "rxsop": null,

                  "validAutoChannels": [

                    36,

                    40,

                    44,

                    48,

                    52,

                    56,

                    60,

                    64,

                    100,

                    104,

                    108,

                    112,

                    116,

                    120,

                    124,

                    128,

                    132,

                    136,

                    140,

                    144,

                    149,

                    153,

                    157,

                    161,

                    165

                  ],

                  "channelWidth": "auto"

                }

              }
          headers: {}
  /organizations/{organizationId}/samlRoles:
    post:
      description: Create a SAML role
      summary: createOrganizationSamlRole
      tags:
      - SAML roles
      operationId: createOrganizationSamlRole
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: createOrganizationSamlRole
        in: body
        required: false
        schema:
          $ref: '#/definitions/createOrganizationSamlRole'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "TEdJIEN1c3RvbWVy",

                "role": "myrole",

                "orgAccess": "none",

                "networks": [

                  {

                    "id": "N_1234",

                    "access": "full"

                  }

                ],

                "tags": [

                  {

                    "tag": "west",

                    "access": "read-only"

                  }

                ]

              }
          headers: {}
    get:
      description: List the SAML roles for this organization
      summary: getOrganizationSamlRoles
      tags:
      - SAML roles
      operationId: getOrganizationSamlRoles
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "TEdJIEN1c3RvbWVy",

                  "role": "myrole",

                  "orgAccess": "none",

                  "networks": [

                    {

                      "id": "N_1234",

                      "access": "full"

                    }

                  ],

                  "tags": [

                    {

                      "tag": "west",

                      "access": "read-only"

                    }

                  ]

                }

              ]
          headers: {}
  /organizations/{organizationId}/samlRoles/{samlRoleId}:
    get:
      description: Return a SAML role
      summary: getOrganizationSamlRole
      tags:
      - SAML roles
      operationId: getOrganizationSamlRole
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: samlRoleId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "TEdJIEN1c3RvbWVy",

                "role": "myrole",

                "orgAccess": "none",

                "networks": [

                  {

                    "id": "N_1234",

                    "access": "full"

                  }

                ],

                "tags": [

                  {

                    "tag": "west",

                    "access": "read-only"

                  }

                ]

              }
          headers: {}
    delete:
      description: Remove a SAML role
      summary: deleteOrganizationSamlRole
      tags:
      - SAML roles
      operationId: deleteOrganizationSamlRole
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: samlRoleId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
    put:
      description: Update a SAML role
      summary: updateOrganizationSamlRole
      tags:
      - SAML roles
      operationId: updateOrganizationSamlRole
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: samlRoleId
        in: path
        required: true
        type: string
      - name: updateOrganizationSamlRole
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateOrganizationSamlRole'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "TEdJIEN1c3RvbWVy",

                "role": "myrole",

                "orgAccess": "none",

                "networks": [

                  {

                    "id": "N_1234",

                    "access": "full"

                  }

                ],

                "tags": [

                  {

                    "tag": "west",

                    "access": "read-only"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/sm/profiles:
    get:
      description: List all the profiles in the network
      summary: getNetworkSmProfiles
      tags:
      - SM
      operationId: getNetworkSmProfiles
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "profiles": [

                  {

                    "id": "1234",

                    "payload_display_name": "API Profile",

                    "payload_identifier": "com.meraki.sm.1",

                    "payload_description": "API docs test",

                    "scope": "some",

                    "tags": [

                      "tag1",

                      "tag2"

                    ],

                    "wifis": [],

                    "payload_types": [

                      "Privacy",

                      "Document"

                    ]

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/sm/user/{userId}/softwares:
    get:
      description: Get a list of softwares associated with a user
      summary: getNetworkSmUserSoftwares
      tags:
      - SM
      operationId: getNetworkSmUserSoftwares
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: userId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "appId": "1234",

                  "bundleSize": null,

                  "createdAt": "2018-02-11T00:00:00Z",

                  "deviceId": "1234",

                  "dynamicSize": null,

                  "id": "1284392014819",

                  "identifier": "com.test.app",

                  "installedAt": "2018-05-12T00:00:00Z",

                  "toInstall": null,

                  "iosRedemptionCode": null,

                  "isManaged": true,

                  "itunesId": null,

                  "licenseKey": null,

                  "name": "My app",

                  "path": "/Path/to/app.app",

                  "redemptionCode": null,

                  "shortVersion": null,

                  "status": null,

                  "toUninstall": false,

                  "uninstalledAt": null,

                  "updatedAt": "2018-05-12T00:00:00Z",

                  "vendor": "Apple",

                  "version": "0.1"

                }

              ]
          headers: {}
  /networks/{networkId}/sm/devices/checkin:
    put:
      description: Force check-in a set of devices
      summary: checkinNetworkSmDevices
      tags:
      - SM
      operationId: checkinNetworkSmDevices
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: checkinNetworkSmDevices
        in: body
        required: false
        schema:
          $ref: '#/definitions/checkinNetworkSmDevices'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "success": true

              }
          headers: {}
  /networks/{networkId}/sm/{deviceId}/deviceProfiles:
    get:
      description: Get the profiles associated with a device
      summary: getNetworkSmDeviceProfiles
      tags:
      - SM
      operationId: getNetworkSmDeviceProfiles
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: deviceId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "deviceId": "1234",

                  "id": "1284392014819",

                  "isEncrypted": true,

                  "isManaged": true,

                  "profileData": {},

                  "profileIdentifier": "com.test.app",

                  "name": "My profile",

                  "version": "0.0.1"

                }

              ]
          headers: {}
  /networks/{networkId}/sm/{deviceId}/networkAdapters:
    get:
      description: List the network adapters of a device
      summary: getNetworkSmNetworkAdapters
      tags:
      - SM
      operationId: getNetworkSmNetworkAdapters
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: deviceId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "dhcpServer": "123.123.123.1",

                  "dnsServer": "8.8.8.8, 8.8.4.4",

                  "gateway": "1.2.3.5",

                  "id": "1284392014819",

                  "ip": "1.2.3.4",

                  "mac": "00:11:22:33:44:55",

                  "name": "en0",

                  "subnet": "255.255.255.0"

                }

              ]
          headers: {}
  /networks/{networkId}/sm/app/polaris:
    get:
      description: Get details for a Cisco Polaris app if it exists
      summary: getNetworkSmAppPolaris
      tags:
      - SM
      operationId: getNetworkSmAppPolaris
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: bundleId
        in: query
        required: false
        type: string
        description: The bundle ID of the app to be found, defaults to com.cisco.ciscosecurity.app
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "app_id": "123456",

                "bundle_id": "com.cisco.polaris",

                "scope": "withAny",

                "tags": " tag1 tag2 ",

                "prevent_auto_install": true,

                "uses_vpp": true

              }
          headers: {}
    post:
      description: Create a new Polaris app
      summary: createNetworkSmAppPolaris
      tags:
      - SM
      operationId: createNetworkSmAppPolaris
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: createNetworkSmAppPolaris
        in: body
        required: true
        schema:
          $ref: '#/definitions/createNetworkSmAppPolaris'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "success": true,

                "app_id": "123456",

                "bundle_id": "com.cisco.polaris",

                "scope": "withAny",

                "tags": " tag1 tag2 ",

                "prevent_auto_install": true,

                "uses_vpp": true

              }
          headers: {}
  /networks/{networkId}/sm/{deviceId}/cellularUsageHistory:
    get:
      description: Return the client's daily cellular data usage history. Usage data is in kilobytes.
      summary: getNetworkSmCellularUsageHistory
      tags:
      - SM
      operationId: getNetworkSmCellularUsageHistory
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: deviceId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "sent": 138.0,

                "recv": 61.0,

                "ts": 1526087474

              }
          headers: {}
  /networks/{networkId}/sm/{deviceId}/certs:
    get:
      description: List the certs on a device
      summary: getNetworkSmCerts
      tags:
      - SM
      operationId: getNetworkSmCerts
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: deviceId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "name": "My Cert",

                  "notValidAfter": "May 12, 2018",

                  "notValidBefore": "Feb 11, 2018",

                  "certPem": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----\n",

                  "deviceId": "1234",

                  "issuer": "",

                  "subject": "",

                  "id": "15"

                }

              ]
          headers: {}
  /networks/{networkId}/sm/app/polaris/{appId}:
    put:
      description: Update an existing Polaris app
      summary: updateNetworkSmAppPolaris
      tags:
      - SM
      operationId: updateNetworkSmAppPolaris
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: appId
        in: path
        required: true
        type: string
      - name: updateNetworkSmAppPolaris
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkSmAppPolaris'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "success": true,

                "app_id": "123456",

                "bundle_id": "com.cisco.polaris",

                "scope": "withAny",

                "tags": " tag1 tag2 ",

                "prevent_auto_install": true,

                "uses_vpp": true

              }
          headers: {}
    delete:
      description: Delete a Cisco Polaris app
      summary: deleteNetworkSmAppPolaris
      tags:
      - SM
      operationId: deleteNetworkSmAppPolaris
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: appId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "success": true

              }
          headers: {}
  /networks/{networkId}/sm/user/{userId}/deviceProfiles:
    get:
      description: Get the profiles associated with a user
      summary: getNetworkSmUserDeviceProfiles
      tags:
      - SM
      operationId: getNetworkSmUserDeviceProfiles
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: userId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "deviceId": "1234",

                  "id": "1284392014819",

                  "isEncrypted": true,

                  "isManaged": true,

                  "profileData": {},

                  "profileIdentifier": "com.test.app",

                  "name": "My profile",

                  "version": "0.0.1"

                }

              ]
          headers: {}
  /networks/{networkId}/sm/users:
    get:
      description: List the owners in an SM network with various specified fields and filters
      summary: getNetworkSmUsers
      tags:
      - SM
      operationId: getNetworkSmUsers
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: ids
        in: query
        required: false
        type: string
        description: Filter users by id(s). Multiple ids can be passed in as comma separated values.
      - name: usernames
        in: query
        required: false
        type: string
        description: Filter users by username(s). Multiple usernames can be passed in as comma separated values.
      - name: emails
        in: query
        required: false
        type: string
        description: Filter users by email(s). Multiple emails can be passed in as comma separated values.
      - name: scope
        in: query
        required: false
        type: string
        description: Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags as comma separated values.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "1234",

                  "email": "miles@meraki.com",

                  "fullName": "Miles Meraki",

                  "username": "",

                  "hasPassword": false,

                  "tags": [

                    "tag1",

                    "tag2"

                  ],

                  "adGroups": [],

                  "asmGroups": [],

                  "isExternal": false,

                  "displayName": "Miles Meraki <miles@meraki.com>",

                  "hasIdentityCertificate": false,

                  "userThumbnail": "https://s3.amazonaws.com/image.extension"

                }

              ]
          headers: {}
  /networks/{networkId}/sm/{deviceId}/softwares:
    get:
      description: Get a list of softwares associated with a device
      summary: getNetworkSmSoftwares
      tags:
      - SM
      operationId: getNetworkSmSoftwares
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: deviceId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "appId": "1234",

                  "bundleSize": null,

                  "createdAt": "2018-02-11T00:00:00Z",

                  "deviceId": "1234",

                  "dynamicSize": null,

                  "id": "1284392014819",

                  "identifier": "com.test.app",

                  "installedAt": "2018-05-12T00:00:00Z",

                  "toInstall": null,

                  "iosRedemptionCode": null,

                  "isManaged": true,

                  "itunesId": null,

                  "licenseKey": null,

                  "name": "My app",

                  "path": "/Path/to/app.app",

                  "redemptionCode": null,

                  "shortVersion": null,

                  "status": null,

                  "toUninstall": false,

                  "uninstalledAt": null,

                  "updatedAt": "2018-05-12T00:00:00Z",

                  "vendor": "Apple",

                  "version": "0.1"

                }

              ]
          headers: {}
  /networks/{networkId}/sm/{deviceId}/restrictions:
    get:
      description: List the restrictions on a device
      summary: getNetworkSmRestrictions
      tags:
      - SM
      operationId: getNetworkSmRestrictions
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: deviceId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "profile": "com.meraki.sm.1",

                  "restrictions": {

                    "myRestriction": {

                      "value": true

                    }

                  }

                }

              ]
          headers: {}
  /networks/{networkId}/sm/{deviceId}/wlanLists:
    get:
      description: List the saved SSID names on a device
      summary: getNetworkSmWlanLists
      tags:
      - SM
      operationId: getNetworkSmWlanLists
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: deviceId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "createdAt": "2018-02-11T00:00:00Z",

                  "id": "1284392014819",

                  "xml": "Preferred networks on en0:"

                }

              ]
          headers: {}
  /networks/{network_id}/sm/{id}/deviceCommandLogs:
    get:
      description: >2
            Return historical records of commands sent to Systems Manager devices.
            <p>Note that this will include the name of the Dashboard user who initiated the command if it was generated
            by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out
            of any reports.</p>
      summary: getNetworkSmDeviceCommandLogs
      tags:
      - SM
      operationId: getNetworkSmDeviceCommandLogs
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: network_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
      - name: perPage
        in: query
        required: false
        type: integer
        format: int32
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
      - name: startingAfter
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: endingBefore
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "action": "UpdateProfile",

                  "name": "My profile",

                  "details": "{}",

                  "dashboardUser": "Miles Meraki",

                  "ts": 1526087474.0

                }

              ]
          headers: {}
  /networks/{networkId}/sm/bypassActivationLockAttempts/{attemptId}:
    get:
      description: Bypass activation lock attempt status
      summary: getNetworkSmBypassActivationLockAttempt
      tags:
      - SM
      operationId: getNetworkSmBypassActivationLockAttempt
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: attemptId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "status": "complete",

                "data": {

                  "38290139892": {

                    "success": true

                  },

                  "2090938209": {

                    "success": false,

                    "errors": [

                      "Activation lock bypass code not known for this device"

                    ]

                  }

                }

              }
          headers: {}
  /networks/{networkId}/sm/device/{deviceId}/refreshDetails:
    post:
      description: Refresh the details of a device
      summary: refreshNetworkSmDeviceDetails
      tags:
      - SM
      operationId: refreshNetworkSmDeviceDetails
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: deviceId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          headers: {}
  /networks/{networkId}/sm/devices/move:
    put:
      description: Move a set of devices to a new network
      summary: moveNetworkSmDevices
      tags:
      - SM
      operationId: moveNetworkSmDevices
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: moveNetworkSmDevices
        in: body
        required: true
        schema:
          $ref: '#/definitions/moveNetworkSmDevices'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "success": true

              }
          headers: {}
  /networks/{network_id}/sm/devices/lock:
    put:
      description: Lock a set of devices
      summary: lockNetworkSmDevices
      tags:
      - SM
      operationId: lockNetworkSmDevices
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: network_id
        in: path
        required: true
        type: string
      - name: lockNetworkSmDevices
        in: body
        required: false
        schema:
          $ref: '#/definitions/lockNetworkSmDevices'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "success": true

              }
          headers: {}
  /networks/{networkId}/sm/device/fields:
    put:
      description: Modify the fields of a device
      summary: updateNetworkSmDeviceFields
      tags:
      - SM
      operationId: updateNetworkSmDeviceFields
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkSmDeviceFields
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateNetworkSmDeviceFields'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "success": [

                  {

                    "id": "1284392014819",

                    "serial": "F5XKHEBX",

                    "wifiMac": "00:11:22:33:44:55",

                    "name": "Miles's phone",

                    "notes": "Here's some info about my device"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/sm/{deviceId}/securityCenters:
    get:
      description: List the security centers on a device
      summary: getNetworkSmSecurityCenters
      tags:
      - SM
      operationId: getNetworkSmSecurityCenters
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: deviceId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "isRooted": true,

                  "hasAntiVirus": true,

                  "antiVirusName": "meraki_av",

                  "isFireWallEnabled": true,

                  "hasFireWallInstalled": true,

                  "fireWallName": "meraki_fw",

                  "isDiskEncrypted": true,

                  "isAutoLoginDisabled": true,

                  "id": "1284392014819",

                  "runningProcs": "/software,/software_2"

                }

              ]
          headers: {}
  /networks/{network_id}/sm/{id}/connectivity:
    get:
      description: Returns historical connectivity data (whether a device is regularly checking in to Dashboard).
      summary: getNetworkSmConnectivity
      tags:
      - SM
      operationId: getNetworkSmConnectivity
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: network_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
      - name: perPage
        in: query
        required: false
        type: integer
        format: int32
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
      - name: startingAfter
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: endingBefore
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "firstSeenAt": 1518365681.0,

                  "lastSeenAt": 1526087474.0

                }

              ]
          headers: {}
  /networks/{network_id}/sm/{id}/performanceHistory:
    get:
      description: Return historical records of various Systems Manager client metrics for desktop devices.
      summary: getNetworkSmPerformanceHistory
      tags:
      - SM
      operationId: getNetworkSmPerformanceHistory
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: network_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
      - name: perPage
        in: query
        required: false
        type: integer
        format: int32
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
      - name: startingAfter
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: endingBefore
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "cpuPercentUsed": 0.95,

                  "memFree": 1024,

                  "memWired": 4096,

                  "memActive": 1024,

                  "memInactive": 2048,

                  "networkSent": 512,

                  "networkReceived": 512,

                  "swapUsed": 768,

                  "diskUsage": {

                    "c": {

                      "used": 2048,

                      "space": 9096

                    }

                  },

                  "ts": 1526087474.0

                }

              ]
          headers: {}
  /networks/{networkId}/sm/devices/{deviceId}/unenroll:
    post:
      description: Unenroll a device
      summary: unenrollNetworkSmDevice
      tags:
      - SM
      operationId: unenrollNetworkSmDevice
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: deviceId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "success": true

              }
          headers: {}
  /networks/{networkId}/sm/bypassActivationLockAttempts:
    post:
      description: Bypass activation lock attempt
      summary: createNetworkSmBypassActivationLockAttempt
      tags:
      - SM
      operationId: createNetworkSmBypassActivationLockAttempt
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: createNetworkSmBypassActivationLockAttempt
        in: body
        required: true
        schema:
          $ref: '#/definitions/createNetworkSmBypassActivationLockAttempt'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "status": "pending",

                "data": {}

              }
          headers: {}
  /networks/{networkId}/sm/device/wipe:
    put:
      description: Wipe a device
      summary: wipeNetworkSmDevice
      tags:
      - SM
      operationId: wipeNetworkSmDevice
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: wipeNetworkSmDevice
        in: body
        required: false
        schema:
          $ref: '#/definitions/wipeNetworkSmDevice'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "success": true

              }
          headers: {}
  /networks/{networkId}/sm/devices/tags:
    put:
      description: Add, delete, or update the tags of a set of devices
      summary: updateNetworkSmDevicesTags
      tags:
      - SM
      operationId: updateNetworkSmDevicesTags
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkSmDevicesTags
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateNetworkSmDevicesTags'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "success": [

                  {

                    "id": "1284392014819",

                    "serial": "F5XKHEBX",

                    "wifiMac": "00:11:22:33:44:55",

                    "tags": [

                      "tag1",

                      "tag2"

                    ]

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/sm/devices:
    get:
      description: List the devices enrolled in an SM network with various specified fields and filters
      summary: getNetworkSmDevices
      tags:
      - SM
      operationId: getNetworkSmDevices
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: fields
        in: query
        required: false
        type: string
        description: >-
          Additional fields that will be displayed for each device. Multiple fields can be passed in as comma separated values.
              The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,
              systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,
              ownerEmail, ownerUsername, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,
              simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,
              isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,
              hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, and androidSecurityPatchVersion.
      - name: wifiMacs
        in: query
        required: false
        type: string
        description: Filter devices by wifi mac(s). Multiple wifi macs can be passed in as comma separated values.
      - name: serials
        in: query
        required: false
        type: string
        description: Filter devices by serial(s). Multiple serials can be passed in as comma separated values.
      - name: ids
        in: query
        required: false
        type: string
        description: Filter devices by id(s). Multiple ids can be passed in as comma separated values.
      - name: scope
        in: query
        required: false
        type: string
        description: Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values.
      - name: batchSize
        in: query
        required: false
        type: integer
        format: int32
        description: Number of devices to return, 1000 is the default as well as the max.
      - name: batchToken
        in: query
        required: false
        type: string
        description: >-
          If the network has more devices than the batch size, a batch token will be returned
              as a part of the device list. To see the remainder of the devices, pass in the batchToken as a parameter in the next request.
              Requests made with the batchToken do not require additional parameters as the batchToken includes the parameters passed in
              with the original request. Additional parameters passed in with the batchToken will be ignored.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "devices": [

                  {

                    "id": "1284392014819",

                    "name": "Miles's phone",

                    "tags": [

                      "tag1",

                      "tag2"

                    ],

                    "ssid": "My SSID",

                    "wifiMac": "00:11:22:33:44:55",

                    "osName": "iOS 9.3.5",

                    "systemModel": "iPhone",

                    "uuid": "3d990628ede4c628d52",

                    "serialNumber": "F5XKHEBX",

                    "ip": "1.2.3.4"

                  }

                ],

                "batchToken": "MMbCbpHZtG3TKUCr9B9uc5"

              }
          headers: {}
  /networks/{network_id}/sm/{id}/desktopLogs:
    get:
      description: Return historical records of various Systems Manager network connection details for desktop devices.
      summary: getNetworkSmDesktopLogs
      tags:
      - SM
      operationId: getNetworkSmDesktopLogs
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: network_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
      - name: perPage
        in: query
        required: false
        type: integer
        format: int32
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
      - name: startingAfter
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: endingBefore
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "measuredAt": 1526087474.0,

                  "user": "milesmeraki",

                  "networkDevice": "NIC",

                  "networkDriver": "Driver",

                  "wifiChannel": "11",

                  "wifiAuth": "wpa-psk",

                  "wifiBssid": "00:11:22:33:44:55",

                  "wifiSsid": "ssid",

                  "wifiRssi": "-11",

                  "wifiNoise": "-99",

                  "dhcpServer": "1.2.3.4",

                  "ip": "1.2.3.4",

                  "networkMTU": "1500",

                  "subnet": "192.168.1.0/24",

                  "gateway": "1.2.3.5",

                  "publicIP": "123.123.123.1",

                  "dnsServer": "8",

                  "ts": 1526087474.0

                }

              ]
          headers: {}
  /networks/{networkId}/snmpSettings:
    get:
      description: Return the SNMP settings for a network
      summary: getNetworkSnmpSettings
      tags:
      - SNMP settings
      operationId: getNetworkSnmpSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "access": "users",

                "users": [

                  {

                    "username": "AzureDiamond",

                    "passphrase": "hunter2"

                  }

                ]

              }
          headers: {}
    put:
      description: Update the SNMP settings for a network
      summary: updateNetworkSnmpSettings
      tags:
      - SNMP settings
      operationId: updateNetworkSnmpSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkSnmpSettings
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkSnmpSettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "access": "users",

                "users": [

                  {

                    "username": "AzureDiamond",

                    "passphrase": "hunter2"

                  }

                ]

              }
          headers: {}
  /organizations/{organizationId}/snmp:
    get:
      description: Return the SNMP settings for an organization
      summary: getOrganizationSnmp
      tags:
      - SNMP settings
      operationId: getOrganizationSnmp
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "v2cEnabled": false,

                "v3Enabled": true,

                "v3AuthMode": "SHA",

                "v3PrivMode": "AES128",

                "peerIps": "123.123.123.1",

                "hostname": "n1.meraki.com",

                "port": 443

              }
          headers: {}
    put:
      description: Update the SNMP settings for an organization
      summary: updateOrganizationSnmp
      tags:
      - SNMP settings
      operationId: updateOrganizationSnmp
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: updateOrganizationSnmp
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateOrganizationSnmp'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "v2cEnabled": false,

                "v3Enabled": true,

                "v3AuthMode": "SHA",

                "v3PrivMode": "AES128",

                "peerIps": "123.123.123.1",

                "hostname": "n1.meraki.com",

                "port": 443

              }
          headers: {}
  /networks/{networkId}/ssids/{number}:
    get:
      description: Return a single SSID
      summary: getNetworkSsid
      tags:
      - SSIDs
      operationId: getNetworkSsid
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: number
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "number": 0,

                "name": "My SSID",

                "enabled": true,

                "splashPage": "Click-through splash page",

                "ssidAdminAccessible": false,

                "authMode": "8021x-radius",

                "encryptionMode": "wpa-eap",

                "wpaEncryptionMode": "WPA2 only",

                "radiusServers": [

                  {

                    "host": "0.0.0.0",

                    "port": 3000

                  }

                ],

                "radiusAccountingEnabled": false,

                "radiusEnabled": true,

                "radiusAttributeForGroupPolicies": "Filter-Id",

                "radiusFailoverPolicy": "null",

                "radiusLoadBalancingPolicy": "null",

                "ipAssignmentMode": "NAT mode",

                "adminSplashUrl": "http://example.com",

                "splashTimeout": "30 minutes",

                "walledGardenEnabled": true,

                "walledGardenRanges": "example.com",

                "minBitrate": 11,

                "bandSelection": "5 GHz band only",

                "perClientBandwidthLimitUp": 0,

                "perClientBandwidthLimitDown": 0

              }
          headers: {}
    put:
      description: Update the attributes of an SSID
      summary: updateNetworkSsid
      tags:
      - SSIDs
      operationId: updateNetworkSsid
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: number
        in: path
        required: true
        type: string
      - name: updateNetworkSsid
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkSsid'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "number": 0,

                "name": "My SSID",

                "enabled": true,

                "splashPage": "Click-through splash page",

                "ssidAdminAccessible": false,

                "authMode": "8021x-radius",

                "encryptionMode": "wpa-eap",

                "wpaEncryptionMode": "WPA2 only",

                "radiusServers": [

                  {

                    "host": "0.0.0.0",

                    "port": 3000

                  }

                ],

                "radiusAccountingEnabled": false,

                "radiusEnabled": true,

                "radiusAttributeForGroupPolicies": "Filter-Id",

                "radiusFailoverPolicy": "null",

                "radiusLoadBalancingPolicy": "null",

                "ipAssignmentMode": "NAT mode",

                "adminSplashUrl": "http://example.com",

                "splashTimeout": "30 minutes",

                "walledGardenEnabled": true,

                "walledGardenRanges": "example.com",

                "minBitrate": 11,

                "bandSelection": "5 GHz band only",

                "perClientBandwidthLimitUp": 0,

                "perClientBandwidthLimitDown": 0

              }
          headers: {}
  /networks/{networkId}/devices/{serial}/wireless/status:
    get:
      description: Return the SSID statuses of an access point
      summary: getNetworkDeviceWirelessStatus
      tags:
      - SSIDs
      operationId: getNetworkDeviceWirelessStatus
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "basicServiceSets": [

                  {

                    "ssidName": "My SSID",

                    "ssidNumber": 0,

                    "enabled": true,

                    "band": "2.4 GHz",

                    "bssid": "8A:15:04:00:00:00",

                    "channel": 11,

                    "channelWidth": "20 MHz",

                    "power": "18 dBm",

                    "visible": true,

                    "broadcasting": true

                  },

                  {

                    "ssidName": "My SSID",

                    "ssidNumber": 0,

                    "enabled": true,

                    "band": "5 GHz",

                    "bssid": "8A:15:14:00:00:00",

                    "channel": 149,

                    "channelWidth": "80 MHz",

                    "power": "18 dBm",

                    "visible": true,

                    "broadcasting": true

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/ssids:
    get:
      description: List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.
      summary: getNetworkSsids
      tags:
      - SSIDs
      operationId: getNetworkSsids
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "number": 0,

                  "name": "My SSID",

                  "enabled": true,

                  "splashPage": "Click-through splash page",

                  "ssidAdminAccessible": false,

                  "authMode": "8021x-radius",

                  "encryptionMode": "wpa-eap",

                  "wpaEncryptionMode": "WPA2 only",

                  "radiusServers": [

                    {

                      "host": "0.0.0.0",

                      "port": 3000

                    }

                  ],

                  "radiusAccountingEnabled": false,

                  "radiusEnabled": true,

                  "radiusAttributeForGroupPolicies": "Filter-Id",

                  "radiusFailoverPolicy": "null",

                  "radiusLoadBalancingPolicy": "null",

                  "ipAssignmentMode": "NAT mode",

                  "adminSplashUrl": "http://example.com",

                  "splashTimeout": "30 minutes",

                  "walledGardenEnabled": true,

                  "walledGardenRanges": "example.com",

                  "minBitrate": 11,

                  "bandSelection": "5 GHz band only",

                  "perClientBandwidthLimitUp": 0,

                  "perClientBandwidthLimitDown": 0

                }

              ]
          headers: {}
  /networks/{networkId}/clients/{clientId}/securityEvents:
    get:
      description: List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      summary: getNetworkClientSecurityEvents
      tags:
      - Security events
      operationId: getNetworkClientSecurityEvents
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: clientId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 791 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 791 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days.
      - name: perPage
        in: query
        required: false
        type: integer
        format: int32
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
      - name: startingAfter
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: endingBefore
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "ts": 1547683314.2703979,

                  "deviceMac": "00:18:0a:01:02:03",

                  "clientMac": "A1:B2:C3:D4:E5:F6",

                  "srcIp": "1.2.3.4:34195",

                  "destIp": "10.20.30.40:80",

                  "protocol": "tcp/ip",

                  "priority": "2",

                  "classification": "4",

                  "blocked": true,

                  "message": "SERVER-WEBAPP JBoss JMX console access attempt",

                  "signature": "1:21516:9",

                  "sigSource": ""

                },

                {

                  "ts": 1547683827.7232649,

                  "deviceMac": "00:18:0a:01:02:03",

                  "clientMac": "A1:B2:C3:D4:E5:F6",

                  "srcIp": "1.2.3.4:56023",

                  "destIp": "10.20.30.40:80",

                  "protocol": "tcp/ip",

                  "priority": "1",

                  "classification": "33",

                  "blocked": true,

                  "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",

                  "signature": "1:25975:2",

                  "sigSource": ""

                }

              ]
          headers: {}
  /networks/{networkId}/securityEvents:
    get:
      description: List the security events for a network
      summary: getNetworkSecurityEvents
      tags:
      - Security events
      operationId: getNetworkSecurityEvents
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 365 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days.
      - name: perPage
        in: query
        required: false
        type: integer
        format: int32
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
      - name: startingAfter
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: endingBefore
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "ts": 1547683314.2703979,

                  "deviceMac": "00:18:0a:01:02:03",

                  "clientMac": "A1:B2:C3:D4:E5:F6",

                  "srcIp": "1.2.3.4:34195",

                  "destIp": "10.20.30.40:80",

                  "protocol": "tcp/ip",

                  "priority": "2",

                  "classification": "4",

                  "blocked": true,

                  "message": "SERVER-WEBAPP JBoss JMX console access attempt",

                  "signature": "1:21516:9",

                  "sigSource": ""

                },

                {

                  "ts": 1547683827.7232649,

                  "deviceMac": "00:18:0a:01:02:03",

                  "clientMac": "A1:B2:C3:D4:E5:F6",

                  "srcIp": "1.2.3.4:56023",

                  "destIp": "10.20.30.40:80",

                  "protocol": "tcp/ip",

                  "priority": "1",

                  "classification": "33",

                  "blocked": true,

                  "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",

                  "signature": "1:25975:2",

                  "sigSource": ""

                }

              ]
          headers: {}
  /organizations/{organizationId}/securityEvents:
    get:
      description: List the security events for an organization
      summary: getOrganizationSecurityEvents
      tags:
      - Security events
      operationId: getOrganizationSecurityEvents
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 365 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days.
      - name: perPage
        in: query
        required: false
        type: integer
        format: int32
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
      - name: startingAfter
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: endingBefore
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "ts": 1547683314.2703979,

                  "deviceMac": "00:18:0a:01:02:03",

                  "clientMac": "A1:B2:C3:D4:E5:F6",

                  "srcIp": "1.2.3.4:34195",

                  "destIp": "10.20.30.40:80",

                  "protocol": "tcp/ip",

                  "priority": "2",

                  "classification": "4",

                  "blocked": true,

                  "message": "SERVER-WEBAPP JBoss JMX console access attempt",

                  "signature": "1:21516:9",

                  "sigSource": ""

                },

                {

                  "ts": 1547683827.7232649,

                  "deviceMac": "00:18:0a:01:02:03",

                  "clientMac": "A1:B2:C3:D4:E5:F6",

                  "srcIp": "1.2.3.4:56023",

                  "destIp": "10.20.30.40:80",

                  "protocol": "tcp/ip",

                  "priority": "1",

                  "classification": "33",

                  "blocked": true,

                  "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",

                  "signature": "1:25975:2",

                  "sigSource": ""

                }

              ]
          headers: {}
  /networks/{networkId}/splashLoginAttempts:
    get:
      description: List the splash login attempts for a network
      summary: getNetworkSplashLoginAttempts
      tags:
      - Splash login attempts
      operationId: getNetworkSplashLoginAttempts
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: ssidNumber
        in: query
        required: false
        enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        type: string
        description: Only return the login attempts for the specified SSID
      - name: loginIdentifier
        in: query
        required: false
        type: string
        description: The username, email, or phone number used during login
      - name: timespan
        in: query
        required: false
        type: integer
        format: int32
        description: The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "name": "Miles Meraki",

                  "login": "miles@meraki.com",

                  "ssid": "My SSID",

                  "loginAt": 1518365681,

                  "gatewayDeviceMac": "00:11:22:33:44:55",

                  "clientMac": "22:33:44:55:66:77",

                  "clientId": "k74272e",

                  "authorization": "success"

                }

              ]
          headers: {}
  /networks/{networkId}/ssids/{number}/splashSettings:
    put:
      description: Modify the splash page settings for the given SSID
      summary: updateNetworkSsidSplashSettings
      tags:
      - Splash settings
      operationId: updateNetworkSsidSplashSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: number
        in: path
        required: true
        type: string
      - name: updateNetworkSsidSplashSettings
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkSsidSplashSettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "ssidNumber": 0,

                "splashPage": "Click-through splash page",

                "splashUrl": "https://www.custom_splash_url.com",

                "useSplashUrl": true

              }
          headers: {}
    get:
      description: Display the splash page settings for the given SSID
      summary: getNetworkSsidSplashSettings
      tags:
      - Splash settings
      operationId: getNetworkSsidSplashSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: number
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "ssidNumber": 0,

                "splashPage": "Click-through splash page",

                "splashUrl": "https://www.custom_splash_url.com",

                "useSplashUrl": true

              }
          headers: {}
  /networks/{networkId}/switch/accessControlLists:
    get:
      description: Return the access control lists for a MS network
      summary: getNetworkSwitchAccessControlLists
      tags:
      - Switch ACLs
      operationId: getNetworkSwitchAccessControlLists
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "rules": [

                  {

                    "comment": "Deny SSH",

                    "policy": "deny",

                    "ipVersion": "ipv4",

                    "protocol": "tcp",

                    "srcCidr": "10.1.10.0/24",

                    "srcPort": "any",

                    "dstCidr": "172.16.30/24",

                    "dstPort": 22,

                    "vlan": 10

                  },

                  {

                    "comment": "Default rule",

                    "policy": "allow",

                    "ipVersion": "any",

                    "protocol": "any",

                    "srcCidr": "any",

                    "srcPort": "any",

                    "dstCidr": "any",

                    "dstPort": "any",

                    "vlan": "any"

                  }

                ]

              }
          headers: {}
    put:
      description: Update the access control lists for a MS network
      summary: updateNetworkSwitchAccessControlLists
      tags:
      - Switch ACLs
      operationId: updateNetworkSwitchAccessControlLists
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkSwitchAccessControlLists
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateNetworkSwitchAccessControlLists'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "rules": [

                  {

                    "comment": "Deny SSH",

                    "policy": "deny",

                    "ipVersion": "ipv4",

                    "protocol": "tcp",

                    "srcCidr": "10.1.10.0/24",

                    "srcPort": "any",

                    "dstCidr": "172.16.30/24",

                    "dstPort": 22,

                    "vlan": 10

                  },

                  {

                    "comment": "Default rule",

                    "policy": "allow",

                    "ipVersion": "any",

                    "protocol": "any",

                    "srcCidr": "any",

                    "srcPort": "any",

                    "dstCidr": "any",

                    "dstPort": "any",

                    "vlan": "any"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/switch/portSchedules/{portScheduleId}:
    put:
      description: Update a switch port schedule
      summary: updateNetworkSwitchPortSchedule
      tags:
      - Switch port schedules
      operationId: updateNetworkSwitchPortSchedule
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: portScheduleId
        in: path
        required: true
        type: string
      - name: updateNetworkSwitchPortSchedule
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkSwitchPortSchedule'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "networkId": "N_24329156",

                "name": "Weekdays schedule",

                "portSchedule": {

                  "monday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "tuesday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "wednesday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "thursday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "friday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "saturday": {

                    "active": false,

                    "from": "0:00",

                    "to": "24:00"

                  },

                  "sunday": {

                    "active": false,

                    "from": "0:00",

                    "to": "24:00"

                  }

                }

              }
          headers: {}
    delete:
      description: Delete a switch port schedule
      summary: deleteNetworkSwitchPortSchedule
      tags:
      - Switch port schedules
      operationId: deleteNetworkSwitchPortSchedule
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: portScheduleId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
  /networks/{networkId}/switch/portSchedules:
    post:
      description: Add a switch port schedule
      summary: createNetworkSwitchPortSchedule
      tags:
      - Switch port schedules
      operationId: createNetworkSwitchPortSchedule
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: createNetworkSwitchPortSchedule
        in: body
        required: true
        schema:
          $ref: '#/definitions/createNetworkSwitchPortSchedule'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "networkId": "N_24329156",

                "name": "Weekdays schedule",

                "portSchedule": {

                  "monday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "tuesday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "wednesday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "thursday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "friday": {

                    "active": true,

                    "from": "9:00",

                    "to": "17:00"

                  },

                  "saturday": {

                    "active": false,

                    "from": "0:00",

                    "to": "24:00"

                  },

                  "sunday": {

                    "active": false,

                    "from": "0:00",

                    "to": "24:00"

                  }

                }

              }
          headers: {}
    get:
      description: List switch port schedules
      summary: getNetworkSwitchPortSchedules
      tags:
      - Switch port schedules
      operationId: getNetworkSwitchPortSchedules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "Weekdays schedule",

                  "portSchedule": {

                    "monday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "tuesday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "wednesday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "thursday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "friday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "saturday": {

                      "active": false,

                      "from": "0:00",

                      "to": "24:00"

                    },

                    "sunday": {

                      "active": false,

                      "from": "0:00",

                      "to": "24:00"

                    }

                  }

                }

              ]
          headers: {}
  /devices/{serial}/switchPortStatuses:
    get:
      description: Return the status for all the ports of a switch
      summary: getDeviceSwitchPortStatuses
      tags:
      - Switch ports
      operationId: getDeviceSwitchPortStatuses
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "portId": "1",

                  "enabled": true,

                  "status": "Connected",

                  "errors": [

                    "PoE overload",

                    "Very high proportion of CRC errors"

                  ],

                  "warnings": [

                    "PoE port was denied power",

                    "High proportion of CRC errors"

                  ],

                  "speed": "10 Gbps",

                  "duplex": "full",

                  "usageInKb": {

                    "total": 40867,

                    "sent": 23008,

                    "recv": 17859

                  },

                  "cdp": {

                    "systemName": "",

                    "platform": "MS350-24X",

                    "deviceId": "0c8ddbddee:ff",

                    "portId": "Port 20",

                    "nativeVlan": 1,

                    "address": "10.0,0.1",

                    "managementAddress": "10.0.0.100",

                    "version": "1",

                    "vtpManagementDomain": "",

                    "capabilities": "Switch"

                  },

                  "lldp": {

                    "systemName": "MS350-24X - Test",

                    "systemDescription": "MS350-24X Cloud Managed PoE Switch",

                    "portId": "20",

                    "portDescription": "Port 20",

                    "chassisId": "0c:8d:db:dd:ee:ff",

                    "managementVlan": 1,

                    "portVlan": 1,

                    "managementAddress": "10.0.0.100",

                    "systemCapabilities": "switch"

                  },

                  "clientCount": 10,

                  "powerUsageInWh": 55.9

                }

              ]
          headers: {}
  /devices/{serial}/switchPortStatuses/packets:
    get:
      description: Return the packet counters for all the ports of a switch
      summary: getDeviceSwitchPortStatusesPackets
      tags:
      - Switch ports
      operationId: getDeviceSwitchPortStatusesPackets
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 1 day from today.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 1 day. The default is 1 day.
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "portId": "1",

                  "packets": [

                    {

                      "desc": "Total",

                      "total": 112081,

                      "sent": 104135,

                      "recv": 7946,

                      "ratePerSec": {

                        "total": 1,

                        "sent": 1,

                        "recv": 0

                      }

                    },

                    {

                      "desc": "Broadcast",

                      "total": 30884,

                      "sent": 30370,

                      "recv": 514,

                      "ratePerSec": {

                        "total": 0,

                        "sent": 0,

                        "recv": 0

                      }

                    },

                    {

                      "desc": "Multicast",

                      "total": 67620,

                      "sent": 66849,

                      "recv": 771,

                      "ratePerSec": {

                        "total": 0,

                        "sent": 0,

                        "recv": 0

                      }

                    },

                    {

                      "desc": "CRC align errors",

                      "total": 0,

                      "sent": 0,

                      "recv": 0,

                      "ratePerSec": {

                        "total": 0,

                        "sent": 0,

                        "recv": 0

                      }

                    }

                  ]

                }

              ]
          headers: {}
  /devices/{serial}/switchPorts/{number}:
    put:
      description: Update a switch port
      summary: updateDeviceSwitchPort
      tags:
      - Switch ports
      operationId: updateDeviceSwitchPort
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      - name: number
        in: path
        required: true
        type: string
      - name: updateDeviceSwitchPort
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateDeviceSwitchPort'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "number": 1,

                "name": "My switch port",

                "tags": "tag1 tag2",

                "enabled": true,

                "poeEnabled": true,

                "type": "access",

                "vlan": 10,

                "voiceVlan": 20,

                "isolationEnabled": false,

                "rstpEnabled": true,

                "stpGuard": "disabled",

                "accessPolicyNumber": "1234",

                "linkNegotiation": "Auto negotiate",

                "portScheduleId": "1234",

                "udld": "Alert only",

                "macWhitelist": [

                  "34:56:fe:ce:8e:a0",

                  "34:56:fe:ce:8e:a1"

                ],

                "stickyMacWhitelist": [

                  "34:56:fe:ce:8e:b0",

                  "34:56:fe:ce:8e:b1"

                ],

                "stickyMacWhitelistLimit": 5,

                "stormControlEnabled": true

              }
          headers: {}
    get:
      description: Return a switch port
      summary: getDeviceSwitchPort
      tags:
      - Switch ports
      operationId: getDeviceSwitchPort
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      - name: number
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "number": 1,

                "name": "My switch port",

                "tags": "tag1 tag2",

                "enabled": true,

                "poeEnabled": true,

                "type": "access",

                "vlan": 10,

                "voiceVlan": 20,

                "isolationEnabled": false,

                "rstpEnabled": true,

                "stpGuard": "disabled",

                "accessPolicyNumber": "1234",

                "linkNegotiation": "Auto negotiate",

                "portScheduleId": "1234",

                "udld": "Alert only",

                "macWhitelist": [

                  "34:56:fe:ce:8e:a0",

                  "34:56:fe:ce:8e:a1"

                ],

                "stickyMacWhitelist": [

                  "34:56:fe:ce:8e:b0",

                  "34:56:fe:ce:8e:b1"

                ],

                "stickyMacWhitelistLimit": 5,

                "stormControlEnabled": true

              }
          headers: {}
  /devices/{serial}/switchPorts:
    get:
      description: List the switch ports for a switch
      summary: getDeviceSwitchPorts
      tags:
      - Switch ports
      operationId: getDeviceSwitchPorts
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: serial
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "number": 1,

                  "name": "My switch port",

                  "tags": "tag1 tag2",

                  "enabled": true,

                  "poeEnabled": true,

                  "type": "access",

                  "vlan": 10,

                  "voiceVlan": 20,

                  "isolationEnabled": false,

                  "rstpEnabled": true,

                  "stpGuard": "disabled",

                  "accessPolicyNumber": "1234",

                  "linkNegotiation": "Auto negotiate",

                  "portScheduleId": "1234",

                  "udld": "Alert only",

                  "macWhitelist": [

                    "34:56:fe:ce:8e:a0",

                    "34:56:fe:ce:8e:a1"

                  ],

                  "stickyMacWhitelist": [

                    "34:56:fe:ce:8e:b0",

                    "34:56:fe:ce:8e:b1"

                  ],

                  "stickyMacWhitelistLimit": 5,

                  "stormControlEnabled": true

                }

              ]
          headers: {}
  /organizations/{organizationId}/configTemplates/{configTemplateId}/switchProfiles:
    get:
      description: List the switch profiles for your switch template configuration
      summary: getOrganizationConfigTemplateSwitchProfiles
      tags:
      - Switch profiles
      operationId: getOrganizationConfigTemplateSwitchProfiles
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: configTemplateId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "switchProfileId": "1234",

                  "name": "A Simple Switch Profile",

                  "model": "MS450-24"

                }

              ]
          headers: {}
  /networks/{networkId}/switch/settings/dscpToCosMappings:
    put:
      description: Update the DSCP to CoS mappings
      summary: updateNetworkSwitchSettingsDscpToCosMappings
      tags:
      - Switch settings
      operationId: updateNetworkSwitchSettingsDscpToCosMappings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkSwitchSettingsDscpToCosMappings
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateNetworkSwitchSettingsDscpToCosMappings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "mappings": [

                  {

                    "dscp": 1,

                    "cos": 1,

                    "title": "Video"

                  }

                ]

              }
          headers: {}
    get:
      description: Return the DSCP to CoS mappings
      summary: getNetworkSwitchSettingsDscpToCosMappings
      tags:
      - Switch settings
      operationId: getNetworkSwitchSettingsDscpToCosMappings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "mappings": [

                  {

                    "dscp": 1,

                    "cos": 1,

                    "title": "Video"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/switch/settings/stormControl:
    get:
      description: Return the storm control configuration for a switch network
      summary: getNetworkSwitchSettingsStormControl
      tags:
      - Switch settings
      operationId: getNetworkSwitchSettingsStormControl
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "broadcastThreshold": 30,

                "multicastThreshold": 30,

                "unknownUnicastThreshold": 30

              }
          headers: {}
    put:
      description: Update the storm control configuration for a switch network
      summary: updateNetworkSwitchSettingsStormControl
      tags:
      - Switch settings
      operationId: updateNetworkSwitchSettingsStormControl
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkSwitchSettingsStormControl
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkSwitchSettingsStormControl'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "broadcastThreshold": 30,

                "multicastThreshold": 30,

                "unknownUnicastThreshold": 30

              }
          headers: {}
  /networks/{networkId}/switch/settings:
    put:
      description: Update switch network settings
      summary: updateNetworkSwitchSettings
      tags:
      - Switch settings
      operationId: updateNetworkSwitchSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkSwitchSettings
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkSwitchSettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "vlan": 100,

                "useCombinedPower": false,

                "powerExceptions": [

                  {

                    "serial": "Q234-ABCD-0001",

                    "powerType": "redundant"

                  },

                  {

                    "serial": "Q234-ABCD-0002",

                    "powerType": "combined"

                  },

                  {

                    "serial": "Q234-ABCD-0003",

                    "powerType": "redundant"

                  },

                  {

                    "serial": "Q234-ABCD-0004",

                    "powerType": "useNetworkSetting"

                  }

                ]

              }
          headers: {}
    get:
      description: Returns the switch network settings
      summary: getNetworkSwitchSettings
      tags:
      - Switch settings
      operationId: getNetworkSwitchSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "vlan": 100,

                "useCombinedPower": false,

                "powerExceptions": [

                  {

                    "serial": "Q234-ABCD-0001",

                    "powerType": "redundant"

                  },

                  {

                    "serial": "Q234-ABCD-0002",

                    "powerType": "combined"

                  },

                  {

                    "serial": "Q234-ABCD-0003",

                    "powerType": "redundant"

                  },

                  {

                    "serial": "Q234-ABCD-0004",

                    "powerType": "useNetworkSetting"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/switch/settings/mtu:
    get:
      description: Return the MTU configuration
      summary: getNetworkSwitchSettingsMtu
      tags:
      - Switch settings
      operationId: getNetworkSwitchSettingsMtu
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "defaultMtuSize": 9578,

                "overrides": [

                  {

                    "switches": [

                      "Q234-ABCD-0001",

                      "Q234-ABCD-0002",

                      "Q234-ABCD-0003"

                    ],

                    "mtuSize": 1500

                  },

                  {

                    "switchProfiles": [

                      "1284392014819",

                      "2983092129865"

                    ],

                    "mtuSize": 1600

                  }

                ]

              }
          headers: {}
    put:
      description: Update the MTU configuration
      summary: updateNetworkSwitchSettingsMtu
      tags:
      - Switch settings
      operationId: updateNetworkSwitchSettingsMtu
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkSwitchSettingsMtu
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkSwitchSettingsMtu'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "defaultMtuSize": 9578,

                "overrides": [

                  {

                    "switches": [

                      "Q234-ABCD-0001",

                      "Q234-ABCD-0002",

                      "Q234-ABCD-0003"

                    ],

                    "mtuSize": 1500

                  },

                  {

                    "switchProfiles": [

                      "1284392014819",

                      "2983092129865"

                    ],

                    "mtuSize": 1600

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/switch/settings/dhcpServerPolicy:
    put:
      description: Update the DHCP server policy
      summary: updateNetworkSwitchSettingsDhcpServerPolicy
      tags:
      - Switch settings
      operationId: updateNetworkSwitchSettingsDhcpServerPolicy
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkSwitchSettingsDhcpServerPolicy
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkSwitchSettingsDhcpServerPolicy'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "defaultPolicy": "block",

                "allowedServers": [

                  "00:50:56:00:00:01",

                  "00:50:56:00:00:02"

                ]

              }
          headers: {}
    get:
      description: Return the DHCP server policy
      summary: getNetworkSwitchSettingsDhcpServerPolicy
      tags:
      - Switch settings
      operationId: getNetworkSwitchSettingsDhcpServerPolicy
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "defaultPolicy": "block",

                "allowedServers": [

                  "00:50:56:00:00:01",

                  "00:50:56:00:00:02"

                ]

              }
          headers: {}
  /networks/{networkId}/switch/settings/qosRules:
    post:
      description: Add a quality of service rule
      summary: createNetworkSwitchSettingsQosRule
      tags:
      - Switch settings
      operationId: createNetworkSwitchSettingsQosRule
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: createNetworkSwitchSettingsQosRule
        in: body
        required: true
        schema:
          $ref: '#/definitions/createNetworkSwitchSettingsQosRule'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1284392014819",

                "vlan": 100,

                "protocol": "TCP",

                "srcPort": 2000,

                "srcPortRange": null,

                "dstPort": null,

                "dstPortRange": "3000-3100",

                "dscp": 0

              }
          headers: {}
    get:
      description: List quality of service rules
      summary: getNetworkSwitchSettingsQosRules
      tags:
      - Switch settings
      operationId: getNetworkSwitchSettingsQosRules
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "1284392014819",

                  "vlan": 100,

                  "protocol": "TCP",

                  "srcPort": 2000,

                  "srcPortRange": null,

                  "dstPort": null,

                  "dstPortRange": "3000-3100",

                  "dscp": 0

                }

              ]
          headers: {}
  /networks/{networkId}/switch/settings/qosRules/{qosRuleId}:
    delete:
      description: Delete a quality of service rule
      summary: deleteNetworkSwitchSettingsQosRule
      tags:
      - Switch settings
      operationId: deleteNetworkSwitchSettingsQosRule
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: qosRuleId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
    put:
      description: Update a quality of service rule
      summary: updateNetworkSwitchSettingsQosRule
      tags:
      - Switch settings
      operationId: updateNetworkSwitchSettingsQosRule
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: qosRuleId
        in: path
        required: true
        type: string
      - name: updateNetworkSwitchSettingsQosRule
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkSwitchSettingsQosRule'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1284392014819",

                "vlan": 100,

                "protocol": "TCP",

                "srcPort": 2000,

                "srcPortRange": null,

                "dstPort": null,

                "dstPortRange": "3000-3100",

                "dscp": 0

              }
          headers: {}
    get:
      description: Return a quality of service rule
      summary: getNetworkSwitchSettingsQosRule
      tags:
      - Switch settings
      operationId: getNetworkSwitchSettingsQosRule
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: qosRuleId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1284392014819",

                "vlan": 100,

                "protocol": "TCP",

                "srcPort": 2000,

                "srcPortRange": null,

                "dstPort": null,

                "dstPortRange": "3000-3100",

                "dscp": 0

              }
          headers: {}
  /networks/{networkId}/switch/settings/multicast:
    get:
      description: Return multicast settings for a network
      summary: getNetworkSwitchSettingsMulticast
      tags:
      - Switch settings
      operationId: getNetworkSwitchSettingsMulticast
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "defaultSettings": {

                  "igmpSnoopingEnabled": true,

                  "floodUnknownMulticastTrafficEnabled": true

                },

                "overrides": [

                  {

                    "switches": [

                      "Q234-ABCD-0001",

                      "Q234-ABCD-0002",

                      "Q234-ABCD-0003"

                    ],

                    "igmpSnoopingEnabled": true,

                    "floodUnknownMulticastTrafficEnabled": true

                  },

                  {

                    "stacks": [

                      "789102",

                      "123456",

                      "129102"

                    ],

                    "igmpSnoopingEnabled": true,

                    "floodUnknownMulticastTrafficEnabled": true

                  }

                ]

              }
          headers: {}
    put:
      description: Update multicast settings for a network
      summary: updateNetworkSwitchSettingsMulticast
      tags:
      - Switch settings
      operationId: updateNetworkSwitchSettingsMulticast
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkSwitchSettingsMulticast
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkSwitchSettingsMulticast'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "defaultSettings": {

                  "igmpSnoopingEnabled": true,

                  "floodUnknownMulticastTrafficEnabled": true

                },

                "overrides": [

                  {

                    "switches": [

                      "Q234-ABCD-0001",

                      "Q234-ABCD-0002",

                      "Q234-ABCD-0003"

                    ],

                    "igmpSnoopingEnabled": true,

                    "floodUnknownMulticastTrafficEnabled": true

                  },

                  {

                    "stacks": [

                      "789102",

                      "123456",

                      "129102"

                    ],

                    "igmpSnoopingEnabled": true,

                    "floodUnknownMulticastTrafficEnabled": true

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/switch/settings/qosRules/order:
    get:
      description: Return the quality of service rule IDs by order in which they will be processed by the switch
      summary: getNetworkSwitchSettingsQosRulesOrder
      tags:
      - Switch settings
      operationId: getNetworkSwitchSettingsQosRulesOrder
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "ruleIds": [

                  "1284392014819",

                  "2983092129865"

                ]

              }
          headers: {}
    put:
      description: Update the order in which the rules should be processed by the switch
      summary: updateNetworkSwitchSettingsQosRulesOrder
      tags:
      - Switch settings
      operationId: updateNetworkSwitchSettingsQosRulesOrder
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkSwitchSettingsQosRulesOrder
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateNetworkSwitchSettingsQosRulesOrder'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "ruleIds": [

                  "1284392014819",

                  "2983092129865"

                ]

              }
          headers: {}
  /networks/{networkId}/switch/settings/stp:
    get:
      description: Returns STP settings
      summary: getNetworkSwitchSettingsStp
      tags:
      - Switch settings
      operationId: getNetworkSwitchSettingsStp
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "rstpEnabled": true,

                "stpBridgePriority": [

                  {

                    "switches": [

                      "Q234-ABCD-0001",

                      "Q234-ABCD-0002",

                      "Q234-ABCD-0003"

                    ],

                    "stpPriority": 4096

                  },

                  {

                    "stacks": [

                      "789102",

                      "123456",

                      "129102"

                    ],

                    "stpPriority": 28672

                  }

                ]

              }
          headers: {}
    put:
      description: Updates STP settings
      summary: updateNetworkSwitchSettingsStp
      tags:
      - Switch settings
      operationId: updateNetworkSwitchSettingsStp
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkSwitchSettingsStp
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkSwitchSettingsStp'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "rstpEnabled": true,

                "stpBridgePriority": [

                  {

                    "switches": [

                      "Q234-ABCD-0001",

                      "Q234-ABCD-0002",

                      "Q234-ABCD-0003"

                    ],

                    "stpPriority": 4096

                  },

                  {

                    "stacks": [

                      "789102",

                      "123456",

                      "129102"

                    ],

                    "stpPriority": 28672

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/switchStacks:
    get:
      description: List the switch stacks in a network
      summary: getNetworkSwitchStacks
      tags:
      - Switch stacks
      operationId: getNetworkSwitchStacks
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "8473",

                  "name": "A cool stack",

                  "serials": [

                    "QBZY-XWVU-TSRQ",

                    "QBAB-CDEF-GHIJ"

                  ]

                }

              ]
          headers: {}
    post:
      description: Create a stack
      summary: createNetworkSwitchStack
      tags:
      - Switch stacks
      operationId: createNetworkSwitchStack
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: createNetworkSwitchStack
        in: body
        required: true
        schema:
          $ref: '#/definitions/createNetworkSwitchStack'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "8473",

                "name": "A cool stack",

                "serials": [

                  "QBZY-XWVU-TSRQ",

                  "QBAB-CDEF-GHIJ"

                ]

              }
          headers: {}
  /networks/{networkId}/switchStacks/{switchStackId}/remove:
    post:
      description: Remove a switch from a stack
      summary: removeNetworkSwitchStack
      tags:
      - Switch stacks
      operationId: removeNetworkSwitchStack
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: switchStackId
        in: path
        required: true
        type: string
      - name: removeNetworkSwitchStack
        in: body
        required: true
        schema:
          $ref: '#/definitions/removeNetworkSwitchStack'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "8473",

                "name": "A cool stack",

                "serials": [

                  "QBAB-CDEF-GHIJ"

                ]

              }
          headers: {}
  /networks/{networkId}/switchStacks/{switchStackId}:
    delete:
      description: Delete a stack
      summary: deleteNetworkSwitchStack
      tags:
      - Switch stacks
      operationId: deleteNetworkSwitchStack
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: switchStackId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
    get:
      description: Show a switch stack
      summary: getNetworkSwitchStack
      tags:
      - Switch stacks
      operationId: getNetworkSwitchStack
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: switchStackId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "8473",

                "name": "A cool stack",

                "serials": [

                  "QBZY-XWVU-TSRQ",

                  "QBAB-CDEF-GHIJ"

                ]

              }
          headers: {}
  /networks/{networkId}/switchStacks/{switchStackId}/add:
    post:
      description: Add a switch to a stack
      summary: addNetworkSwitchStack
      tags:
      - Switch stacks
      operationId: addNetworkSwitchStack
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: switchStackId
        in: path
        required: true
        type: string
      - name: addNetworkSwitchStack
        in: body
        required: true
        schema:
          $ref: '#/definitions/addNetworkSwitchStack'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "8473",

                "name": "A cool stack",

                "serials": [

                  "QBZY-XWVU-TSRQ",

                  "QBAB-CDEF-GHIJ"

                ]

              }
          headers: {}
  /networks/{networkId}/syslogServers:
    get:
      description: List the syslog servers for a network
      summary: getNetworkSyslogServers
      tags:
      - Syslog servers
      operationId: getNetworkSyslogServers
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "host": "1.2.3.4",

                  "port": 443,

                  "roles": [

                    "Wireless event log",

                    "URLs"

                  ]

                }

              ]
          headers: {}
    put:
      description: Update the syslog servers for a network
      summary: updateNetworkSyslogServers
      tags:
      - Syslog servers
      operationId: updateNetworkSyslogServers
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkSyslogServers
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateNetworkSyslogServers'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "host": "1.2.3.4",

                  "port": 443,

                  "roles": [

                    "Wireless event log",

                    "URLs"

                  ]

                }

              ]
          headers: {}
  /networks/{networkId}/trafficAnalysisSettings:
    get:
      description: Return the traffic analysis settings for a network
      summary: getNetworkTrafficAnalysisSettings
      tags:
      - Traffic analysis settings
      operationId: getNetworkTrafficAnalysisSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "mode": "detailed",

                "customPieChartItems": [

                  {

                    "name": "Item from hostname",

                    "type": "host",

                    "value": "example.com"

                  },

                  {

                    "name": "Item from port",

                    "type": "port",

                    "value": "440"

                  },

                  {

                    "name": "Item from IP",

                    "type": "ipRange",

                    "value": "192.1.0.0"

                  },

                  {

                    "name": "Item from IP range (CIDR)",

                    "type": "ipRange",

                    "value": "192.2.0.0/16"

                  },

                  {

                    "name": "Item from IP range with port",

                    "type": "ipRange",

                    "value": "192.3.0.0/16:80"

                  }

                ]

              }
          headers: {}
    put:
      description: Update the traffic analysis settings for a network
      summary: updateNetworkTrafficAnalysisSettings
      tags:
      - Traffic analysis settings
      operationId: updateNetworkTrafficAnalysisSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkTrafficAnalysisSettings
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkTrafficAnalysisSettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "mode": "detailed",

                "customPieChartItems": [

                  {

                    "name": "Item from hostname",

                    "type": "host",

                    "value": "example.com"

                  },

                  {

                    "name": "Item from port",

                    "type": "port",

                    "value": "440"

                  },

                  {

                    "name": "Item from IP",

                    "type": "ipRange",

                    "value": "192.1.0.0"

                  },

                  {

                    "name": "Item from IP range (CIDR)",

                    "type": "ipRange",

                    "value": "192.2.0.0/16"

                  },

                  {

                    "name": "Item from IP range with port",

                    "type": "ipRange",

                    "value": "192.3.0.0/16:80"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/trafficShaping:
    get:
      description: Display the traffic shaping settings for an MX network
      summary: getNetworkTrafficShaping
      tags:
      - Traffic shaping
      operationId: getNetworkTrafficShaping
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "defaultRulesEnabled": true,

                "rules": [

                  {

                    "definitions": [

                      {

                        "type": "host",

                        "value": "google.com"

                      },

                      {

                        "type": "port",

                        "value": "9090"

                      },

                      {

                        "type": "ipRange",

                        "value": "192.1.0.0"

                      },

                      {

                        "type": "ipRange",

                        "value": "192.1.0.0/16"

                      },

                      {

                        "type": "ipRange",

                        "value": "10.1.0.0/16:80"

                      },

                      {

                        "type": "localNet",

                        "value": "192.168.0.0/16"

                      },

                      {

                        "type": "applicationCategory",

                        "value": {

                          "id": "meraki:layer7/category/2",

                          "name": "Blogging"

                        }

                      },

                      {

                        "type": "application",

                        "value": {

                          "id": "meraki:layer7/application/133",

                          "name": "Battle.net"

                        }

                      }

                    ],

                    "perClientBandwidthLimits": {

                      "settings": "custom",

                      "bandwidthLimits": {

                        "limitUp": 1000000,

                        "limitDown": 1000000

                      }

                    },

                    "dscpTagValue": null,

                    "priority": "normal"

                  }

                ]

              }
          headers: {}
    put:
      description: Update the traffic shaping settings for an MX network
      summary: updateNetworkTrafficShaping
      tags:
      - Traffic shaping
      operationId: updateNetworkTrafficShaping
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkTrafficShaping
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkTrafficShaping'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "defaultRulesEnabled": true,

                "rules": [

                  {

                    "definitions": [

                      {

                        "type": "host",

                        "value": "google.com"

                      },

                      {

                        "type": "port",

                        "value": "9090"

                      },

                      {

                        "type": "ipRange",

                        "value": "192.1.0.0"

                      },

                      {

                        "type": "ipRange",

                        "value": "192.1.0.0/16"

                      },

                      {

                        "type": "ipRange",

                        "value": "10.1.0.0/16:80"

                      },

                      {

                        "type": "localNet",

                        "value": "192.168.0.0/16"

                      },

                      {

                        "type": "applicationCategory",

                        "value": {

                          "id": "meraki:layer7/category/2",

                          "name": "Blogging"

                        }

                      },

                      {

                        "type": "application",

                        "value": {

                          "id": "meraki:layer7/application/133",

                          "name": "Battle.net"

                        }

                      }

                    ],

                    "perClientBandwidthLimits": {

                      "settings": "custom",

                      "bandwidthLimits": {

                        "limitUp": 1000000,

                        "limitDown": 1000000

                      }

                    },

                    "dscpTagValue": null,

                    "priority": "normal"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/trafficShaping/dscpTaggingOptions:
    get:
      description: Returns the available DSCP tagging options for your traffic shaping rules.
      summary: getNetworkTrafficShapingDscpTaggingOptions
      tags:
      - Traffic shaping
      operationId: getNetworkTrafficShapingDscpTaggingOptions
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "dscpTagValue": 10,

                  "description": "AF11 - High Throughput, Latency Insensitive, Low Drop"

                },

                {

                  "dscpTagValue": 12,

                  "description": "AF12 - High Throughput, Latency Insensitive, Medium Drop"

                },

                {

                  "dscpTagValue": 14,

                  "description": "AF13 - High Throughput, Latency Insensitive, High Drop"

                },

                {

                  "dscpTagValue": 18,

                  "description": "AF21 - Low Latency Data, Low Drop"

                }

              ]
          headers: {}
  /networks/{networkId}/trafficShaping/applicationCategories:
    get:
      description: Returns the application categories for traffic shaping rules.
      summary: getNetworkTrafficShapingApplicationCategories
      tags:
      - Traffic shaping
      operationId: getNetworkTrafficShapingApplicationCategories
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "applicationCategories": [

                    {

                      "id": "meraki:layer7/category/24",

                      "name": "Advertising",

                      "applications": [

                        {

                          "id": "meraki:layer7/application/5",

                          "name": "Advertising.com"

                        },

                        {

                          "id": "meraki:layer7/application/0",

                          "name": "AppNexus"

                        },

                        {

                          "id": "meraki:layer7/application/1",

                          "name": "Brightroll"

                        }

                      ]

                    }

                  ]

                }

              ]
          headers: {}
  /networks/{networkId}/ssids/{number}/trafficShaping:
    get:
      description: Display the traffic shaping settings for a SSID on an MR network
      summary: getNetworkSsidTrafficShaping
      tags:
      - Traffic shaping
      operationId: getNetworkSsidTrafficShaping
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: number
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "trafficShapingEnabled": true,

                "defaultRulesEnabled": true,

                "rules": [

                  {

                    "definitions": [

                      {

                        "type": "host",

                        "value": "google.com"

                      },

                      {

                        "type": "port",

                        "value": "9090"

                      },

                      {

                        "type": "ipRange",

                        "value": "192.1.0.0"

                      },

                      {

                        "type": "ipRange",

                        "value": "192.1.0.0/16"

                      },

                      {

                        "type": "ipRange",

                        "value": "10.1.0.0/16:80"

                      },

                      {

                        "type": "localNet",

                        "value": "192.168.0.0/16"

                      },

                      {

                        "type": "applicationCategory",

                        "value": {

                          "id": "meraki:layer7/category/2",

                          "name": "Blogging"

                        }

                      },

                      {

                        "type": "application",

                        "value": {

                          "id": "meraki:layer7/application/133",

                          "name": "Battle.net"

                        }

                      }

                    ],

                    "perClientBandwidthLimits": {

                      "settings": "custom",

                      "bandwidthLimits": {

                        "limitUp": 1000000,

                        "limitDown": 1000000

                      }

                    },

                    "dscpTagValue": null,

                    "pcpTagValue": null

                  }

                ]

              }
          headers: {}
    put:
      description: Update the traffic shaping settings for an SSID on an MR network
      summary: updateNetworkSsidTrafficShaping
      tags:
      - Traffic shaping
      operationId: updateNetworkSsidTrafficShaping
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: number
        in: path
        required: true
        type: string
      - name: updateNetworkSsidTrafficShaping
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkSsidTrafficShaping'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "trafficShapingEnabled": true,

                "defaultRulesEnabled": true,

                "rules": [

                  {

                    "definitions": [

                      {

                        "type": "host",

                        "value": "google.com"

                      },

                      {

                        "type": "port",

                        "value": "9090"

                      },

                      {

                        "type": "ipRange",

                        "value": "192.1.0.0"

                      },

                      {

                        "type": "ipRange",

                        "value": "192.1.0.0/16"

                      },

                      {

                        "type": "ipRange",

                        "value": "10.1.0.0/16:80"

                      },

                      {

                        "type": "localNet",

                        "value": "192.168.0.0/16"

                      },

                      {

                        "type": "applicationCategory",

                        "value": {

                          "id": "meraki:layer7/category/2",

                          "name": "Blogging"

                        }

                      },

                      {

                        "type": "application",

                        "value": {

                          "id": "meraki:layer7/application/133",

                          "name": "Battle.net"

                        }

                      }

                    ],

                    "perClientBandwidthLimits": {

                      "settings": "custom",

                      "bandwidthLimits": {

                        "limitUp": 1000000,

                        "limitDown": 1000000

                      }

                    },

                    "dscpTagValue": null,

                    "pcpTagValue": null

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/uplinkSettings:
    get:
      description: Returns the uplink settings for your MX network.
      summary: getNetworkUplinkSettings
      tags:
      - Uplink settings
      operationId: getNetworkUplinkSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "bandwidthLimits": {

                  "wan1": {

                    "limitUp": 1000000,

                    "limitDown": 1000000

                  },

                  "wan2": {

                    "limitUp": 1000000,

                    "limitDown": 1000000

                  },

                  "cellular": {

                    "limitUp": 51200,

                    "limitDown": 51200

                  }

                }

              }
          headers: {}
    put:
      description: Updates the uplink settings for your MX network.
      summary: updateNetworkUplinkSettings
      tags:
      - Uplink settings
      operationId: updateNetworkUplinkSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkUplinkSettings
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkUplinkSettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "bandwidthLimits": {

                  "wan1": {

                    "limitUp": 1000000,

                    "limitDown": 1000000

                  },

                  "wan2": {

                    "limitUp": 1000000,

                    "limitDown": 1000000

                  },

                  "cellular": {

                    "limitUp": 51200,

                    "limitDown": 51200

                  }

                }

              }
          headers: {}
  /networks/{networkId}/vlans/{vlanId}:
    get:
      description: Return a VLAN
      summary: getNetworkVlan
      tags:
      - VLANs
      operationId: getNetworkVlan
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: vlanId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "networkId": "N_24329156",

                "name": "My VLAN",

                "applianceIp": "1.2.3.4",

                "subnet": "192.168.1.0/24",

                "fixedIpAssignments": {

                  "22:33:44:55:66:77": {

                    "ip": "1.2.3.4",

                    "name": "Some client name"

                  }

                },

                "reservedIpRanges": [

                  {

                    "start": "192.168.1.0",

                    "end": "192.168.1.1",

                    "comment": "A reserved IP range"

                  }

                ],

                "dnsNameservers": "google_dns",

                "dhcpHandling": "Run a DHCP server",

                "dhcpLeaseTime": "1 day",

                "dhcpBootOptionsEnabled": false,

                "dhcpBootNextServer": null,

                "dhcpBootFilename": null,

                "dhcpOptions": [

                  {

                    "code": 5,

                    "type": "text",

                    "value": "five"

                  }

                ]

              }
          headers: {}
    delete:
      description: Delete a VLAN from a network
      summary: deleteNetworkVlan
      tags:
      - VLANs
      operationId: deleteNetworkVlan
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: vlanId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Successful operation
          headers: {}
    put:
      description: Update a VLAN
      summary: updateNetworkVlan
      tags:
      - VLANs
      operationId: updateNetworkVlan
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: vlanId
        in: path
        required: true
        type: string
      - name: updateNetworkVlan
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkVlan'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "networkId": "N_24329156",

                "name": "My VLAN",

                "applianceIp": "1.2.3.4",

                "subnet": "192.168.1.0/24",

                "fixedIpAssignments": {

                  "22:33:44:55:66:77": {

                    "ip": "1.2.3.4",

                    "name": "Some client name"

                  }

                },

                "reservedIpRanges": [

                  {

                    "start": "192.168.1.0",

                    "end": "192.168.1.1",

                    "comment": "A reserved IP range"

                  }

                ],

                "dnsNameservers": "google_dns",

                "dhcpHandling": "Run a DHCP server",

                "dhcpLeaseTime": "1 day",

                "dhcpBootOptionsEnabled": false,

                "dhcpBootNextServer": null,

                "dhcpBootFilename": null,

                "dhcpOptions": [

                  {

                    "code": 5,

                    "type": "text",

                    "value": "five"

                  }

                ]

              }
          headers: {}
  /networks/{networkId}/vlans:
    post:
      description: Add a VLAN
      summary: createNetworkVlan
      tags:
      - VLANs
      operationId: createNetworkVlan
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: createNetworkVlan
        in: body
        required: true
        schema:
          $ref: '#/definitions/createNetworkVlan'
      responses:
        201:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "id": "1234",

                "networkId": "N_24329156",

                "name": "My VLAN",

                "applianceIp": "1.2.3.4",

                "subnet": "192.168.1.0/24",

                "fixedIpAssignments": {},

                "reservedIpRanges": [],

                "dnsNameservers": "google_dns",

                "dhcpHandling": "Run a DHCP server",

                "dhcpLeaseTime": "1 day",

                "dhcpBootOptionsEnabled": false,

                "dhcpBootNextServer": null,

                "dhcpBootFilename": null,

                "dhcpOptions": []

              }
          headers: {}
    get:
      description: List the VLANs for an MX network
      summary: getNetworkVlans
      tags:
      - VLANs
      operationId: getNetworkVlans
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "My VLAN",

                  "applianceIp": "1.2.3.4",

                  "subnet": "192.168.1.0/24",

                  "fixedIpAssignments": {

                    "22:33:44:55:66:77": {

                      "ip": "1.2.3.4",

                      "name": "Some client name"

                    }

                  },

                  "reservedIpRanges": [

                    {

                      "start": "192.168.1.0",

                      "end": "192.168.1.1",

                      "comment": "A reserved IP range"

                    }

                  ],

                  "dnsNameservers": "google_dns",

                  "dhcpHandling": "Run a DHCP server",

                  "dhcpLeaseTime": "1 day",

                  "dhcpBootOptionsEnabled": false,

                  "dhcpBootNextServer": null,

                  "dhcpBootFilename": null,

                  "dhcpOptions": [

                    {

                      "code": 5,

                      "type": "text",

                      "value": "five"

                    }

                  ]

                }

              ]
          headers: {}
  /networks/{networkId}/vlansEnabledState:
    get:
      description: Returns the enabled status of VLANs for the network
      summary: getNetworkVlansEnabledState
      tags:
      - VLANs
      operationId: getNetworkVlansEnabledState
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "enabled": true,

                "networkId": "N_24329156"

              }
          headers: {}
    put:
      description: Enable/Disable VLANs for the given network
      summary: updateNetworkVlansEnabledState
      tags:
      - VLANs
      operationId: updateNetworkVlansEnabledState
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkVlansEnabledState
        in: body
        required: true
        schema:
          $ref: '#/definitions/updateNetworkVlansEnabledState'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "enabled": true,

                "networkId": "N_24329156"

              }
          headers: {}
  /organizations/{organizationId}/webhookLogs:
    get:
      description: Return the log of webhook POSTs sent
      summary: getOrganizationWebhookLogs
      tags:
      - Webhook logs
      operationId: getOrganizationWebhookLogs
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 90 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
      - name: perPage
        in: query
        required: false
        type: integer
        format: int32
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.
      - name: startingAfter
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: endingBefore
        in: query
        required: false
        type: string
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
      - name: url
        in: query
        required: false
        type: string
        description: The URL the webhook was sent to
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "organizationId": "33619",

                  "networkId": "L_22742",

                  "alertType": "Settings changed",

                  "url": "https://www.example.com/path",

                  "sentAt": "2019-01-01T13:37:28.123456Z",

                  "loggedAt": "2019-01-01T13:37:28.423456Z",

                  "responseCode": 200,

                  "responseDuration": 244

                }

              ]
          headers: {}
  /networks/{networkId}/devices/connectionStats:
    get:
      description: Aggregated connectivity info for this network, grouped by node
      summary: getNetworkDevicesConnectionStats
      tags:
      - Wireless health
      operationId: getNetworkDevicesConnectionStats
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
      - name: ssid
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by SSID
      - name: vlan
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by VLAN
      - name: apTag
        in: query
        required: false
        type: string
        description: Filter results by AP Tag
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "serial": "Q2JC-2MJM-FHRD",

                  "connectionStats": {

                    "assoc": 0,

                    "auth": 1,

                    "dhcp": 0,

                    "dns": 0,

                    "success": 43

                  }

                },

                {

                  "serial": "Q2FJ-3SHB-Y2K2",

                  "connectionStats": {

                    "assoc": 1,

                    "auth": 4,

                    "dhcp": 0,

                    "dns": 0,

                    "success": 8

                  }

                }

              ]
          headers: {}
  /networks/{networkId}/clients/latencyStats:
    get:
      description: Aggregated latency info for this network, grouped by clients
      summary: getNetworkClientsLatencyStats
      tags:
      - Wireless health
      operationId: getNetworkClientsLatencyStats
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
      - name: ssid
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by SSID
      - name: vlan
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by VLAN
      - name: apTag
        in: query
        required: false
        type: string
        description: Filter results by AP Tag
      - name: fields
        in: query
        required: false
        type: string
        description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "mac": "00:61:71:c8:51:27",

                  "latencyStats": {

                    "backgroundTraffic": {

                      "rawDistribution": {

                        "0": 1234,

                        "1": 2345,

                        "2": 3456,

                        "4": 4567,

                        "8": 5678,

                        "16": 6789,

                        "32": 7890,

                        "64": 8901,

                        "128": 9012,

                        "256": 83,

                        "512": 1234,

                        "1024": 2345,

                        "2048": 9999

                      },

                      "avg": 606.52

                    },

                    "bestEffortTraffic": "same shape as backgroundTraffic",

                    "videoTraffic": "same shape as backgroundTraffic",

                    "voiceTraffic": "same shape as backgroundTraffic"

                  }

                },

                {

                  "mac": "1c:4d:70:7f:5e:5e",

                  "latencyStats": {

                    "backgroundTraffic": {

                      "rawDistribution": {

                        "0": 1234,

                        "1": 2345,

                        "2": 3456,

                        "4": 4567,

                        "8": 5678,

                        "16": 6789,

                        "32": 7890,

                        "64": 8901,

                        "128": 9012,

                        "256": 83,

                        "512": 1234,

                        "1024": 2345,

                        "2048": 9999

                      },

                      "avg": 606.52

                    },

                    "bestEffortTraffic": "same shape as backgroundTraffic",

                    "videoTraffic": "same shape as backgroundTraffic",

                    "voiceTraffic": "same shape as backgroundTraffic"

                  }

                },

                {

                  "mac": "1c:4d:70:81:8d:0a",

                  "latencyStats": {

                    "backgroundTraffic": {

                      "rawDistribution": {

                        "0": 1234,

                        "1": 2345,

                        "2": 3456,

                        "4": 4567,

                        "8": 5678,

                        "16": 6789,

                        "32": 7890,

                        "64": 8901,

                        "128": 9012,

                        "256": 83,

                        "512": 1234,

                        "1024": 2345,

                        "2048": 9999

                      },

                      "avg": 606.52

                    },

                    "bestEffortTraffic": "same shape as backgroundTraffic",

                    "videoTraffic": "same shape as backgroundTraffic",

                    "voiceTraffic": "same shape as backgroundTraffic"

                  }

                }

              ]
          headers: {}
  /networks/{networkId}/clients/{clientId}/connectionStats:
    get:
      description: Aggregated connectivity info for a given client on this network. Clients are identified by their MAC.
      summary: getNetworkClientConnectionStats
      tags:
      - Wireless health
      operationId: getNetworkClientConnectionStats
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: clientId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
      - name: ssid
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by SSID
      - name: vlan
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by VLAN
      - name: apTag
        in: query
        required: false
        type: string
        description: Filter results by AP Tag
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "mac": "00:61:71:c8:51:27",

                "connectionStats": {

                  "assoc": 0,

                  "auth": 4,

                  "dhcp": 0,

                  "dns": 0,

                  "success": 10

                }

              }
          headers: {}
  /networks/{networkId}/devices/{serial}/connectionStats:
    get:
      description: Aggregated connectivity info for a given AP on this network
      summary: getNetworkDeviceConnectionStats
      tags:
      - Wireless health
      operationId: getNetworkDeviceConnectionStats
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
      - name: ssid
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by SSID
      - name: vlan
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by VLAN
      - name: apTag
        in: query
        required: false
        type: string
        description: Filter results by AP Tag
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "serial": "Q2JC-2MJM-FHRD",

                "connectionStats": {

                  "assoc": 0,

                  "auth": 1,

                  "dhcp": 0,

                  "dns": 0,

                  "success": 43

                }

              }
          headers: {}
  /networks/{networkId}/latencyStats:
    get:
      description: Aggregated latency info for this network
      summary: getNetworkLatencyStats
      tags:
      - Wireless health
      operationId: getNetworkLatencyStats
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
      - name: ssid
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by SSID
      - name: vlan
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by VLAN
      - name: apTag
        in: query
        required: false
        type: string
        description: Filter results by AP Tag
      - name: fields
        in: query
        required: false
        type: string
        description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "backgroundTraffic": {

                  "rawDistribution": {

                    "0": 1234,

                    "1": 2345,

                    "2": 3456,

                    "4": 4567,

                    "8": 5678,

                    "16": 6789,

                    "32": 7890,

                    "64": 8901,

                    "128": 9012,

                    "256": 83,

                    "512": 1234,

                    "1024": 2345,

                    "2048": 9999

                  },

                  "avg": 606.52

                },

                "bestEffortTraffic": "same shape as backgroundTraffic",

                "videoTraffic": "same shape as backgroundTraffic",

                "voiceTraffic": "same shape as backgroundTraffic"

              }
          headers: {}
  /networks/{networkId}/clients/connectionStats:
    get:
      description: Aggregated connectivity info for this network, grouped by clients
      summary: getNetworkClientsConnectionStats
      tags:
      - Wireless health
      operationId: getNetworkClientsConnectionStats
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
      - name: ssid
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by SSID
      - name: vlan
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by VLAN
      - name: apTag
        in: query
        required: false
        type: string
        description: Filter results by AP Tag
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "mac": "00:61:71:c8:51:27",

                  "connectionStats": {

                    "assoc": 0,

                    "auth": 4,

                    "dhcp": 0,

                    "dns": 0,

                    "success": 10

                  }

                },

                {

                  "mac": "1c:4d:70:7f:5e:5e",

                  "connectionStats": {

                    "assoc": 0,

                    "auth": 1,

                    "dhcp": 0,

                    "dns": 0,

                    "success": 24

                  }

                },

                {

                  "mac": "1c:4d:70:81:8d:0a",

                  "connectionStats": {

                    "assoc": 1,

                    "auth": 0,

                    "dhcp": 0,

                    "dns": 0,

                    "success": 16

                  }

                }

              ]
          headers: {}
  /networks/{networkId}/devices/latencyStats:
    get:
      description: Aggregated latency info for this network, grouped by node
      summary: getNetworkDevicesLatencyStats
      tags:
      - Wireless health
      operationId: getNetworkDevicesLatencyStats
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
      - name: ssid
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by SSID
      - name: vlan
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by VLAN
      - name: apTag
        in: query
        required: false
        type: string
        description: Filter results by AP Tag
      - name: fields
        in: query
        required: false
        type: string
        description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "serial": "Q2JC-2MJM-FHRD",

                  "latencyStats": {

                    "backgroundTraffic": {

                      "rawDistribution": {

                        "0": 1234,

                        "1": 2345,

                        "2": 3456,

                        "4": 4567,

                        "8": 5678,

                        "16": 6789,

                        "32": 7890,

                        "64": 8901,

                        "128": 9012,

                        "256": 83,

                        "512": 1234,

                        "1024": 2345,

                        "2048": 9999

                      },

                      "avg": 606.52

                    },

                    "bestEffortTraffic": "same shape as backgroundTraffic",

                    "videoTraffic": "same shape as backgroundTraffic",

                    "voiceTraffic": "same shape as backgroundTraffic"

                  }

                },

                {

                  "serial": "Q2FJ-3SHB-Y2K2",

                  "latencyStats": {

                    "backgroundTraffic": {

                      "rawDistribution": {

                        "0": 1234,

                        "1": 2345,

                        "2": 3456,

                        "4": 4567,

                        "8": 5678,

                        "16": 6789,

                        "32": 7890,

                        "64": 8901,

                        "128": 9012,

                        "256": 83,

                        "512": 1234,

                        "1024": 2345,

                        "2048": 9999

                      },

                      "avg": 606.52

                    },

                    "bestEffortTraffic": "same shape as backgroundTraffic",

                    "videoTraffic": "same shape as backgroundTraffic",

                    "voiceTraffic": "same shape as backgroundTraffic"

                  }

                }

              ]
          headers: {}
  /networks/{networkId}/clients/{clientId}/latencyStats:
    get:
      description: Aggregated latency info for a given client on this network. Clients are identified by their MAC.
      summary: getNetworkClientLatencyStats
      tags:
      - Wireless health
      operationId: getNetworkClientLatencyStats
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: clientId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
      - name: ssid
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by SSID
      - name: vlan
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by VLAN
      - name: apTag
        in: query
        required: false
        type: string
        description: Filter results by AP Tag
      - name: fields
        in: query
        required: false
        type: string
        description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "mac": "00:61:71:c8:51:27",

                "latencyStats": {

                  "backgroundTraffic": {

                    "rawDistribution": {

                      "0": 1234,

                      "1": 2345,

                      "2": 3456,

                      "4": 4567,

                      "8": 5678,

                      "16": 6789,

                      "32": 7890,

                      "64": 8901,

                      "128": 9012,

                      "256": 83,

                      "512": 1234,

                      "1024": 2345,

                      "2048": 9999

                    },

                    "avg": 606.52

                  },

                  "bestEffortTraffic": "same shape as backgroundTraffic",

                  "videoTraffic": "same shape as backgroundTraffic",

                  "voiceTraffic": "same shape as backgroundTraffic"

                }

              }
          headers: {}
  /networks/{networkId}/connectionStats:
    get:
      description: Aggregated connectivity info for this network
      summary: getNetworkConnectionStats
      tags:
      - Wireless health
      operationId: getNetworkConnectionStats
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
      - name: ssid
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by SSID
      - name: vlan
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by VLAN
      - name: apTag
        in: query
        required: false
        type: string
        description: Filter results by AP Tag
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "assoc": 1,

                "auth": 5,

                "dhcp": 0,

                "dns": 0,

                "success": 51

              }
          headers: {}
  /networks/{networkId}/failedConnections:
    get:
      description: List of all failed client connection events on this network in a given time range
      summary: getNetworkFailedConnections
      tags:
      - Wireless health
      operationId: getNetworkFailedConnections
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
      - name: ssid
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by SSID
      - name: vlan
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by VLAN
      - name: apTag
        in: query
        required: false
        type: string
        description: Filter results by AP Tag
      - name: serial
        in: query
        required: false
        type: string
        description: Filter by AP
      - name: clientId
        in: query
        required: false
        type: string
        description: Filter by client MAC
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              [

                {

                  "ssidNumber": 0,

                  "vlan": -1,

                  "clientMac": "00:61:71:c8:51:27",

                  "serial": "Q2JC-2MJM-FHRD",

                  "failureStep": "auth",

                  "type": "802.1X auth fail",

                  "ts": 1532032592

                },

                {

                  "ssidNumber": 0,

                  "vlan": -1,

                  "clientMac": "00:61:71:c8:51:27",

                  "nodeId": "Q2FJ-3SHB-Y2K2",

                  "failureStep": "auth",

                  "type": "802.1X auth fail",

                  "ts": 1532032593

                },

                {

                  "ssidNumber": 0,

                  "vlan": -1,

                  "clientMac": "00:61:71:c8:51:27",

                  "nodeId": "Q2FJ-3SHB-Y2K2",

                  "failureStep": "auth",

                  "type": "802.1X auth fail",

                  "ts": 1532032594

                },

                {

                  "ssidNumber": 0,

                  "vlan": -1,

                  "clientMac": "00:61:71:c8:51:27",

                  "nodeId": "Q2FJ-3SHB-Y2K2",

                  "failureStep": "auth",

                  "type": "802.1X auth fail",

                  "ts": 1532032595

                },

                {

                  "ssidNumber": 0,

                  "vlan": -1,

                  "clientMac": "1c:4d:70:7f:5e:5e",

                  "nodeId": "Q2FJ-3SHB-Y2K2",

                  "failureStep": "assoc",

                  "type": "802.1X auth fail",

                  "ts": 1532032592

                },

                {

                  "ssidNumber": 0,

                  "vlan": -1,

                  "clientMac": "1c:4d:70:81:8d:0a",

                  "nodeId": "Q2FJ-3SHB-Y2K2",

                  "failureStep": "auth",

                  "type": "802.1X auth fail",

                  "ts": 1532032595

                }

              ]
          headers: {}
  /networks/{networkId}/devices/{serial}/latencyStats:
    get:
      description: Aggregated latency info for a given AP on this network
      summary: getNetworkDeviceLatencyStats
      tags:
      - Wireless health
      operationId: getNetworkDeviceLatencyStats
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: string
      - name: t0
        in: query
        required: false
        type: string
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
      - name: t1
        in: query
        required: false
        type: string
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
      - name: timespan
        in: query
        required: false
        type: number
        format: double
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
      - name: ssid
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by SSID
      - name: vlan
        in: query
        required: false
        type: integer
        format: int32
        description: Filter results by VLAN
      - name: apTag
        in: query
        required: false
        type: string
        description: Filter results by AP Tag
      - name: fields
        in: query
        required: false
        type: string
        description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "serial": "Q2JC-2MJM-FHRD",

                "latencyStats": {

                  "backgroundTraffic": {

                    "rawDistribution": {

                      "0": 1234,

                      "1": 2345,

                      "2": 3456,

                      "4": 4567,

                      "8": 5678,

                      "16": 6789,

                      "32": 7890,

                      "64": 8901,

                      "128": 9012,

                      "256": 83,

                      "512": 1234,

                      "1024": 2345,

                      "2048": 9999

                    },

                    "avg": 606.52

                  },

                  "bestEffortTraffic": "same shape as backgroundTraffic",

                  "videoTraffic": "same shape as backgroundTraffic",

                  "voiceTraffic": "same shape as backgroundTraffic"

                }

              }
          headers: {}
  /networks/{networkId}/wireless/settings:
    get:
      description: Return the wireless settings for a network
      summary: getNetworkWirelessSettings
      tags:
      - Wireless settings
      operationId: getNetworkWirelessSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "meshingEnabled": true,

                "ipv6BridgeEnabled": false,

                "locationAnalyticsEnabled": false

              }
          headers: {}
    put:
      description: Update the wireless settings for a network
      summary: updateNetworkWirelessSettings
      tags:
      - Wireless settings
      operationId: updateNetworkWirelessSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: networkId
        in: path
        required: true
        type: string
      - name: updateNetworkWirelessSettings
        in: body
        required: false
        schema:
          $ref: '#/definitions/updateNetworkWirelessSettings'
      responses:
        200:
          description: Successful operation
          schema:
            type: object
          examples:
            text/plain: >-
              {

                "meshingEnabled": true,

                "ipv6BridgeEnabled": false,

                "locationAnalyticsEnabled": false

              }
          headers: {}
definitions:
  FixedIpAssignment:
    title: FixedIpAssignment
    type: object
    properties:
      name:
        description: A descriptive name of the assignment
        type: string
      ip:
        description: The IP address you want to assign to a specific server or device
        type: string
      mac:
        description: The MAC address of the server or device that hosts the internal resource that you wish to receive the specified IP address
        type: string
    required:
    - ip
    - mac
  updateNetwork:
    title: updateNetwork
    example:
      name: Long Island Office
      timeZone: America/Los_Angeles
      tags: ' tag1 tag2 '
      disableMyMerakiCom: false
    type: object
    properties:
      name:
        description: The name of the network
        type: string
      timeZone:
        description: The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>
        type: string
      tags:
        description: A space-separated list of tags to be applied to the network
        type: string
      disableMyMerakiCom:
        description: Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)
        type: boolean
      disableRemoteStatusPage:
        description: Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false
        type: boolean
      enrollmentString:
        description: A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break.
        type: string
  StpGuard:
    title: StpGuard
    description: The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard')
    type: string
    enum:
    - disabled
    - root guard
    - bpdu guard
    - loop guard
  updateNetworkAppliancePort:
    title: updateNetworkAppliancePort
    example:
      enabled: true
      type: access
      dropUntaggedTraffic: false
      vlan: 3
      accessPolicy: open
    type: object
    properties:
      enabled:
        description: The status of the port
        type: boolean
      dropUntaggedTraffic:
        description: Trunk port can Drop all Untagged traffic. When true, no VLAN is required. Access ports cannot have dropUntaggedTraffic set to true.
        type: boolean
      type:
        description: "The type of the port: 'access' or 'trunk'."
        type: string
      vlan:
        description: Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.
        type: integer
        format: int32
      allowedVlans:
        description: Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port.
        type: string
      accessPolicy:
        description: "The name of the policy. Only applicable to Access ports. Valid values are: 'open', '8021x-radius', 'mac-radius', 'hybris-radius' for MX64 or Z3 or any MX supporting the per port authentication feature. Otherwise, 'open' is the only valid value and 'open' is the default value if the field is missing."
        type: string
  Destination:
    title: Destination
    type: object
    properties:
      ip:
        description: The IP address to test connectivity with
        type: string
      description:
        description: Description of the testing destination. Optional, defaults to null
        type: string
      default:
        description: Boolean indicating whether this is the default testing destination (true) or not (false). Defaults to false. Only one default is allowed
        example: false
        type: boolean
        default: false
    required:
    - ip
  PoliciesBySecurityAppliance:
    title: PoliciesBySecurityAppliance
    description: An object, describing what the policy-connection association is for the security appliance. (Only relevant if the security appliance is actually within the network)
    type: object
    properties:
      devicePolicy:
        $ref: '#/definitions/DevicePolicy1'
  updateNetworkClientSplashAuthorizationStatus:
    title: updateNetworkClientSplashAuthorizationStatus
    example:
      ssids:
        0:
          isAuthorized: true
        2:
          isAuthorized: false
    type: object
    properties:
      ssids:
        description: The target SSIDs. Each SSID must be enabled and must have Click-through splash enabled. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID's splash frequency. Not all networks support configuring all SSIDs
        type: object
        additionalProperties:
          $ref: '#/definitions/generatedObject10'
    required:
    - ssids
  updateNetworkConnectivityMonitoringDestinations:
    title: updateNetworkConnectivityMonitoringDestinations
    example:
      destinations:
      - ip: 8.8.8.8
        description: Google
        default: false
      - ip: 1.23.45.67
        description: test description
        default: true
      - ip: 9.8.7.6
    type: object
    properties:
      destinations:
        description: The list of connectivity monitoring destinations
        type: array
        items:
          $ref: '#/definitions/Destination'
  updateNetworkBluetoothSettings:
    title: updateNetworkBluetoothSettings
    example:
      scanningEnabled: true
      advertisingEnabled: true
      uuid: 00000000-0000-0000-000-000000000000
      majorMinorAssignmentMode: Non-unique
      major: 1
    type: object
    properties:
      scanningEnabled:
        description: Whether APs will scan for Bluetooth enabled clients. (true, false)
        type: boolean
      advertisingEnabled:
        description: Whether APs will advertise beacons. (true, false)
        type: boolean
      uuid:
        description: The UUID to be used in the beacon identifier.
        type: string
      majorMinorAssignmentMode:
        $ref: '#/definitions/MajorMinorAssignmentMode'
      major:
        description: The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
        type: integer
        format: int32
      minor:
        description: The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
        type: integer
        format: int32
  DevicePolicy2:
    title: DevicePolicy2
    description: The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
    type: string
    enum:
    - Whitelisted
    - Blocked
    - Normal
    - Group policy
  updateNetworkApplianceFirewallInboundFirewallRules:
    title: updateNetworkApplianceFirewallInboundFirewallRules
    example:
      rules:
      - comment: Allow TCP traffic to subnet with HTTP servers.
        policy: allow
        protocol: tcp
        destPort: 443
        destCidr: 192.168.1.0/24
        srcPort: Any
        srcCidr: Any
        syslogEnabled: false
    type: object
    properties:
      rules:
        description: An ordered array of the firewall rules (not including the default rule)
        type: array
        items:
          $ref: '#/definitions/Rule1'
      syslogDefaultRule:
        description: Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
        type: boolean
  MV22XMV72X:
    title: MV22XMV72X
    description: Quality and resolution for MV22X/MV72X camera models.
    type: object
    properties:
      quality:
        $ref: '#/definitions/Quality1'
      resolution:
        $ref: '#/definitions/Resolution4'
    required:
    - quality
    - resolution
  Rule1:
    title: Rule1
    type: object
    properties:
      comment:
        description: Description of the rule (optional)
        type: string
      policy:
        $ref: '#/definitions/Policy'
      protocol:
        $ref: '#/definitions/Protocol'
      srcPort:
        description: Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'
        type: string
      srcCidr:
        description: "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
        type: string
      destPort:
        description: Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
        type: string
      destCidr:
        description: Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
        type: string
      syslogEnabled:
        description: Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)
        type: boolean
    required:
    - policy
    - protocol
    - srcCidr
    - destCidr
  generateNetworkCameraSnapshot:
    title: generateNetworkCameraSnapshot
    example: {}
    type: object
    properties:
      timestamp:
        description: '[optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time.'
        type: string
      fullframe:
        description: '[optional] If set to "true" the snapshot will be taken at full sensor resolution. This will error if used with timestamp.'
        type: boolean
  updateDeviceWirelessBluetoothSettings:
    title: updateDeviceWirelessBluetoothSettings
    example:
      uuid: 00000000-0000-0000-000-000000000000
      major: 13
      minor: 125
    type: object
    properties:
      uuid:
        description: Desired UUID of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
        type: string
      major:
        description: Desired major value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
        type: integer
        format: int32
      minor:
        description: Desired minor value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
        type: integer
        format: int32
  objectType:
    title: objectType
    type: string
    enum:
    - person
    - vehicle
  MajorMinorAssignmentMode:
    title: MajorMinorAssignmentMode
    description: The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')
    type: string
    enum:
    - Unique
    - Non-unique
  MV32:
    title: MV32
    description: Quality and resolution for MV32 camera models.
    type: object
    properties:
      quality:
        $ref: '#/definitions/Quality3'
      resolution:
        $ref: '#/definitions/Resolution2'
    required:
    - quality
    - resolution
  updateNetworkCellularGatewaySettingsSubnetPool:
    title: updateNetworkCellularGatewaySettingsSubnetPool
    example:
      cidr: 192.168.0.0/16
      mask: 24
    type: object
    properties:
      mask:
        description: Mask used for the subnet of all MGs in  this network.
        type: integer
        format: int32
      cidr:
        description: CIDR of the pool of subnets. Each MG in this network will automatically pick a subnet from this pool.
        type: string
  updateNetworkCellularGatewaySettingsUplink:
    title: updateNetworkCellularGatewaySettingsUplink
    example: {}
    type: object
    properties:
      bandwidthLimits:
        $ref: '#/definitions/BandwidthLimits'
  claimNetworkDevices:
    title: claimNetworkDevices
    example:
      serials:
      - Q234-ABCD-0001
      - Q234-ABCD-0002
      - Q234-ABCD-0003
    type: object
    properties:
      serials:
        description: A list of serials of devices to claim
        type: array
        items:
          type: string
      serial:
        description: '[DEPRECATED] The serial of a device to claim'
        type: string
  Quality:
    title: Quality
    description: Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model.
    type: string
    enum:
    - Standard
    - High
    - Enhanced
  createNetworkCameraQualityRetentionProfile:
    title: createNetworkCameraQualityRetentionProfile
    example: {}
    type: object
    properties:
      name:
        description: The name of the new profile. Must be unique. This parameter is required.
        type: string
      motionBasedRetentionEnabled:
        description: Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false.
        type: boolean
      restrictedBandwidthModeEnabled:
        description: Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false.
        type: boolean
      audioRecordingEnabled:
        description: Whether or not to record audio. Can be either true or false. Defaults to false.
        type: boolean
      cloudArchiveEnabled:
        description: Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false.
        type: boolean
      motionDetectorVersion:
        description: The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
        type: integer
        format: int32
      scheduleId:
        description: Schedule for which this camera will record video, or 'null' to always record.
        type: string
      maxRetentionDays:
        description: The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days
        type: integer
        format: int32
      videoSettings:
        $ref: '#/definitions/VideoSettings'
    required:
    - name
  Resolution1:
    title: Resolution1
    description: Resolution of the camera. Can be one of '1280x720' or '1920x1080'.
    type: string
    enum:
    - 1280x720
    - 1920x1080
  BandwidthLimits:
    title: BandwidthLimits
    description: The bandwidth settings for the 'cellular' uplink
    type: object
    properties:
      limitUp:
        description: The maximum upload limit (integer, in Kbps). null indicates no limit
        type: integer
        format: int32
      limitDown:
        description: The maximum download limit (integer, in Kbps). null indicates no limit
        type: integer
        format: int32
  updateDeviceCameraQualityAndRetentionSettings:
    title: updateDeviceCameraQualityAndRetentionSettings
    example:
      motionBasedRetentionEnabled: false
      audioRecordingEnabled: false
      restrictedBandwidthModeEnabled: false
      profileId: 
      quality: Standard
      resolution: 720
    type: object
    properties:
      profileId:
        description: The ID of a quality and retention profile to assign to the camera. The profile's settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.
        type: string
      motionBasedRetentionEnabled:
        description: Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera
        type: boolean
      audioRecordingEnabled:
        description: Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera
        type: boolean
      restrictedBandwidthModeEnabled:
        description: Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera
        type: boolean
      quality:
        $ref: '#/definitions/Quality'
      resolution:
        $ref: '#/definitions/Resolution'
  UrlCategoryListSize:
    title: UrlCategoryListSize
    description: URL category list size which is either 'topSites' or 'fullList'
    type: string
    enum:
    - topSites
    - fullList
  Resolution:
    title: Resolution
    description: Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080' or '2058x2058'. Not all resolutions are supported by every camera model.
    type: string
    enum:
    - 1280x720
    - 1920x1080
    - 1080x1080
    - 2058x2058
  Resolution4:
    title: Resolution4
    description: Resolution of the camera. Can be one of '1280x720', '1920x1080' or '2688x1512'.
    type: string
    enum:
    - 1280x720
    - 1920x1080
    - 2688x1512
  DevicePolicy:
    title: DevicePolicy
    description: The policy to apply to the specified client. Can be 'Group policy', 'Whitelisted', 'Blocked', 'Per connection' or 'Normal'. Required.
    type: string
    enum:
    - Group policy
    - Whitelisted
    - Blocked
    - Per connection
    - Normal
  DevicePolicy1:
    title: DevicePolicy1
    description: The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked' or 'Normal'. Required.
    type: string
    enum:
    - Whitelisted
    - Blocked
    - Normal
  updateNetworkDevice:
    title: updateNetworkDevice
    example:
      name: My AP
      lat: 37.418095101036201
      lng: -122.09853172302201
      serial: Q234-ABCD-5678
      mac: 00:11:22:33:44:55
      tags: ' recently-added '
    type: object
    properties:
      name:
        description: The name of a device
        type: string
      tags:
        description: The tags of a device
        type: string
      lat:
        description: The latitude of a device
        type: number
        format: double
      lng:
        description: The longitude of a device
        type: number
        format: double
      address:
        description: The address of a device
        type: string
      notes:
        description: The notes for the device. String. Limited to 255 characters.
        type: string
      moveMapMarker:
        description: Whether or not to set the latitude and longitude of a device based on the new address. Only applies when lat and lng are not specified.
        type: boolean
      switchProfileId:
        description: The ID of a switch profile to bind to the device (for available switch profiles, see the 'Switch Profiles' endpoint). Use null to unbind the switch device from the current profile. For a device to be bindable to a switch profile, it must (1) be a switch, and (2) belong to a network that is bound to a configuration template.
        type: string
      floorPlanId:
        description: The floor plan to associate to this device. null disassociates the device from the floorplan.
        type: string
  DefaultDestinations:
    title: DefaultDestinations
    description: The network_wide destinations for all alerts on the network.
    type: object
    properties:
      emails:
        description: A list of emails that will recieve the alert(s).
        type: array
        items:
          type: string
      allAdmins:
        description: If true, then all network admins will receive emails.
        type: boolean
      snmp:
        description: If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.
        type: boolean
  bindNetwork:
    title: bindNetwork
    example:
      configTemplateId: N_23952905
      autoBind: false
    type: object
    properties:
      configTemplateId:
        description: The ID of the template to which the network should be bound.
        type: string
      autoBind:
        description: Optional boolean indicating whether the network's switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model.
        type: boolean
    required:
    - configTemplateId
  Quality1:
    title: Quality1
    description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
    type: string
    enum:
    - Standard
    - Enhanced
    - High
  MV12WE:
    title: MV12WE
    description: Quality and resolution for MV12WE camera models.
    type: object
    properties:
      quality:
        $ref: '#/definitions/Quality1'
      resolution:
        $ref: '#/definitions/Resolution1'
    required:
    - quality
    - resolution
  blinkNetworkDeviceLeds:
    title: blinkNetworkDeviceLeds
    example:
      duration: 20
      period: 160
      duty: 50
    type: object
    properties:
      duration:
        description: The duration in seconds. Must be between 5 and 120. Default is 20 seconds
        type: integer
        format: int32
      period:
        description: The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds
        type: integer
        format: int32
      duty:
        description: The duty cycle as the percent active. Must be between 10 and 90. Default is 50.
        type: integer
        format: int32
  cycleDeviceSwitchPorts:
    title: cycleDeviceSwitchPorts
    example:
      ports:
      - 1
      - 2-5
      - 1_MA-MOD-8X10G_1
      - 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8
    type: object
    properties:
      ports:
        description: 'List of switch ports. Example: [1, 2-5, 1_MA-MOD-8X10G_1, 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8]'
        type: array
        items:
          type: string
    required:
    - ports
  Protocol:
    title: Protocol
    description: The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')
    type: string
    enum:
    - tcp
    - udp
    - icmp
    - any
  Resolution2:
    title: Resolution2
    description: Resolution of the camera. Can be one of '1080x1080' or '2058x2058'.
    type: string
    enum:
    - 1080x1080
    - 2058x2058
  MV21MV71:
    title: MV21MV71
    description: Quality and resolution for MV21/MV71 camera models.
    type: object
    properties:
      quality:
        $ref: '#/definitions/Quality1'
      resolution:
        description: Resolution of the camera. Can be one of '1280x720'.
        example: 1280x720
        type: string
        default: 1280x720
    required:
    - quality
    - resolution
  provisionNetworkClients:
    title: provisionNetworkClients
    example:
      mac: 00:11:22:33:44:55
      name: Miles's phone
      devicePolicy: Group policy
      groupPolicyId: 101
    type: object
    properties:
      mac:
        description: The MAC address of the client. Required.
        type: string
      name:
        description: The display name for the client. Optional. Limited to 255 bytes.
        type: string
      devicePolicy:
        $ref: '#/definitions/DevicePolicy'
      groupPolicyId:
        description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
        type: string
      policiesBySecurityAppliance:
        $ref: '#/definitions/PoliciesBySecurityAppliance'
      policiesBySsid:
        description: An object, describing the policy-connection associations for each active SSID within the network. Keys should be the number of enabled SSIDs, mapping to an object describing the client's policy
        type: object
        additionalProperties:
          $ref: '#/definitions/generatedObject'
    required:
    - mac
    - devicePolicy
  updateNetworkContentFiltering:
    title: updateNetworkContentFiltering
    example:
      allowedUrlPatterns:
      - http://www.example.org
      - http://help.com.au
      blockedUrlPatterns:
      - http://www.example.com
      - http://www.betting.com
      blockedUrlCategories:
      - meraki:contentFiltering/category/1
      - meraki:contentFiltering/category/7
      urlCategoryListSize: topSites
    type: object
    properties:
      allowedUrlPatterns:
        description: A whitelist of URL patterns to allow
        type: array
        items:
          type: string
      blockedUrlPatterns:
        description: A blacklist of URL patterns to block
        type: array
        items:
          type: string
      blockedUrlCategories:
        description: A list of URL categories to block
        type: array
        items:
          type: string
      urlCategoryListSize:
        $ref: '#/definitions/UrlCategoryListSize'
  Rule:
    title: Rule
    type: object
    properties:
      name:
        description: A descriptive name for the rule
        type: string
      lanIp:
        description: The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
        type: string
      publicPort:
        description: A port or port ranges that will be forwarded to the host on the LAN
        type: string
      localPort:
        description: A port or port ranges that will receive the forwarded traffic from the WAN
        type: string
      allowedIps:
        description: An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges.
        type: array
        items:
          type: string
      protocol:
        description: TCP or UDP
        type: string
      access:
        description: '`any` or `restricted`. Specify the right to make inbound connections on the specified ports or port ranges. If `restricted`, a list of allowed IPs is mandatory.'
        type: string
    required:
    - lanIp
    - publicPort
    - localPort
    - protocol
    - access
  Alert:
    title: Alert
    type: object
    properties:
      type:
        description: The type of alert
        type: string
      enabled:
        description: A boolean depicting if the alert is turned on or off
        type: boolean
      alertDestinations:
        description: 'A hash of destinations for this specific alert. Keys include: emails: A list of emails that will recieve information about the alert, allAdmins: If true, then all network admins will receive emails, and snmp: If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.'
        type: object
      filters:
        description: A hash of specific configuration data for the alert. Only filters specific to the alert will be updated.
        type: object
  generatedObject10:
    title: generatedObject10
    description: Splash authorization for SSID 0
    type: object
    properties:
      isAuthorized:
        description: New authorization status for the SSID (true, false).
        type: boolean
  updateDeviceCellularGatewaySettings:
    title: updateDeviceCellularGatewaySettings
    example:
      deviceName: name of the MG
      deviceLanIp: 192.168.0.33
      deviceSubnet: 192.168.0.32/27
      fixedIpAssignments:
      - mac: 0b:00:00:00:00:ac
        name: server 1
        ip: 192.168.0.10
      - mac: 0b:00:00:00:00:ab
        name: server 2
        ip: 192.168.0.20
      reservedIpRanges:
      - start: 192.168.1.0
        end: 192.168.1.1
        comment: A reserved IP range
    type: object
    properties:
      reservedIpRanges:
        description: list of all reserved IP ranges for a single MG
        type: array
        items:
          $ref: '#/definitions/ReservedIpRange'
      fixedIpAssignments:
        description: list of all fixed IP assignments for a single MG
        type: array
        items:
          $ref: '#/definitions/FixedIpAssignment'
  updateNetworkAlertSettings:
    title: updateNetworkAlertSettings
    example:
      defaultDestinations:
        emails:
        - miles@meraki.com
        allAdmins: true
        snmp: true
      alerts:
      - type: gatewayDown
        enabled: true
        alertDestinations:
          emails:
          - miles@meraki.com
          allAdmins: false
          snmp: false
        filters:
          timeout: 60
    type: object
    properties:
      defaultDestinations:
        $ref: '#/definitions/DefaultDestinations'
      alerts:
        description: Alert-specific configuration for each type. Only alerts that pertain to the network can be updated.
        type: array
        items:
          $ref: '#/definitions/Alert'
  MV12MV22MV72:
    title: MV12MV22MV72
    description: Quality and resolution for MV12/MV22/MV72 camera models.
    type: object
    properties:
      quality:
        $ref: '#/definitions/Quality1'
      resolution:
        $ref: '#/definitions/Resolution1'
    required:
    - quality
    - resolution
  updateNetworkCellularGatewaySettingsConnectivityMonitoringDestinations:
    title: updateNetworkCellularGatewaySettingsConnectivityMonitoringDestinations
    example:
      destinations:
      - ip: 8.8.8.8
        description: Google
        default: false
      - ip: 1.23.45.67
        description: test description
        default: true
      - ip: 9.8.7.6
    type: object
    properties:
      destinations:
        description: The list of connectivity monitoring destinations
        type: array
        items:
          $ref: '#/definitions/Destination'
  Udld:
    title: Udld
    description: The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
    type: string
    enum:
    - Alert only
    - Enforce
  Quality3:
    title: Quality3
    description: Quality of the camera. Can be one of 'Standard' or 'Enhanced'.
    type: string
    enum:
    - Standard
    - Enhanced
  updateNetworkCellularFirewallRules:
    title: updateNetworkCellularFirewallRules
    example:
      rules:
      - comment: Allow TCP traffic to subnet with HTTP servers.
        policy: allow
        protocol: tcp
        destPort: 443
        destCidr: 192.168.1.0/24
        srcPort: Any
        srcCidr: Any
        syslogEnabled: false
    type: object
    properties:
      rules:
        description: An ordered array of the firewall rules (not including the default rule)
        type: array
        items:
          $ref: '#/definitions/Rule1'
  generatedObject:
    title: generatedObject
    description: The number for the SSID
    type: object
    properties:
      devicePolicy:
        $ref: '#/definitions/DevicePolicy2'
      groupPolicyId:
        description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
        type: string
    required:
    - devicePolicy
  Type:
    title: Type
    description: The type of the switch port ('trunk' or 'access')
    type: string
    enum:
    - trunk
    - access
  Policy:
    title: Policy
    description: "'allow' or 'deny' traffic specified by this rule"
    type: string
    enum:
    - allow
    - deny
  VideoSettings:
    title: VideoSettings
    description: Video quality and resolution settings for all the camera models.
    type: object
    properties:
      MV21/MV71:
        $ref: '#/definitions/MV21MV71'
      MV12/MV22/MV72:
        $ref: '#/definitions/MV12MV22MV72'
      MV32:
        $ref: '#/definitions/MV32'
      MV12WE:
        $ref: '#/definitions/MV12WE'
      MV22X/MV72X:
        $ref: '#/definitions/MV22XMV72X'
  updateNetworkClientPolicy:
    title: updateNetworkClientPolicy
    example:
      mac: 00:11:22:33:44:55
      type: Group policy
      groupPolicyId: 101
    type: object
    properties:
      devicePolicy:
        description: The policy to assign. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
        type: string
      groupPolicyId:
        description: "[optional] If 'devicePolicy' is set to 'Group policy' this param is used to specify the group policy ID."
        type: string
    required:
    - devicePolicy
  ReservedIpRange:
    title: ReservedIpRange
    type: object
    properties:
      start:
        description: Starting IP included in the reserved range of IPs
        type: string
      end:
        description: Ending IP included in the reserved range of IPs
        type: string
      comment:
        description: Comment explaining the reserved IP range
        type: string
    required:
    - start
    - end
    - comment
  updateDeviceCellularGatewaySettingsPortForwardingRules:
    title: updateDeviceCellularGatewaySettingsPortForwardingRules
    example:
      rules:
      - lanIp: 172.31.128.5
        name: test
        access: any
        publicPort: 11-12
        localPort: 4
        uplink: both
        protocol: tcp
      - lanIp: 172.31.128.5
        name: test 2
        access: restricted
        allowedIps:
        - 10.10.10.10
        - 10.10.10.11
        publicPort: 99
        localPort: 5
        uplink: both
        protocol: tcp
    type: object
    properties:
      rules:
        description: An array of port forwarding params
        type: array
        items:
          $ref: '#/definitions/Rule'
  updateDeviceSwitchPort:
    title: updateDeviceSwitchPort
    example:
      name: My switch port
      tags: tag1 tag2
      enabled: true
      poeEnabled: true
      type: access
      vlan: 10
      voiceVlan: 20
      isolationEnabled: false
      rstpEnabled: true
      stpGuard: disabled
      accessPolicyNumber: 1234
      linkNegotiation: Auto negotiate
      portScheduleId: 1234
      udld: Alert only
      macWhitelist:
      - 34:56:fe:ce:8e:a0
      - 34:56:fe:ce:8e:a1
      stickyMacWhitelist:
      - 34:56:fe:ce:8e:b0
      - 34:56:fe:ce:8e:b1
      stickyMacWhitelistLimit: 5
      stormControlEnabled: true
    type: object
    properties:
      name:
        description: The name of the switch port
        type: string
      tags:
        description: The tags of the switch port
        type: string
      enabled:
        description: The status of the switch port
        type: boolean
      type:
        $ref: '#/definitions/Type'
      vlan:
        description: The VLAN of the switch port. A null value will clear the value set for trunk ports.
        type: integer
        format: int32
      voiceVlan:
        description: The voice VLAN of the switch port. Only applicable to access ports.
        type: integer
        format: int32
      allowedVlans:
        description: The VLANs allowed on the switch port. Only applicable to trunk ports.
        type: string
      poeEnabled:
        description: The PoE status of the switch port
        type: boolean
      isolationEnabled:
        description: The isolation status of the switch port
        type: boolean
      rstpEnabled:
        description: The rapid spanning tree protocol status
        type: boolean
      stpGuard:
        $ref: '#/definitions/StpGuard'
      accessPolicyNumber:
        description: The number of the access policy of the switch port. Only applicable to access ports.
        type: integer
        format: int32
      linkNegotiation:
        description: The link speed for the switch port
        type: string
      portScheduleId:
        description: The ID of the port schedule. A value of null will clear the port schedule.
        type: string
      udld:
        $ref: '#/definitions/Udld'
      macWhitelist:
        description: Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. To disable MAC whitelist, set accessPolicyNumber to null.
        type: array
        items:
          type: string
      stickyMacWhitelist:
        description: The initial list of MAC addresses for sticky Mac whitelist. To reset Sticky MAC whitelist, set accessPolicyNumber to null.
        type: array
        items:
          type: string
      stickyMacWhitelistLimit:
        description: The maximum number of MAC addresses for sticky MAC whitelist.
        type: integer
        format: int32
      stormControlEnabled:
        description: The storm control status of the switch port
        type: boolean
  updateNetworkCameraQualityRetentionProfile:
    title: updateNetworkCameraQualityRetentionProfile
    example: {}
    type: object
    properties:
      name:
        description: The name of the new profile. Must be unique.
        type: string
      motionBasedRetentionEnabled:
        description: Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false.
        type: boolean
      restrictedBandwidthModeEnabled:
        description: Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false.
        type: boolean
      audioRecordingEnabled:
        description: Whether or not to record audio. Can be either true or false. Defaults to false.
        type: boolean
      cloudArchiveEnabled:
        description: Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false.
        type: boolean
      motionDetectorVersion:
        description: The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
        type: integer
        format: int32
      scheduleId:
        description: Schedule for which this camera will record video, or 'null' to always record.
        type: string
      maxRetentionDays:
        description: The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days
        type: integer
        format: int32
      videoSettings:
        $ref: '#/definitions/VideoSettings'
  updateNetworkCellularGatewaySettingsDhcp:
    title: updateNetworkCellularGatewaySettingsDhcp
    example:
      dhcpLeaseTime: 1 hour
      dnsNameservers: custom
      dnsCustomNameservers:
      - 172.16.2.111
      - 172.16.2.30
    type: object
    properties:
      dhcpLeaseTime:
        description: DHCP Lease time for all MG of the network. It can be '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'.
        type: string
      dnsNameservers:
        description: "DNS name servers mode for all MG of the network. It can take 4 different values: 'upstream_dns', 'google_dns', 'opendns', 'custom'."
        type: string
      dnsCustomNameservers:
        description: list of fixed IP representing the the DNS Name servers when the mode is 'custom'
        type: array
        items:
          type: string
  uplink:
    title: uplink
    type: string
    enum:
    - wan1
    - wan2
    - cellular
  updateNetworkFirewalledService:
    title: updateNetworkFirewalledService
    example:
      access: restricted
      allowedIps:
      - 123.123.123.1
    type: object
    properties:
      access:
        $ref: '#/definitions/Access'
      allowedIps:
        description: An array of whitelisted IPs that can access the service. This field is required if "access" is set to "restricted". Otherwise this field is ignored
        type: array
        items:
          type: string
    required:
    - access
  Friday:
    title: Friday
    description: The schedule object for Friday.
    type: object
    properties:
      active:
        description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
        type: boolean
      from:
        description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
        type: string
      to:
        description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
        type: string
  Settings2:
    title: Settings2
    description: How URL patterns are applied. Can be 'network default', 'append' or 'override'.
    type: string
    enum:
    - network default
    - append
    - override
  BlockedUrlPatterns:
    title: BlockedUrlPatterns
    description: Settings for blacklisted URL patterns
    type: object
    properties:
      settings:
        $ref: '#/definitions/Settings2'
      patterns:
        description: A blacklist of URL patterns to block
        type: array
        items:
          type: string
  SplashAuthSettings:
    title: SplashAuthSettings
    description: Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration.
    type: string
    enum:
    - network default
    - bypass
  Bandwidth:
    title: Bandwidth
    description: The bandwidth settings for clients bound to your group policy.
    type: object
    properties:
      settings:
        $ref: '#/definitions/Settings'
      bandwidthLimits:
        $ref: '#/definitions/BandwidthLimits1'
  PerClientBandwidthLimits:
    title: PerClientBandwidthLimits
    description: An object describing the bandwidth settings for your rule.
    type: object
    properties:
      settings:
        description: How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.
        type: string
      bandwidthLimits:
        $ref: '#/definitions/BandwidthLimits2'
  Type2:
    title: Type2
    description: Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'
    type: string
    enum:
    - application
    - applicationCategory
    - host
    - port
    - ipRange
  Settings6:
    title: Settings6
    description: How Bonjour rules are applied. Can be 'network default', 'ignore' or 'custom'.
    type: string
    enum:
    - network default
    - ignore
    - custom
  Service:
    title: Service
    type: string
    enum:
    - All Services
    - AirPlay
    - AFP
    - BitTorrent
    - FTP
    - iChat
    - iTunes
    - Printers
    - Samba
    - Scanners
    - SSH
  updateNetworkDeviceManagementInterfaceSettings:
    title: updateNetworkDeviceManagementInterfaceSettings
    example:
      wan1:
        wanEnabled: not configured
        usingStaticIp: true
        staticIp: 1.2.3.4
        staticSubnetMask: 255.255.255.0
        staticGatewayIp: 1.2.3.1
        staticDns:
        - 1.2.3.2
        - 1.2.3.3
        vlan: 7
      wan2:
        wanEnabled: enabled
        usingStaticIp: false
        vlan: 2
    type: object
    properties:
      wan1:
        $ref: '#/definitions/Wan1'
      wan2:
        $ref: '#/definitions/Wan2'
  Wan2:
    title: Wan2
    description: WAN 2 settings (only for MX devices)
    type: object
    properties:
      wanEnabled:
        $ref: '#/definitions/WanEnabled'
      usingStaticIp:
        description: Configue the interface to have static IP settings or use DHCP.
        type: boolean
      staticIp:
        description: The IP the device should use on the WAN.
        type: string
      staticGatewayIp:
        description: The IP of the gateway on the WAN.
        type: string
      staticSubnetMask:
        description: The subnet mask for the WAN.
        type: string
      staticDns:
        description: Up to two DNS IPs.
        type: array
        items:
          type: string
      vlan:
        description: The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
        type: integer
        format: int32
  createNetworkHttpServersWebhookTest:
    title: createNetworkHttpServersWebhookTest
    example:
      url: https://www.example.com/path
    type: object
    properties:
      url:
        description: The URL where the test webhook will be sent
        type: string
    required:
    - url
  updateNetworkHttpServer:
    title: updateNetworkHttpServer
    example:
      name: My HTTP server
      url: https://www.example.com/webhooks
      sharedSecret: foobar
    type: object
    properties:
      name:
        description: A name for easy reference to the HTTP server
        type: string
      url:
        description: The URL of the HTTP server
        type: string
      sharedSecret:
        description: A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
        type: string
  BandwidthLimits1:
    title: BandwidthLimits1
    description: The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'.
    type: object
    properties:
      limitUp:
        description: The maximum upload limit (integer, in Kbps). null indicates no limit
        type: integer
        format: int32
      limitDown:
        description: The maximum download limit (integer, in Kbps). null indicates no limit
        type: integer
        format: int32
  FirewallAndTrafficShaping:
    title: FirewallAndTrafficShaping
    description: The firewall and traffic shaping rules and settings for your policy.
    type: object
    properties:
      settings:
        $ref: '#/definitions/Settings1'
      trafficShapingRules:
        description: >-
          An array of traffic shaping rules. Rules are applied in the order that
              they are specified in. An empty list (or null) means no rules. Note that
              you are allowed a maximum of 8 rules.
        type: array
        items:
          $ref: '#/definitions/TrafficShapingRule'
      l3FirewallRules:
        description: An ordered array of the L3 firewall rules
        type: array
        items:
          $ref: '#/definitions/L3FirewallRule'
      l7FirewallRules:
        description: An ordered array of L7 firewall rules
        type: array
        items:
          $ref: '#/definitions/L7FirewallRule'
  TrafficShapingRule:
    title: TrafficShapingRule
    type: object
    properties:
      definitions:
        description: A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
        type: array
        items:
          $ref: '#/definitions/Definition'
      perClientBandwidthLimits:
        $ref: '#/definitions/PerClientBandwidthLimits'
      dscpTagValue:
        description: >-
          The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
              For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
        type: integer
        format: int32
      pcpTagValue:
        description: >-
          The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).
              null means 'Do not set PCP tag'.
        type: integer
        format: int32
      priority:
        description: >-
          A string, indicating the priority level for packets bound to your rule.
              Can be 'low', 'normal' or 'high'.
        type: string
    required:
    - definitions
  BandwidthLimits2:
    title: BandwidthLimits2
    description: The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.
    type: object
    properties:
      limitUp:
        description: The maximum upload limit (integer, in Kbps).
        type: integer
        format: int32
      limitDown:
        description: The maximum download limit (integer, in Kbps).
        type: integer
        format: int32
  VlanTagging:
    title: VlanTagging
    description: The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration.
    type: object
    properties:
      settings:
        $ref: '#/definitions/Settings5'
      vlanId:
        description: The ID of the vlan you want to tag. This only applies if 'settings' is set to 'custom'.
        type: string
  BonjourForwarding:
    title: BonjourForwarding
    description: The Bonjour settings for your group policy. Only valid if your network has a wireless configuration.
    type: object
    properties:
      settings:
        $ref: '#/definitions/Settings6'
      rules:
        description: A list of the Bonjour forwarding rules for your group policy. If 'settings' is set to 'custom', at least one rule must be specified.
        type: array
        items:
          $ref: '#/definitions/Rule3'
  updateNetworkDeviceWirelessRadioSettings:
    title: updateNetworkDeviceWirelessRadioSettings
    example:
      rfProfileId: 1234
    type: object
    properties:
      rfProfileId:
        description: >-
          The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile
              (indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides
              on the device (channel width, channel, power).
        type: integer
        format: int32
  BottomRightCorner:
    title: BottomRightCorner
    description: The longitude and latitude of the bottom right corner of your floor plan.
    type: object
    properties:
      lat:
        description: Latitude
        type: number
        format: double
      lng:
        description: Longitude
        type: number
        format: double
  Policy5:
    title: Policy5
    description: "'Deny' traffic specified by this rule"
    type: string
    enum:
    - deny
  Wan1:
    title: Wan1
    description: WAN 1 settings
    type: object
    properties:
      wanEnabled:
        $ref: '#/definitions/WanEnabled'
      usingStaticIp:
        description: Configue the interface to have static IP settings or use DHCP.
        type: boolean
      staticIp:
        description: The IP the device should use on the WAN.
        type: string
      staticGatewayIp:
        description: The IP of the gateway on the WAN.
        type: string
      staticSubnetMask:
        description: The subnet mask for the WAN.
        type: string
      staticDns:
        description: Up to two DNS IPs.
        type: array
        items:
          type: string
      vlan:
        description: The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
        type: integer
        format: int32
  WanEnabled:
    title: WanEnabled
    description: Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
    type: string
    enum:
    - enabled
    - disabled
    - not configured
  Type1:
    title: Type1
    description: The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.
    type: string
    enum:
    - application
    - applicationCategory
    - host
    - port
    - ipRange
    - localNet
  AllowedUrlPatterns:
    title: AllowedUrlPatterns
    description: Settings for whitelisted URL patterns
    type: object
    properties:
      settings:
        $ref: '#/definitions/Settings2'
      patterns:
        description: A whitelist of URL patterns to allow
        type: array
        items:
          type: string
  TopRightCorner:
    title: TopRightCorner
    description: The longitude and latitude of the top right corner of your floor plan.
    type: object
    properties:
      lat:
        description: Latitude
        type: number
        format: double
      lng:
        description: Longitude
        type: number
        format: double
  createNetworkHttpServer:
    title: createNetworkHttpServer
    example:
      name: My HTTP server
      url: https://www.example.com/webhooks
      sharedSecret: foobar
    type: object
    properties:
      name:
        description: A name for easy reference to the HTTP server
        type: string
      url:
        description: The URL of the HTTP server
        type: string
      sharedSecret:
        description: A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
        type: string
    required:
    - name
    - url
  Rule7:
    title: Rule7
    type: object
    properties:
      publicIp:
        description: The IP address that will be used to access the internal resource from the WAN
        type: string
      uplink:
        $ref: '#/definitions/Uplink1'
      portRules:
        description: An array of associated forwarding rules
        type: array
        items:
          $ref: '#/definitions/PortRule'
    required:
    - publicIp
    - uplink
    - portRules
  Center:
    title: Center
    description: The longitude and latitude of the center of your floor plan. The 'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must be specified. If 'center' is specified, the floor plan is placed over that point with no rotation. If two adjacent corners are specified, the floor plan is rotated to line up with the two specified points. The aspect ratio of the floor plan's image is preserved regardless of which corners/center are specified. (This means if that more than two corners are specified, only two corners may be used to preserve the floor plan's aspect ratio.). No two points can have the same latitude, longitude pair.
    type: object
    properties:
      lat:
        description: Latitude
        type: number
        format: double
      lng:
        description: Longitude
        type: number
        format: double
  Thursday:
    title: Thursday
    description: The schedule object for Thursday.
    type: object
    properties:
      active:
        description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
        type: boolean
      from:
        description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
        type: string
      to:
        description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
        type: string
  Center1:
    title: Center1
    description: The longitude and latitude of the center of your floor plan. If you want to change the geolocation data of your floor plan, either the 'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must be specified. If 'center' is specified, the floor plan is placed over that point with no rotation. If two adjacent corners are specified, the floor plan is rotated to line up with the two specified points. The aspect ratio of the floor plan's image is preserved regardless of which corners/center are specified. (This means if that more than two corners are specified, only two corners may be used to preserve the floor plan's aspect ratio.). No two points can have the same latitude, longitude pair.
    type: object
    properties:
      lat:
        description: Latitude
        type: number
        format: double
      lng:
        description: Longitude
        type: number
        format: double
  L3FirewallRule:
    title: L3FirewallRule
    type: object
    properties:
      comment:
        description: Description of the rule (optional)
        type: string
      policy:
        description: "'allow' or 'deny' traffic specified by this rule"
        type: string
      protocol:
        description: The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')
        type: string
      destPort:
        description: Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'
        type: string
      destCidr:
        description: Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'.
        type: string
    required:
    - policy
    - protocol
    - destCidr
  BlockedUrlCategories:
    title: BlockedUrlCategories
    description: Settings for blacklisted URL categories
    type: object
    properties:
      settings:
        $ref: '#/definitions/Settings4'
      categories:
        description: A list of URL categories to block
        type: array
        items:
          type: string
  updateNetworkGroupPolicy:
    title: updateNetworkGroupPolicy
    example:
      name: No video streaming
      scheduling:
        enabled: true
        monday:
          active: true
          from: 9:00
          to: 17:00
        tuesday:
          active: true
          from: 9:00
          to: 17:00
        wednesday:
          active: true
          from: 9:00
          to: 17:00
        thursday:
          active: true
          from: 9:00
          to: 17:00
        friday:
          active: true
          from: 9:00
          to: 17:00
        saturday:
          active: false
          from: 0:00
          to: 24:00
        sunday:
          active: false
          from: 0:00
          to: 24:00
      bandwidth:
        settings: custom
        bandwidthLimits:
          limitUp: 1000000
          limitDown: 1000000
      firewallAndTrafficShaping:
        settings: custom
        trafficShapingRules:
        - definitions:
          - type: host
            value: google.com
          - type: port
            value: 9090
          - type: ipRange
            value: 192.1.0.0
          - type: ipRange
            value: 192.1.0.0/16
          - type: ipRange
            value: 10.1.0.0/16:80
          - type: localNet
            value: 192.168.0.0/16
          - type: applicationCategory
            value:
              id: meraki:layer7/category/2
              name: Blogging
          - type: application
            value:
              id: meraki:layer7/application/133
              name: Battle.net
          perClientBandwidthLimits:
            settings: custom
            bandwidthLimits:
              limitUp: 1000000
              limitDown: 1000000
          dscpTagValue: 
          pcpTagValue: 
        l3FirewallRules:
        - comment: Allow TCP traffic to subnet with HTTP servers.
          policy: allow
          protocol: tcp
          destPort: 443
          destCidr: 192.168.1.0/24
        l7FirewallRules:
        - - policy: deny
            type: application
            value:
              id: meraki:layer7/application/67
              name: Xbox LIVE
          - policy: deny
            type: applicationCategory
            value:
              id: meraki:layer7/category/2
              name: Blogging
          - policy: deny
            type: host
            value: google.com
          - policy: deny
            type: port
            value: 23
          - policy: deny
            type: ipRange
            value: 10.11.12.00/24
          - policy: deny
            type: ipRange
            value: 10.11.12.00/24:5555
          - policy: deny
            type: blacklistedCountries
            value:
            - AX
            - CA
          - policy: deny
            type: whitelistedCountries
            value:
            - US
      contentFiltering:
        allowedUrlPatterns:
          settings: network default
          patterns: []
        blockedUrlPatterns:
          settings: append
          patterns:
          - http://www.example.com
          - http://www.betting.com
        blockedUrlCategories:
          settings: override
          categories:
          - meraki:contentFiltering/category/1
          - meraki:contentFiltering/category/7
      splashAuthSettings: bypass
      vlanTagging:
        settings: custom
        vlanId: 1
      bonjourForwarding:
        settings: custom
        rules:
        - description: A simple bonjour rule
          vlanId: 1
          services:
          - All Services
    type: object
    properties:
      name:
        description: The name for your group policy.
        type: string
      scheduling:
        $ref: '#/definitions/Scheduling'
      bandwidth:
        $ref: '#/definitions/Bandwidth'
      firewallAndTrafficShaping:
        $ref: '#/definitions/FirewallAndTrafficShaping'
      contentFiltering:
        $ref: '#/definitions/ContentFiltering'
      splashAuthSettings:
        $ref: '#/definitions/SplashAuthSettings'
      vlanTagging:
        $ref: '#/definitions/VlanTagging'
      bonjourForwarding:
        $ref: '#/definitions/BonjourForwarding'
  Rule6:
    title: Rule6
    type: object
    properties:
      policy:
        $ref: '#/definitions/Policy5'
      type:
        $ref: '#/definitions/Type5'
      value:
        description: The 'value' of what you want to block. Format of 'value' varies depending on type of the rule. See sample request. The application categories and application ids can be retrieved from the the 'MX L7 application categories' endpoint. The countries follow the two-letter ISO 3166-1 alpha-2 format.
        type: string
  Settings:
    title: Settings
    description: How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'.
    type: string
    enum:
    - network default
    - ignore
    - custom
  L7FirewallRule:
    title: L7FirewallRule
    type: object
    properties:
      policy:
        $ref: '#/definitions/Policy2'
      type:
        $ref: '#/definitions/Type2'
      value:
        description: The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application.
        type: string
  Type5:
    title: Type5
    description: "Type of the L7 rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'"
    type: string
    enum:
    - application
    - applicationCategory
    - host
    - port
    - ipRange
  TopLeftCorner:
    title: TopLeftCorner
    description: The longitude and latitude of the top left corner of your floor plan.
    type: object
    properties:
      lat:
        description: Latitude
        type: number
        format: double
      lng:
        description: Longitude
        type: number
        format: double
  Scheduling:
    title: Scheduling
    description: The schedule for the group policy. Schedules are applied to days of the week.
    type: object
    properties:
      enabled:
        description: Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed.
        type: boolean
      monday:
        $ref: '#/definitions/Monday'
      tuesday:
        $ref: '#/definitions/Tuesday'
      wednesday:
        $ref: '#/definitions/Wednesday'
      thursday:
        $ref: '#/definitions/Thursday'
      friday:
        $ref: '#/definitions/Friday'
      saturday:
        $ref: '#/definitions/Saturday'
      sunday:
        $ref: '#/definitions/Sunday'
  Monday:
    title: Monday
    description: The schedule object for Monday.
    type: object
    properties:
      active:
        description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
        type: boolean
      from:
        description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
        type: string
      to:
        description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
        type: string
  Policy2:
    title: Policy2
    description: The policy applied to matching traffic. Must be 'deny'.
    type: string
    enum:
    - deny
  updateNetworkOneToManyNatRules:
    title: updateNetworkOneToManyNatRules
    example:
      rules:
      - publicIp: 146.11.11.13
        uplink: internet1
        portRules:
        - name: Rule 1
          protocol: tcp
          publicPort: 9443
          localIp: 192.168.128.1
          localPort: 443
          allowedIps:
          - any
        - name: Rule 2
          protocol: tcp
          publicPort: 8080
          localIp: 192.168.128.1
          localPort: 80
          allowedIps:
          - 10.82.110.0/24
          - 10.82.111.0/24
    type: object
    properties:
      rules:
        description: An array of 1:Many nat rules
        type: array
        items:
          $ref: '#/definitions/Rule7'
    required:
    - rules
  Tuesday:
    title: Tuesday
    description: The schedule object for Tuesday.
    type: object
    properties:
      active:
        description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
        type: boolean
      from:
        description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
        type: string
      to:
        description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
        type: string
  Wednesday:
    title: Wednesday
    description: The schedule object for Wednesday.
    type: object
    properties:
      active:
        description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
        type: boolean
      from:
        description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
        type: string
      to:
        description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
        type: string
  Definition:
    title: Definition
    type: object
    properties:
      type:
        $ref: '#/definitions/Type1'
      value:
        description: >-
          If "type" is 'host', 'port', 'ipRange' or 'localNet', then "value" must be a string, matching either
              a hostname (e.g. "somesite.com"), a port (e.g. 8080), or an IP range ("192.1.0.0",
              "192.1.0.0/16", or "10.1.0.0/16:80"). 'localNet' also supports CIDR notation, excluding
              custom ports.
               If "type" is 'application' or 'applicationCategory', then "value" must be an object
              with the structure { "id": "meraki:layer7/..." }, where "id" is the application category or
              application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories
              endpoint).
        type: string
    required:
    - type
    - value
  updateNetworkL7FirewallRules:
    title: updateNetworkL7FirewallRules
    example:
      rules:
      - policy: deny
        type: application
        value:
          id: meraki:layer7/application/67
          name: Xbox LIVE
      - policy: deny
        type: applicationCategory
        value:
          id: meraki:layer7/category/2
          name: Blogging
      - policy: deny
        type: host
        value: google.com
      - policy: deny
        type: port
        value: 23
      - policy: deny
        type: ipRange
        value: 10.11.12.00/24
      - policy: deny
        type: ipRange
        value: 10.11.12.00/24:5555
      - policy: deny
        type: blacklistedCountries
        value:
        - AX
        - CA
      - policy: deny
        type: whitelistedCountries
        value:
        - US
    type: object
    properties:
      rules:
        description: An ordered array of the MX L7 firewall rules
        type: array
        items:
          $ref: '#/definitions/Rule6'
  updateNetworkNetflowSettings:
    title: updateNetworkNetflowSettings
    example:
      reportingEnabled: true
      collectorIp: 1.2.3.4
      collectorPort: 443
    type: object
    properties:
      reportingEnabled:
        description: Boolean indicating whether NetFlow traffic reporting is enabled (true) or disabled (false).
        type: boolean
      collectorIp:
        description: The IPv4 address of the NetFlow collector.
        type: string
      collectorPort:
        description: The port that the NetFlow collector will be listening on.
        type: integer
        format: int32
  updateNetworkFloorPlan:
    title: updateNetworkFloorPlan
    example: {}
    type: object
    properties:
      name:
        description: The name of your floor plan.
        type: string
      center:
        $ref: '#/definitions/Center1'
      bottomLeftCorner:
        $ref: '#/definitions/BottomLeftCorner'
      bottomRightCorner:
        $ref: '#/definitions/BottomRightCorner'
      topLeftCorner:
        $ref: '#/definitions/TopLeftCorner'
      topRightCorner:
        $ref: '#/definitions/TopRightCorner'
      imageContents:
        description: The file contents (a base 64 encoded string) of your new image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in. If you upload a new image, and you do NOT specify any new geolocation fields ('center, 'topLeftCorner', etc), the floor plan will be recentered with no rotation in order to maintain the aspect ratio of your new image.
        type: string
  createNetworkGroupPolicy:
    title: createNetworkGroupPolicy
    example:
      name: No video streaming
      scheduling:
        enabled: true
        monday:
          active: true
          from: 9:00
          to: 17:00
        tuesday:
          active: true
          from: 9:00
          to: 17:00
        wednesday:
          active: true
          from: 9:00
          to: 17:00
        thursday:
          active: true
          from: 9:00
          to: 17:00
        friday:
          active: true
          from: 9:00
          to: 17:00
        saturday:
          active: false
          from: 0:00
          to: 24:00
        sunday:
          active: false
          from: 0:00
          to: 24:00
      bandwidth:
        settings: custom
        bandwidthLimits:
          limitUp: 1000000
          limitDown: 1000000
      firewallAndTrafficShaping:
        settings: custom
        trafficShapingRules:
        - definitions:
          - type: host
            value: google.com
          - type: port
            value: 9090
          - type: ipRange
            value: 192.1.0.0
          - type: ipRange
            value: 192.1.0.0/16
          - type: ipRange
            value: 10.1.0.0/16:80
          - type: localNet
            value: 192.168.0.0/16
          - type: applicationCategory
            value:
              id: meraki:layer7/category/2
              name: Blogging
          - type: application
            value:
              id: meraki:layer7/application/133
              name: Battle.net
          perClientBandwidthLimits:
            settings: custom
            bandwidthLimits:
              limitUp: 1000000
              limitDown: 1000000
          dscpTagValue: 
          pcpTagValue: 
        l3FirewallRules:
        - comment: Allow TCP traffic to subnet with HTTP servers.
          policy: allow
          protocol: tcp
          destPort: 443
          destCidr: 192.168.1.0/24
        l7FirewallRules:
        - - policy: deny
            type: application
            value:
              id: meraki:layer7/application/67
              name: Xbox LIVE
          - policy: deny
            type: applicationCategory
            value:
              id: meraki:layer7/category/2
              name: Blogging
          - policy: deny
            type: host
            value: google.com
          - policy: deny
            type: port
            value: 23
          - policy: deny
            type: ipRange
            value: 10.11.12.00/24
          - policy: deny
            type: ipRange
            value: 10.11.12.00/24:5555
          - policy: deny
            type: blacklistedCountries
            value:
            - AX
            - CA
          - policy: deny
            type: whitelistedCountries
            value:
            - US
      contentFiltering:
        allowedUrlPatterns:
          settings: network default
          patterns: []
        blockedUrlPatterns:
          settings: append
          patterns:
          - http://www.example.com
          - http://www.betting.com
        blockedUrlCategories:
          settings: override
          categories:
          - meraki:contentFiltering/category/1
          - meraki:contentFiltering/category/7
      splashAuthSettings: bypass
      vlanTagging:
        settings: custom
        vlanId: 1
      bonjourForwarding:
        settings: custom
        rules:
        - description: A simple bonjour rule
          vlanId: 1
          services:
          - All Services
    type: object
    properties:
      name:
        description: The name for your group policy. Required.
        type: string
      scheduling:
        $ref: '#/definitions/Scheduling'
      bandwidth:
        $ref: '#/definitions/Bandwidth'
      firewallAndTrafficShaping:
        $ref: '#/definitions/FirewallAndTrafficShaping'
      contentFiltering:
        $ref: '#/definitions/ContentFiltering'
      splashAuthSettings:
        $ref: '#/definitions/SplashAuthSettings'
      vlanTagging:
        $ref: '#/definitions/VlanTagging'
      bonjourForwarding:
        $ref: '#/definitions/BonjourForwarding'
    required:
    - name
  Settings1:
    title: Settings1
    description: How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'.
    type: string
    enum:
    - network default
    - ignore
    - custom
  Rule3:
    title: Rule3
    type: object
    properties:
      description:
        description: A description for your Bonjour forwarding rule. Optional.
        type: string
      vlanId:
        description: The ID of the service VLAN. Required.
        type: string
      services:
        description: A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'
        type: array
        items:
          $ref: '#/definitions/Service'
    required:
    - vlanId
    - services
  updateNetworkL3FirewallRules:
    title: updateNetworkL3FirewallRules
    example:
      rules:
      - comment: Allow TCP traffic to subnet with HTTP servers.
        policy: allow
        protocol: tcp
        destPort: 443
        destCidr: 192.168.1.0/24
        srcPort: Any
        srcCidr: Any
        syslogEnabled: false
    type: object
    properties:
      rules:
        description: An ordered array of the firewall rules (not including the default rule)
        type: array
        items:
          $ref: '#/definitions/Rule1'
      syslogDefaultRule:
        description: Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
        type: boolean
  Uplink1:
    title: Uplink1
    description: The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')
    type: string
    enum:
    - internet1
    - internet2
  Access:
    title: Access
    description: A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are "blocked" (no remote IPs can access the service), "restricted" (only whitelisted IPs can access the service), and "unrestriced" (any remote IP can access the service). This field is required
    type: string
    enum:
    - blocked
    - restricted
    - unrestricted
  ContentFiltering:
    title: ContentFiltering
    description: The content filtering settings for your group policy
    type: object
    properties:
      allowedUrlPatterns:
        $ref: '#/definitions/AllowedUrlPatterns'
      blockedUrlPatterns:
        $ref: '#/definitions/BlockedUrlPatterns'
      blockedUrlCategories:
        $ref: '#/definitions/BlockedUrlCategories'
  createNetworkFloorPlan:
    title: createNetworkFloorPlan
    example: {}
    type: object
    properties:
      name:
        description: The name of your floor plan.
        type: string
      center:
        $ref: '#/definitions/Center'
      bottomLeftCorner:
        $ref: '#/definitions/BottomLeftCorner'
      bottomRightCorner:
        $ref: '#/definitions/BottomRightCorner'
      topLeftCorner:
        $ref: '#/definitions/TopLeftCorner'
      topRightCorner:
        $ref: '#/definitions/TopRightCorner'
      imageContents:
        description: The file contents (a base 64 encoded string) of your image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in.
        type: string
    required:
    - name
    - imageContents
  BottomLeftCorner:
    title: BottomLeftCorner
    description: The longitude and latitude of the bottom left corner of your floor plan.
    type: object
    properties:
      lat:
        description: Latitude
        type: number
        format: double
      lng:
        description: Longitude
        type: number
        format: double
  Saturday:
    title: Saturday
    description: The schedule object for Saturday.
    type: object
    properties:
      active:
        description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
        type: boolean
      from:
        description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
        type: string
      to:
        description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
        type: string
  Sunday:
    title: Sunday
    description: The schedule object for Sunday.
    type: object
    properties:
      active:
        description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
        type: boolean
      from:
        description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
        type: string
      to:
        description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
        type: string
  Settings4:
    title: Settings4
    description: How URL categories are applied. Can be 'network default', 'append' or 'override'.
    type: string
    enum:
    - network default
    - append
    - override
  Settings5:
    title: Settings5
    description: How VLAN tagging is applied. Can be 'network default', 'ignore' or 'custom'.
    type: string
    enum:
    - network default
    - ignore
    - custom
  PortRule:
    title: PortRule
    type: object
    properties:
      name:
        description: A description of the rule
        type: string
      protocol:
        $ref: '#/definitions/Protocol3'
      publicPort:
        description: Destination port of the traffic that is arriving on the WAN
        type: string
      localIp:
        description: Local IP address to which traffic will be forwarded
        type: string
      localPort:
        description: Destination port of the forwarded traffic that will be sent from the MX to the specified host on the LAN. If you simply wish to forward the traffic without translating the port, this should be the same as the Public port
        type: string
      allowedIps:
        description: Remote IP addresses or ranges that are permitted to access the internal resource via this port forwarding rule, or 'any'
        type: array
        items:
          type: string
  Protocol4:
    title: Protocol4
    description: "Either of the following: 'tcp', 'udp', 'icmp-ping' or 'any'"
    type: string
    enum:
    - tcp
    - udp
    - icmp-ping
    - any
  DeviceFields:
    title: DeviceFields
    description: The new fields of the device. Each field of this object is optional.
    type: object
    properties:
      name:
        description: New name for the device
        type: string
      notes:
        description: New notes for the device
        type: string
  EnterpriseAdminAccess:
    title: EnterpriseAdminAccess
    description: Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')
    type: string
    enum:
    - access disabled
    - access enabled
  RadiusServer:
    title: RadiusServer
    type: object
    properties:
      host:
        description: IP address of your RADIUS server
        type: string
      port:
        description: UDP port the RADIUS server listens on for Access-requests
        type: integer
        format: int32
      secret:
        description: RADIUS client shared secret
        type: string
    required:
    - host
    - secret
  Rule10:
    title: Rule10
    type: object
    properties:
      comment:
        description: Description of the rule (optional)
        type: string
      policy:
        $ref: '#/definitions/Policy'
      protocol:
        $ref: '#/definitions/Protocol'
      destPort:
        description: Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
        type: string
      destCidr:
        description: Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
        type: string
    required:
    - policy
    - protocol
    - destCidr
  updateNetworkSwitchAccessControlLists:
    title: updateNetworkSwitchAccessControlLists
    example:
      rules:
      - comment: Deny SSH
        policy: deny
        ipVersion: ipv4
        protocol: tcp
        srcCidr: 10.1.10.0/24
        srcPort: any
        dstCidr: 172.16.30/24
        dstPort: 22
        vlan: 10
    type: object
    properties:
      rules:
        description: An ordered array of the access control list rules (not including the default rule). An empty array will clear the rules.
        type: array
        items:
          $ref: '#/definitions/Rule12'
    required:
    - rules
  IpVersion:
    title: IpVersion
    description: IP address version (must be 'any', 'ipv4' or 'ipv6'). Applicable only if network supports IPv6. Default value is 'ipv4'.
    type: string
    enum:
    - any
    - ipv4
    - ipv6
  SwitchPort:
    title: SwitchPort
    type: object
    properties:
      serial:
        description: Serial number of the switch.
        type: string
      portId:
        description: 'Port identifier of switch port. For modules, the identifier is "SlotNumber_ModuleType_PortNumber" (Ex: “1_8X10G_1”), otherwise it is just the port number (Ex: "8").'
        type: string
    required:
    - serial
    - portId
  DefaultSettings:
    title: DefaultSettings
    description: Default multicast setting for entire network. IGMP snooping and Flood unknown multicast traffic settings are enabled by default.
    type: object
    properties:
      igmpSnoopingEnabled:
        description: IGMP snooping setting for entire network
        type: boolean
      floodUnknownMulticastTrafficEnabled:
        description: Flood unknown multicast traffic setting for entire network
        type: boolean
  FirewallInfoSubtab:
    title: FirewallInfoSubtab
    description: >-
      The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
          listed. Can be one of 'default or inherit', 'hide' or 'show'.
    type: string
    enum:
    - default or inherit
    - hide
    - show
  V3PrivMode:
    title: V3PrivMode
    description: The SNMP version 3 privacy mode. Can be either 'DES' or 'AES128'.
    type: string
    enum:
    - DES
    - AES128
  moveNetworkSmDevices:
    title: moveNetworkSmDevices
    example:
      ids: '"1284392014819"'
      newNetwork: N_24329156
    type: object
    properties:
      wifiMacs:
        description: The wifiMacs of the devices to be moved.
        type: string
      ids:
        description: The ids of the devices to be moved.
        type: string
      serials:
        description: The serials of the devices to be moved.
        type: string
      scope:
        description: The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved.
        type: string
      newNetwork:
        description: The new network to which the devices will be moved.
        type: string
    required:
    - newNetwork
  updateNetworkSsidTrafficShaping:
    title: updateNetworkSsidTrafficShaping
    example:
      trafficShapingEnabled: true
      defaultRulesEnabled: true
      rules:
      - definitions:
        - type: host
          value: google.com
        - type: port
          value: 9090
        - type: ipRange
          value: 192.1.0.0
        - type: ipRange
          value: 192.1.0.0/16
        - type: ipRange
          value: 10.1.0.0/16:80
        - type: localNet
          value: 192.168.0.0/16
        - type: applicationCategory
          value:
            id: meraki:layer7/category/2
            name: Blogging
        - type: application
          value:
            id: meraki:layer7/application/133
            name: Battle.net
        perClientBandwidthLimits:
          settings: custom
          bandwidthLimits:
            limitUp: 1000000
            limitDown: 1000000
        dscpTagValue: 
        pcpTagValue: 
    type: object
    properties:
      trafficShapingEnabled:
        description: Whether traffic shaping rules are applied to clients on your SSID.
        type: boolean
      defaultRulesEnabled:
        description: >-
          Whether default traffic shaping rules are enabled (true) or disabled (false).
              There are 4 default rules, which can
              be seen on your network's traffic shaping page. Note that default rules
              count against the rule limit of 8.
        type: boolean
      rules:
        description: >-
          An array of traffic shaping rules. Rules are applied in the order that
              they are specified in. An empty list (or null) means no rules. Note that
              you are allowed a maximum of 8 rules.
        type: array
        items:
          $ref: '#/definitions/Rule11'
  Protocol7:
    title: Protocol7
    description: The type of protocol (must be 'tcp', 'udp', or 'any').
    type: string
    enum:
    - tcp
    - udp
    - any
  SwitchProfilePort:
    title: SwitchProfilePort
    type: object
    properties:
      profile:
        description: Profile identifier.
        type: string
      portId:
        description: 'Port identifier of switch port. For modules, the identifier is "SlotNumber_ModuleType_PortNumber" (Ex: “1_8X10G_1”), otherwise it is just the port number (Ex: "8").'
        type: string
    required:
    - profile
    - portId
  PortSchedule:
    title: PortSchedule
    description: >-
      The schedule for switch port scheduling. Schedules are applied to days of the week.
          When it's empty, default schedule with all days of a week are configured.
          Any unspecified day in the schedule is added as a default schedule configuration of the day.
    type: object
    properties:
      monday:
        $ref: '#/definitions/Monday'
      tuesday:
        $ref: '#/definitions/Tuesday'
      wednesday:
        $ref: '#/definitions/Wednesday'
      thursday:
        $ref: '#/definitions/Thursday'
      friday:
        $ref: '#/definitions/Friday'
      saturday:
        $ref: '#/definitions/Saturday'
      sunday:
        $ref: '#/definitions/Sunday'
  Type8:
    title: Type8
    description: The signature type for the custom pie chart item. Can be one of 'host', 'port' or 'ipRange'.
    type: string
    enum:
    - host
    - port
    - ipRange
  DhcpLeaseTime:
    title: DhcpLeaseTime
    description: "The term of DHCP leases if the appliance is running a DHCP server on this VLAN. One of: '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'"
    type: string
    enum:
    - 30 minutes
    - 1 hour
    - 4 hours
    - 12 hours
    - 1 day
    - 1 week
  MinBitrateType:
    title: MinBitrateType
    description: Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.
    type: string
    enum:
    - band
    - ssid
  FiveGhzSettings:
    title: FiveGhzSettings
    description: Settings related to 5Ghz band
    type: object
    properties:
      maxPower:
        description: Sets max power (dBm) of 5Ghz band. Can be integer between 8 and 30. Defaults to 30.
        type: integer
        format: int32
      minPower:
        description: Sets min power (dBm) of 5Ghz band. Can be integer between 8 and 30. Defaults to 8.
        type: integer
        format: int32
      minBitrate:
        description: Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'. Defaults to 12.
        type: integer
        format: int32
      validAutoChannels:
        description: Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'.Defaults to [36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157, 161, 165].
        type: array
        items:
          type: integer
          format: int32
      channelWidth:
        description: Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'. Defaults to auto.
        type: string
      rxsop:
        description: >-
          The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after
              consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will
              reset this to the default.
        type: integer
        format: int32
  MinBitrateType1:
    title: MinBitrateType1
    description: Minimum bitrate can be set to either 'band' or 'ssid'.
    type: string
    enum:
    - band
    - ssid
  OrgAccess:
    title: OrgAccess
    description: The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'
    type: string
    enum:
    - full
    - read-only
    - enterprise
    - none
  updateOrganizationBrandingPoliciesPriorities:
    title: updateOrganizationBrandingPoliciesPriorities
    example:
      brandingPolicyIds:
      - 123
      - 456
      - 789
    type: object
    properties:
      brandingPolicyIds:
        description: A list of branding policy IDs arranged in ascending priority order (IDs later in the array have higher priority).
        type: array
        items:
          type: string
    required:
    - brandingPolicyIds
  updateOrganizationInsightMonitoredMediaServer:
    title: updateOrganizationInsightMonitoredMediaServer
    example:
      name: Sample VoIP Provider
      address: 123.123.123.1
    type: object
    properties:
      name:
        description: The name of the VoIP provider
        type: string
      address:
        description: The IP address (IPv4 only) or hostname of the media server to monitor
        type: string
  updateNetworkSwitchSettingsQosRule:
    title: updateNetworkSwitchSettingsQosRule
    example:
      vlan: 100
      protocol: TCP
      srcPort: 2000
      srcPortRange: 
      dstPort: 
      dstPortRange: 3000-3100
      dscp: 0
    type: object
    properties:
      vlan:
        description: The VLAN of the incoming packet. A null value will match any VLAN.
        type: integer
        format: int32
      protocol:
        $ref: '#/definitions/Protocol9'
      srcPort:
        description: The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
        type: integer
        format: int32
      srcPortRange:
        description: 'The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80'
        type: string
      dstPort:
        description: The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
        type: integer
        format: int32
      dstPortRange:
        description: 'The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80'
        type: string
      dscp:
        description: DSCP tag that should be assigned to incoming packet. Set this to -1 to trust incoming DSCP. Default value is 0.
        type: integer
        format: int32
  updateNetworkSyslogServers:
    title: updateNetworkSyslogServers
    example:
      servers:
      - host: 1.2.3.4
        port: 443
        roles:
        - Wireless event log
        - URLs
    type: object
    properties:
      servers:
        description: A list of the syslog servers for this network
        type: array
        items:
          $ref: '#/definitions/Server'
    required:
    - servers
  CustomPieChartItem:
    title: CustomPieChartItem
    type: object
    properties:
      name:
        description: The name of the custom pie chart item.
        type: string
      type:
        $ref: '#/definitions/Type8'
      value:
        description: >-
          The value of the custom pie chart item. Valid syntax depends on the signature type of the chart item
              (see sample request/response for more details).
        type: string
    required:
    - name
    - type
    - value
  BandSelectionType:
    title: BandSelectionType
    description: Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.
    type: string
    enum:
    - ssid
    - ap
  BandOperationMode1:
    title: BandOperationMode1
    description: Choice between 'dual', '2.4ghz' or '5ghz'.
    type: string
    enum:
    - dual
    - 2.4ghz
    - 5ghz
  Protocol3:
    title: Protocol3
    description: "'tcp' or 'udp'"
    type: string
    enum:
    - tcp
    - udp
  Rule8:
    title: Rule8
    type: object
    properties:
      name:
        description: A descriptive name for the rule
        type: string
      publicIp:
        description: The IP address that will be used to access the internal resource from the WAN
        type: string
      lanIp:
        description: The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
        type: string
      uplink:
        $ref: '#/definitions/Uplink1'
      allowedInbound:
        description: The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource
        type: array
        items:
          $ref: '#/definitions/AllowedInbound'
    required:
    - lanIp
  AuthMode:
    title: AuthMode
    description: The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki' or '8021x-radius')
    type: string
    enum:
    - open
    - psk
    - open-with-radius
    - 8021x-meraki
    - 8021x-radius
  updateNetworkSsidSplashSettings:
    title: updateNetworkSsidSplashSettings
    example:
      splashUrl: https://www.custom_splash_url.com
      useSplashUrl: true
    type: object
    properties:
      splashUrl:
        description: "[optional] The custom splash URL of the click-through splash page. Note that the URL can be configured without necessarily being used. In order to enable the custom URL, see 'useSplashUrl'"
        type: string
      useSplashUrl:
        description: "[optional] Boolean indicating whether the user will be redirected to the custom splash url. A custom splash URL must be set if this is true. Note that depending on your SSID's access control settings, it may not be possible to use the custom splash URL."
        type: boolean
  ReservedIpRange1:
    title: ReservedIpRange1
    type: object
    properties:
      start:
        description: The first IP in the reserved range
        type: string
      end:
        description: The last IP in the reserved range
        type: string
      comment:
        description: A text comment for the reserved range
        type: string
    required:
    - start
    - end
    - comment
  createOrganizationBrandingPolicy:
    title: createOrganizationBrandingPolicy
    example:
      brandingPolicyId: 456
      name: My Branding Policy
      enabled: true
      adminSettings:
        appliesTo: All admins of networks...
        values:
        - N_1234
        - L_5678
      helpSettings:
        helpTab: show
        getHelpSubtab: default or inherit
        communitySubtab: show
        casesSubtab: hide
        dataProtectionRequestsSubtab: default or inherit
        getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
        universalSearchKnowledgeBaseSearch: hide
        ciscoMerakiProductDocumentation: show
        supportContactInfo: show
        newFeaturesSubtab: show
        firewallInfoSubtab: hide
        apiDocsSubtab: default or inherit
        hardwareReplacementsSubtab: hide
        smForums: hide
    type: object
    properties:
      name:
        description: Name of the Dashboard branding policy.
        type: string
      enabled:
        description: Boolean indicating whether this policy is enabled.
        type: boolean
      adminSettings:
        $ref: '#/definitions/AdminSettings'
      helpSettings:
        $ref: '#/definitions/HelpSettings'
    required:
    - name
    - enabled
    - adminSettings
  HelpTab:
    title: HelpTab
    description: >-
      The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
          customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
    type: string
    enum:
    - default or inherit
    - hide
    - show
  createOrganizationSamlRole:
    title: createOrganizationSamlRole
    example: {}
    type: object
    properties:
      role:
        description: The role of the SAML administrator
        type: string
      orgAccess:
        description: The privilege of the SAML administrator on the organization
        type: string
      tags:
        description: The list of tags that the SAML administrator has privleges on
        type: array
        items:
          $ref: '#/definitions/Tag2'
      networks:
        description: The list of networks that the SAML administrator has privileges on
        type: array
        items:
          $ref: '#/definitions/Network2'
  V3AuthMode:
    title: V3AuthMode
    description: The SNMP version 3 authentication mode. Can be either 'MD5' or 'SHA'.
    type: string
    enum:
    - MD5
    - SHA
  Rule14:
    title: Rule14
    type: object
    properties:
      comment:
        description: Description of the rule (optional)
        type: string
      policy:
        $ref: '#/definitions/Policy'
      protocol:
        $ref: '#/definitions/Protocol'
      srcPort:
        description: Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'
        type: string
      srcCidr:
        description: Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (FQDN not supported)
        type: string
      destPort:
        description: Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
        type: string
      destCidr:
        description: Comma-separated list of destination IP address(es) (in IP or CIDR notation) or 'any' (FQDN not supported)
        type: string
      syslogEnabled:
        description: Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)
        type: boolean
    required:
    - policy
    - protocol
    - srcCidr
    - destCidr
  updateNetworkSmAppPolaris:
    title: updateNetworkSmAppPolaris
    example:
      scope: withAny, tag1, tag2
      preventAutoInstall: true
      usesVPP: true
    type: object
    properties:
      scope:
        description: 'optional: The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned'
        type: string
      preventAutoInstall:
        description: 'optional: Whether or not SM should auto-install this app (one of true or false)'
        type: boolean
      usesVPP:
        description: 'optional: Whether or not the app should use VPP by device assignment (one of true or false)'
        type: boolean
  updateNetworkSmDeviceFields:
    title: updateNetworkSmDeviceFields
    example:
      id: 1284392014819
      deviceFields:
        name: Miles's phone
        notes: Here's some info about my device
    type: object
    properties:
      wifiMac:
        description: The wifiMac of the device to be modified.
        type: string
      id:
        description: The id of the device to be modified.
        type: string
      serial:
        description: The serial of the device to be modified.
        type: string
      deviceFields:
        $ref: '#/definitions/DeviceFields'
    required:
    - deviceFields
  updateNetworkStaticRoute:
    title: updateNetworkStaticRoute
    example:
      name: My route
      subnet: 192.168.1.0/24
      fixedIpAssignments:
        22:33:44:55:66:77:
          ip: 1.2.3.4
          name: Some client name
      reservedIpRanges:
      - start: 192.168.1.0
        end: 192.168.1.1
        comment: A reserved IP range
    type: object
    properties:
      name:
        description: The name of the static route
        type: string
      subnet:
        description: The subnet of the static route
        type: string
      gatewayIp:
        description: The gateway IP (next hop) of the static route
        type: string
      enabled:
        description: The enabled state of the static route
        type: boolean
      fixedIpAssignments:
        description: The DHCP fixed IP assignments on the static route. This should be an object that contains mappings from MAC addresses to objects that themselves each contain "ip" and "name" string fields. See the sample request/response for more details.
        type: object
      reservedIpRanges:
        description: The DHCP reserved IP ranges on the static route
        type: array
        items:
          $ref: '#/definitions/ReservedIpRange1'
  updateNetworkSwitchSettings:
    title: updateNetworkSwitchSettings
    example:
      vlan: 100
      useCombinedPower: false
      powerExceptions:
      - serial: Q234-ABCD-0001
        powerType: redundant
      - serial: Q234-ABCD-0002
        powerType: combined
      - serial: Q234-ABCD-0003
        powerType: redundant
      - serial: Q234-ABCD-0004
        powerType: useNetworkSetting
    type: object
    properties:
      vlan:
        description: Management VLAN
        type: integer
        format: int32
      useCombinedPower:
        description: The use Combined Power as the default behavior of secondary power supplies on supported devices.
        type: boolean
      powerExceptions:
        description: Exceptions on a per switch basis to "useCombinedPower"
        type: array
        items:
          $ref: '#/definitions/PowerException'
  createNetworkSwitchStack:
    title: createNetworkSwitchStack
    example:
      name: A cool stack
      serials:
      - QBZY-XWVU-TSRQ
      - QBAB-CDEF-GHIJ
    type: object
    properties:
      name:
        description: The name of the new stack
        type: string
      serials:
        description: An array of switch serials to be added into the new stack
        type: array
        items:
          type: string
    required:
    - name
    - serials
  addNetworkSwitchStack:
    title: addNetworkSwitchStack
    example:
      serial: QBZY-XWVU-TSRQ
    type: object
    properties:
      serial:
        description: The serial of the switch to be added
        type: string
    required:
    - serial
  CommunitySubtab:
    title: CommunitySubtab
    description: The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
    type: string
    enum:
    - default or inherit
    - hide
    - show
  ApiDocsSubtab:
    title: ApiDocsSubtab
    description: >-
      The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
          'default or inherit', 'hide' or 'show'.
    type: string
    enum:
    - default or inherit
    - hide
    - show
  renewOrganizationLicensesSeats:
    title: renewOrganizationLicensesSeats
    example:
      licenseIdToRenew: 123
      unusedLicenseId: 1234
    type: object
    properties:
      licenseIdToRenew:
        description: The ID of the SM license to renew. This license must already be assigned to an SM network
        type: string
      unusedLicenseId:
        description: The SM license to use to renew the seats on 'licenseIdToRenew'. This license must have at least as many seats available as there are seats on 'licenseIdToRenew'
        type: string
    required:
    - licenseIdToRenew
    - unusedLicenseId
  Rule12:
    title: Rule12
    type: object
    properties:
      comment:
        description: Description of the rule (optional).
        type: string
      policy:
        $ref: '#/definitions/Policy7'
      ipVersion:
        $ref: '#/definitions/IpVersion'
      protocol:
        $ref: '#/definitions/Protocol7'
      srcCidr:
        description: Source IP address (in IP or CIDR notation) or 'any'.
        type: string
      srcPort:
        description: Source port. Must be in the range  of 1-65535 or 'any'. Default is 'any'.
        type: string
      dstCidr:
        description: Destination IP address (in IP or CIDR notation) or 'any'.
        type: string
      dstPort:
        description: Destination port. Must be in the range of 1-65535 or 'any'. Default is 'any'.
        type: string
      vlan:
        description: Incoming traffic VLAN. Must be in the range of 1-4095 or 'any'. Default is 'any'.
        type: string
    required:
    - policy
    - protocol
    - srcCidr
    - dstCidr
  updateNetworkUplinkSettings:
    title: updateNetworkUplinkSettings
    example:
      bandwidthLimits:
        wan1:
          limitUp: 1000000
          limitDown: 1000000
        wan2:
          limitUp: 1000000
          limitDown: 1000000
        cellular:
          limitUp: 51200
          limitDown: 51200
    type: object
    properties:
      bandwidthLimits:
        $ref: '#/definitions/BandwidthLimits7'
  BandSelectionType1:
    title: BandSelectionType1
    description: Band selection can be set to either 'ssid' or 'ap'.
    type: string
    enum:
    - ssid
    - ap
  updateNetworkWirelessSettings:
    title: updateNetworkWirelessSettings
    example:
      meshingEnabled: true
      ipv6BridgeEnabled: false
      locationAnalyticsEnabled: false
    type: object
    properties:
      meshingEnabled:
        description: Toggle for enabling or disabling meshing in a network
        type: boolean
      ipv6BridgeEnabled:
        description: 'Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)'
        type: boolean
      locationAnalyticsEnabled:
        description: Toggle for enabling or disabling location analytics for your network
        type: boolean
      ledLightsOn:
        description: Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)
        type: boolean
  moveOrganizationLicenses:
    title: moveOrganizationLicenses
    example:
      destOrganizationId: 2930418
      licenseIds:
      - 123
      - 456
    type: object
    properties:
      destOrganizationId:
        description: The ID of the organization to move the licenses to
        type: string
      licenseIds:
        description: A list of IDs of licenses to move to the new organization
        type: array
        items:
          type: string
    required:
    - destOrganizationId
    - licenseIds
  updateOrganizationLicense:
    title: updateOrganizationLicense
    example: {}
    type: object
    properties:
      deviceSerial:
        description: The serial number of the device to assign this license to. Set this to null to unassign the license. If a different license is already active on the device, this parameter will control queueing/dequeuing this license.
        type: string
  updateNetworkSecurityIntrusionSettings:
    title: updateNetworkSecurityIntrusionSettings
    example:
      mode: prevention
      idsRulesets: balanced
      protectedNetworks:
        useDefault: false
        includedCidr:
        - 10.0.0.0/8
        - 127.0.0.0/8
        - 169.254.0.0/16
        - 172.16.0.0/12
        excludedCidr:
        - 10.0.0.0/8
        - 127.0.0.0/8
    type: object
    properties:
      mode:
        $ref: '#/definitions/Mode'
      idsRulesets:
        $ref: '#/definitions/IdsRulesets'
      protectedNetworks:
        $ref: '#/definitions/ProtectedNetworks'
  createNetworkPiiRequest:
    title: createNetworkPiiRequest
    example:
      type: delete
      datasets:
      - usage
      - events
      mac: 00:77:00:77:00:77
    type: object
    properties:
      type:
        $ref: '#/definitions/Type6'
      datasets:
        description: 'The datasets related to the provided key that should be deleted. Only applies to "delete" requests. The value "all" will be expanded to all datasets applicable to this type. The datasets by applicable to each type are: mac (usage, events, traffic), email (users, loginAttempts), username (users, loginAttempts), bluetoothMac (client, connectivity), smDeviceId (device), smUserId (user)'
        type: array
        items:
          type: string
      username:
        description: The username of a network log in. Only applies to "delete" requests.
        type: string
      email:
        description: The email of a network user account. Only applies to "delete" requests.
        type: string
      mac:
        description: The MAC of a network client device. Applies to both "restrict processing" and "delete" requests.
        type: string
      smDeviceId:
        description: The sm_device_id of a Systems Manager device. The only way to "restrict processing" or "delete" a Systems Manager device. Must include "device" in the dataset for a "delete" request to destroy the device.
        type: string
      smUserId:
        description: The sm_user_id of a Systems Manager user. The only way to "restrict processing" or "delete" a Systems Manager user. Must include "user" in the dataset for a "delete" request to destroy the user.
        type: string
  updateNetworkSecurityMalwareSettings:
    title: updateNetworkSecurityMalwareSettings
    example:
      mode: enabled
      allowedUrls:
      - url: example.org
        comment: allow example.org
      - url: help.com.au
        comment: allow help.com.au
      allowedFiles:
      - sha256: e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503
        comment: allow ZIP file
    type: object
    properties:
      mode:
        $ref: '#/definitions/Mode1'
      allowedUrls:
        description: The urls that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP whitelisting
        type: array
        items:
          $ref: '#/definitions/AllowedUrl'
      allowedFiles:
        description: The sha256 digests of files that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP whitelisting
        type: array
        items:
          $ref: '#/definitions/AllowedFile'
    required:
    - mode
  Mode1:
    title: Mode1
    description: Set mode to 'enabled' to enable malware prevention, otherwise 'disabled'
    type: string
    enum:
    - enabled
    - disabled
  updateNetworkSwitchSettingsDhcpServerPolicy:
    title: updateNetworkSwitchSettingsDhcpServerPolicy
    example:
      defaultPolicy: block
      allowedServers:
      - 00:50:56:00:00:01
      - 00:50:56:00:00:02
    type: object
    properties:
      defaultPolicy:
        $ref: '#/definitions/DefaultPolicy'
      allowedServers:
        description: List the MAC addresses of DHCP servers to permit on the network. Applicable only if defaultPolicy is set to block. An empty array will clear the entries.
        type: array
        items:
          type: string
      blockedServers:
        description: List the MAC addresses of DHCP servers to block on the network. Applicable only if defaultPolicy is set to allow. An empty array will clear the entries.
        type: array
        items:
          type: string
  updateNetworkWirelessRfProfile:
    title: updateNetworkWirelessRfProfile
    example: {}
    type: object
    properties:
      name:
        description: The name of the new profile. Must be unique.
        type: string
      clientBalancingEnabled:
        description: Steers client to best available access point. Can be either true or false.
        type: boolean
      minBitrateType:
        $ref: '#/definitions/MinBitrateType1'
      bandSelectionType:
        $ref: '#/definitions/BandSelectionType1'
      apBandSettings:
        $ref: '#/definitions/ApBandSettings1'
      twoFourGhzSettings:
        $ref: '#/definitions/TwoFourGhzSettings1'
      fiveGhzSettings:
        $ref: '#/definitions/FiveGhzSettings1'
  TwoFourGhzSettings1:
    title: TwoFourGhzSettings1
    description: Settings related to 2.4Ghz band
    type: object
    properties:
      maxPower:
        description: Sets max power (dBm) of 2.4Ghz band. Can be integer between 5 and 30.
        type: integer
        format: int32
      minPower:
        description: Sets min power (dBm) of 2.4Ghz band. Can be integer between 5 and 30.
        type: integer
        format: int32
      minBitrate:
        description: Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
        type: number
        format: double
      validAutoChannels:
        description: Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'.
        type: array
        items:
          type: integer
          format: int32
      axEnabled:
        description: Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering.
        type: boolean
      rxsop:
        description: >-
          The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after
              consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will
              reset this to the default.
        type: integer
        format: int32
  createOrganization:
    title: createOrganization
    example:
      name: My organization
    type: object
    properties:
      name:
        description: The name of the organization
        type: string
    required:
    - name
  createOrganizationAdmin:
    title: createOrganizationAdmin
    example:
      name: Miles Meraki
      email: miles@meraki.com
      orgAccess: none
      tags:
      - tag: west
        access: read-only
    type: object
    properties:
      email:
        description: The email of the dashboard administrator. This attribute can not be updated.
        type: string
      name:
        description: The name of the dashboard administrator
        type: string
      orgAccess:
        $ref: '#/definitions/OrgAccess'
      tags:
        description: The list of tags that the dashboard administrator has privileges on
        type: array
        items:
          $ref: '#/definitions/Tag'
      networks:
        description: The list of networks that the dashboard administrator has privileges on
        type: array
        items:
          $ref: '#/definitions/Network'
    required:
    - email
    - name
    - orgAccess
  Network2:
    title: Network2
    type: object
    properties:
      id:
        description: The network ID
        type: string
      access:
        description: The privilege of the SAML administrator on the network
        type: string
  IpsecPolicies:
    title: IpsecPolicies
    description: Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.
    type: object
    properties:
      ikeCipherAlgo:
        description: "This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'"
        type: array
        items:
          type: string
      ikeAuthAlgo:
        description: "This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha1', 'md5'"
        type: array
        items:
          type: string
      ikeDiffieHellmanGroup:
        description: "This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group5', 'group2', 'group1'"
        type: array
        items:
          type: string
      ikeLifetime:
        description: The lifetime of the Phase 1 SA in seconds.
        type: integer
        format: int32
      childCipherAlgo:
        description: "This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'"
        type: array
        items:
          type: string
      childAuthAlgo:
        description: "This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha1', 'md5'"
        type: array
        items:
          type: string
      childPfsGroup:
        description: "This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled', 'group5', 'group2', 'group1'"
        type: array
        items:
          type: string
      childLifetime:
        description: The lifetime of the Phase 2 SA in seconds.
        type: integer
        format: int32
  Mode:
    title: Mode
    description: Set mode to 'disabled'/'detection'/'prevention' (optional - omitting will leave current config unchanged)
    type: string
    enum:
    - prevention
    - detection
    - disabled
  IdsRulesets:
    title: IdsRulesets
    description: Set the detection ruleset 'connectivity'/'balanced'/'security' (optional - omitting will leave current config unchanged). Default value is 'balanced' if none currently saved
    type: string
    enum:
    - connectivity
    - balanced
    - security
  ProtectedNetworks:
    title: ProtectedNetworks
    description: Set the included/excluded networks from the intrusion engine (optional - omitting will leave current config unchanged). This is available only in 'passthrough' mode
    type: object
    properties:
      useDefault:
        description: 'true/false whether to use special IPv4 addresses: https://tools.ietf.org/html/rfc5735 (required). Default value is true if none currently saved'
        type: boolean
      includedCidr:
        description: list of IP addresses or subnets being protected (required if 'useDefault' is false)
        type: array
        items:
          type: string
      excludedCidr:
        description: list of IP addresses or subnets being excluded from protection (required if 'useDefault' is false)
        type: array
        items:
          type: string
  RadiusFailoverPolicy:
    title: RadiusFailoverPolicy
    description: This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')
    type: string
    enum:
    - Deny access
    - Allow access
  PowerType:
    title: PowerType
    description: Per switch exception (combined, redundant, useNetworkSetting)
    type: string
    enum:
    - combined
    - redundant
    - useNetworkSetting
  Override:
    title: Override
    type: object
    properties:
      switches:
        description: List of switch serials. Applicable only for switch network.
        type: array
        items:
          type: string
      switchProfiles:
        description: List of switch profile IDs. Applicable only for template network.
        type: array
        items:
          type: string
      mtuSize:
        description: MTU size for the switches or switch profiles.
        type: integer
        format: int32
    required:
    - mtuSize
  createNetworkVlan:
    title: createNetworkVlan
    example:
      id: 1234
      name: My VLAN
      subnet: 192.168.1.0/24
      applianceIp: 1.2.3.4
    type: object
    properties:
      id:
        description: The VLAN ID of the new VLAN (must be between 1 and 4094)
        type: string
      name:
        description: The name of the new VLAN
        type: string
      subnet:
        description: The subnet of the VLAN
        type: string
      applianceIp:
        description: The local IP of the appliance on the VLAN
        type: string
    required:
    - id
    - name
    - subnet
    - applianceIp
  TwoFourGhzSettings:
    title: TwoFourGhzSettings
    description: Settings related to 2.4Ghz band
    type: object
    properties:
      maxPower:
        description: Sets max power (dBm) of 2.4Ghz band. Can be integer between 5 and 30. Defaults to 30.
        type: integer
        format: int32
      minPower:
        description: Sets min power (dBm) of 2.4Ghz band. Can be integer between 5 and 30. Defaults to 5.
        type: integer
        format: int32
      minBitrate:
        description: Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'. Defaults to 11.
        type: number
        format: double
      validAutoChannels:
        description: Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'. Defaults to [1, 6, 11].
        type: array
        items:
          type: integer
          format: int32
      axEnabled:
        description: Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering. Defaults to true.
        type: boolean
      rxsop:
        description: >-
          The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after
              consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will
              reset this to the default.
        type: integer
        format: int32
  UniversalSearchKnowledgeBaseSearch:
    title: UniversalSearchKnowledgeBaseSearch
    description: >-
      The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
          whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
    type: string
    enum:
    - default or inherit
    - hide
    - show
  Tag2:
    title: Tag2
    type: object
    properties:
      tag:
        description: The name of the tag
        type: string
      access:
        description: The privilege of the SAML administrator on the tag
        type: string
  WhitelistedRule:
    title: WhitelistedRule
    type: object
    properties:
      ruleId:
        description: A rule identifier of the format meraki:intrusion/snort/GID/<gid>/SID/<sid>. gid and sid can be obtained from either https://www.snort.org/rule-docs or as ruleIds from the security events in /organization/[orgId]/securityEvents
        type: string
      message:
        description: Message is optional and is ignored on a PUT call. It is allowed in order for PUT to be compatible with GET
        type: string
    required:
    - ruleId
  updateOrganizationSnmp:
    title: updateOrganizationSnmp
    example:
      v2cEnabled: false
      v3Enabled: true
      v3AuthMode: SHA
      v3PrivMode: AES128
      peerIps: 123.123.123.1
    type: object
    properties:
      v2cEnabled:
        description: Boolean indicating whether SNMP version 2c is enabled for the organization.
        type: boolean
      v3Enabled:
        description: Boolean indicating whether SNMP version 3 is enabled for the organization.
        type: boolean
      v3AuthMode:
        $ref: '#/definitions/V3AuthMode'
      v3AuthPass:
        description: The SNMP version 3 authentication password. Must be at least 8 characters if specified.
        type: string
      v3PrivMode:
        $ref: '#/definitions/V3PrivMode'
      v3PrivPass:
        description: The SNMP version 3 privacy password. Must be at least 8 characters if specified.
        type: string
      peerIps:
        description: The IPs that are allowed to access the SNMP server. This list should be IPv4 addresses separated by semi-colons (ie. "1.2.3.4;2.3.4.5").
        type: string
  Peer:
    title: Peer
    type: object
    properties:
      name:
        description: The name of the VPN peer
        type: string
      publicIp:
        description: The public IP of the VPN peer
        type: string
      remoteId:
        description: '[optional] The remote ID is used to identify the connecting VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN.'
        type: string
      privateSubnets:
        description: The list of the private subnets of the VPN peer
        type: array
        items:
          type: string
      ipsecPolicies:
        $ref: '#/definitions/IpsecPolicies'
      ipsecPoliciesPreset:
        description: "One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored."
        type: string
      secret:
        description: The shared secret with the VPN peer
        type: string
      networkTags:
        description: A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all'].
        type: array
        items:
          type: string
    required:
    - name
    - publicIp
    - privateSubnets
    - secret
  updateOrganizationVpnFirewallRules:
    title: updateOrganizationVpnFirewallRules
    example:
      rules:
      - comment: Allow TCP traffic to subnet with HTTP servers.
        policy: allow
        protocol: tcp
        destPort: 443
        destCidr: 192.168.1.0/24
        srcPort: Any
        srcCidr: Any
        syslogEnabled: false
    type: object
    properties:
      rules:
        description: An ordered array of the firewall rules (not including the default rule)
        type: array
        items:
          $ref: '#/definitions/Rule14'
      syslogDefaultRule:
        description: Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
        type: boolean
  Type6:
    title: Type6
    description: One of "delete" or "restrict processing"
    type: string
    enum:
    - delete
    - restrict processing
  Uplink3:
    title: Uplink3
    description: The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2' or 'both')
    type: string
    enum:
    - internet1
    - internet2
    - both
  Rule9:
    title: Rule9
    type: object
    properties:
      name:
        description: A descriptive name for the rule
        type: string
      lanIp:
        description: The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
        type: string
      uplink:
        $ref: '#/definitions/Uplink3'
      publicPort:
        description: A port or port ranges that will be forwarded to the host on the LAN
        type: string
      localPort:
        description: A port or port ranges that will receive the forwarded traffic from the WAN
        type: string
      allowedIps:
        description: An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges (or any)
        type: array
        items:
          type: string
      protocol:
        $ref: '#/definitions/Protocol5'
    required:
    - lanIp
    - publicPort
    - localPort
    - allowedIps
    - protocol
  createNetworkSwitchSettingsQosRule:
    title: createNetworkSwitchSettingsQosRule
    example:
      vlan: 100
      protocol: TCP
      srcPort: 2000
      srcPortRange: 
      dstPort: 
      dstPortRange: 3000-3100
      dscp: 0
    type: object
    properties:
      vlan:
        description: The VLAN of the incoming packet. A null value will match any VLAN.
        type: integer
        format: int32
      protocol:
        $ref: '#/definitions/Protocol8'
      srcPort:
        description: The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
        type: integer
        format: int32
      srcPortRange:
        description: 'The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80'
        type: string
      dstPort:
        description: The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
        type: integer
        format: int32
      dstPortRange:
        description: 'The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80'
        type: string
      dscp:
        description: DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0
        type: integer
        format: int32
    required:
    - vlan
  StpBridgePriority:
    title: StpBridgePriority
    type: object
    properties:
      switchProfiles:
        description: List of switch profile IDs
        type: array
        items:
          type: string
      switches:
        description: List of switch serial numbers
        type: array
        items:
          type: string
      stacks:
        description: List of stack IDs
        type: array
        items:
          type: string
      stpPriority:
        description: STP priority for switch, stacks, or switch profiles
        type: integer
        format: int32
    required:
    - stpPriority
  BandwidthLimits7:
    title: BandwidthLimits7
    description: A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)
    type: object
    properties:
      wan1:
        $ref: '#/definitions/Wan11'
      wan2:
        $ref: '#/definitions/Wan21'
      cellular:
        $ref: '#/definitions/Cellular'
  DhcpOption:
    title: DhcpOption
    type: object
    properties:
      code:
        description: The code for the DHCP option. This should be an integer between 2 and 254.
        type: string
      type:
        $ref: '#/definitions/Type10'
      value:
        description: The value for the DHCP option
        type: string
    required:
    - code
    - type
    - value
  ApBandSettings:
    title: ApBandSettings
    description: Settings that will be enabled if selectionType is set to 'ap'.
    type: object
    properties:
      bandOperationMode:
        $ref: '#/definitions/BandOperationMode'
      bandSteeringEnabled:
        description: Steers client to most open band. Can be either true or false. Defaults to true.
        type: boolean
  updateOrganizationAdmin:
    title: updateOrganizationAdmin
    example:
      name: Miles Meraki
      email: miles@meraki.com
      orgAccess: none
      tags:
      - tag: west
        access: read-only
    type: object
    properties:
      name:
        description: The name of the dashboard administrator
        type: string
      orgAccess:
        $ref: '#/definitions/OrgAccess'
      tags:
        description: The list of tags that the dashboard administrator has privileges on
        type: array
        items:
          $ref: '#/definitions/Tag'
      networks:
        description: The list of networks that the dashboard administrator has privileges on
        type: array
        items:
          $ref: '#/definitions/Network'
  updateNetworkSsid:
    title: updateNetworkSsid
    example:
      name: My SSID
      enabled: true
    type: object
    properties:
      name:
        description: The name of the SSID
        type: string
      enabled:
        description: Whether or not the SSID is enabled
        type: boolean
      authMode:
        $ref: '#/definitions/AuthMode'
      enterpriseAdminAccess:
        $ref: '#/definitions/EnterpriseAdminAccess'
      encryptionMode:
        $ref: '#/definitions/EncryptionMode'
      psk:
        description: The passkey for the SSID. This param is only valid if the authMode is 'psk'
        type: string
      wpaEncryptionMode:
        $ref: '#/definitions/WpaEncryptionMode'
      splashPage:
        $ref: '#/definitions/SplashPage'
      radiusServers:
        description: The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'
        type: array
        items:
          $ref: '#/definitions/RadiusServer'
      radiusCoaEnabled:
        description: If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server.
        type: boolean
      radiusFailoverPolicy:
        $ref: '#/definitions/RadiusFailoverPolicy'
      radiusLoadBalancingPolicy:
        $ref: '#/definitions/RadiusLoadBalancingPolicy'
      radiusAccountingEnabled:
        description: Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'
        type: boolean
      radiusAccountingServers:
        description: The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'
        type: array
        items:
          $ref: '#/definitions/RadiusAccountingServer'
      radiusAttributeForGroupPolicies:
        description: Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message
        type: string
      ipAssignmentMode:
        description: The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')
        type: string
      useVlanTagging:
        description: Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'
        type: boolean
      concentratorNetworkId:
        description: The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'.
        type: string
      vlanId:
        description: The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'
        type: integer
        format: int32
      defaultVlanId:
        description: The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'
        type: integer
        format: int32
      apTagsAndVlanIds:
        description: The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'
        type: array
        items:
          $ref: '#/definitions/ApTagsAndVlanId'
      walledGardenEnabled:
        description: Allow access to a configurable list of IP ranges, which users may access prior to sign-on.
        type: boolean
      walledGardenRanges:
        description: Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden.
        type: string
      radiusOverride:
        description: If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'.
        type: boolean
      minBitrate:
        description: The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')
        type: number
        format: double
      bandSelection:
        description: The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')
        type: string
      perClientBandwidthLimitUp:
        description: The upload bandwidth limit in Kbps. (0 represents no limit.)
        type: integer
        format: int32
      perClientBandwidthLimitDown:
        description: The download bandwidth limit in Kbps. (0 represents no limit.)
        type: integer
        format: int32
      lanIsolationEnabled:
        description: Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'.
        type: boolean
  Protocol9:
    title: Protocol9
    description: The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY".
    type: string
    enum:
    - ANY
    - TCP
    - UDP
  Server:
    title: Server
    type: object
    properties:
      host:
        description: The IP address of the syslog server
        type: string
      port:
        description: The port of the syslog server
        type: integer
        format: int32
      roles:
        description: "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'"
        type: array
        items:
          type: string
    required:
    - host
    - port
    - roles
  Type10:
    title: Type10
    description: "The type for the DHCP option. One of: 'text', 'ip', 'hex' or 'integer'"
    type: string
    enum:
    - text
    - ip
    - hex
    - integer
  updateOrganizationActionBatch:
    title: updateOrganizationActionBatch
    example:
      confirmed: true
      synchronous: false
    type: object
    properties:
      confirmed:
        description: A boolean representing whether or not the batch has been confirmed. This property cannot be unset once it is true.
        type: boolean
      synchronous:
        description: Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch.
        type: boolean
  AdminSettings:
    title: AdminSettings
    description: Settings for describing which kinds of admins this policy applies to.
    type: object
    properties:
      appliesTo:
        $ref: '#/definitions/AppliesTo'
      values:
        description: >-
          If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
              entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
              networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
              specify an array of tag names.
        type: array
        items:
          type: string
  claimOrganization:
    title: claimOrganization
    example:
      orders:
      - 4CXXXXXXX
      serials:
      - Q234-ABCD-5678
      licenses:
      - key: Z2XXXXXXXXXX
        mode: addDevices
    type: object
    properties:
      orders:
        description: The numbers of the orders that should be claimed
        type: array
        items:
          type: string
      serials:
        description: The serials of the devices that should be claimed
        type: array
        items:
          type: string
      licenses:
        description: The licenses that should be claimed
        type: array
        items:
          $ref: '#/definitions/License'
  Protocol5:
    title: Protocol5
    description: TCP or UDP
    type: string
    enum:
    - tcp
    - udp
  AllowedInbound:
    title: AllowedInbound
    type: object
    properties:
      protocol:
        $ref: '#/definitions/Protocol4'
      destinationPorts:
        description: An array of ports or port ranges that will be forwarded to the host on the LAN
        type: array
        items:
          type: string
      allowedIps:
        description: An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges, or 'any'
        type: array
        items:
          type: string
  AllowedFile:
    title: AllowedFile
    type: object
    properties:
      sha256:
        description: The file sha256 hash to whitelist
        type: string
      comment:
        description: Comment about the whitelisted entity
        type: string
    required:
    - sha256
    - comment
  wipeNetworkSmDevice:
    title: wipeNetworkSmDevice
    example:
      id: 1284392014819
    type: object
    properties:
      wifiMac:
        description: The wifiMac of the device to be wiped.
        type: string
      id:
        description: The id of the device to be wiped.
        type: string
      serial:
        description: The serial of the device to be wiped.
        type: string
      pin:
        description: The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices.
        type: integer
        format: int32
  Access1:
    title: Access1
    description: The type of SNMP access. Can be one of 'none' (disabled), 'community' (V1/V2c), or 'users' (V3).
    type: string
    enum:
    - none
    - community
    - users
  WpaEncryptionMode:
    title: WpaEncryptionMode
    description: The types of WPA encryption. ('WPA1 only', 'WPA1 and WPA2', 'WPA2 only', 'WPA3 Transition Mode' or 'WPA3 only')
    type: string
    enum:
    - WPA1 only
    - WPA1 and WPA2
    - WPA2 only
    - WPA3 Transition Mode
    - WPA3 only
  createNetworkStaticRoute:
    title: createNetworkStaticRoute
    example:
      name: My route
      subnet: 192.168.1.0/24
      gatewayIp: 1.2.3.5
    type: object
    properties:
      name:
        description: The name of the new static route
        type: string
      subnet:
        description: The subnet of the static route
        type: string
      gatewayIp:
        description: The gateway IP (next hop) of the static route
        type: string
    required:
    - name
    - subnet
    - gatewayIp
  PowerException:
    title: PowerException
    type: object
    properties:
      serial:
        description: Serial number of the switch
        type: string
      powerType:
        $ref: '#/definitions/PowerType'
    required:
    - serial
    - powerType
  updateNetworkSwitchSettingsMtu:
    title: updateNetworkSwitchSettingsMtu
    example:
      defaultMtuSize: 9578
      overrides:
      - switches:
        - Q234-ABCD-0001
        - Q234-ABCD-0002
        - Q234-ABCD-0003
        mtuSize: 1500
      - switchProfiles:
        - 1284392014819
        - 2983092129865
        mtuSize: 1600
    type: object
    properties:
      defaultMtuSize:
        description: MTU size for the entire network. Default value is 9578.
        type: integer
        format: int32
      overrides:
        description: Override MTU size for individual switches or switch profiles. An empty array will clear overrides.
        type: array
        items:
          $ref: '#/definitions/Override'
  removeNetworkSwitchStack:
    title: removeNetworkSwitchStack
    example:
      serial: QBZY-XWVU-TSRQ
    type: object
    properties:
      serial:
        description: The serial of the switch to be removed
        type: string
    required:
    - serial
  Cellular:
    title: Cellular
    description: The bandwidth settings for the 'cellular' uplink
    type: object
    properties:
      limitUp:
        description: The maximum upload limit (integer, in Kbps). null indicates no limit
        type: integer
        format: int32
      limitDown:
        description: The maximum download limit (integer, in Kbps). null indicates no limit
        type: integer
        format: int32
  createNetworkWirelessRfProfile:
    title: createNetworkWirelessRfProfile
    example: {}
    type: object
    properties:
      name:
        description: The name of the new profile. Must be unique. This param is required on creation.
        type: string
      clientBalancingEnabled:
        description: Steers client to best available access point. Can be either true or false. Defaults to true.
        type: boolean
      minBitrateType:
        $ref: '#/definitions/MinBitrateType'
      bandSelectionType:
        $ref: '#/definitions/BandSelectionType'
      apBandSettings:
        $ref: '#/definitions/ApBandSettings'
      twoFourGhzSettings:
        $ref: '#/definitions/TwoFourGhzSettings'
      fiveGhzSettings:
        $ref: '#/definitions/FiveGhzSettings'
    required:
    - name
    - bandSelectionType
  lockNetworkSmDevices:
    title: lockNetworkSmDevices
    example:
      ids: '"1284392014819"'
    type: object
    properties:
      wifiMacs:
        description: The wifiMacs of the devices to be locked.
        type: string
      ids:
        description: The ids of the devices to be locked.
        type: string
      serials:
        description: The serials of the devices to be locked.
        type: string
      scope:
        description: The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be wiped.
        type: string
      pin:
        description: The pin number for locking macOS devices (a six digit number). Required only for macOS devices.
        type: integer
        format: int32
  HardwareReplacementsSubtab:
    title: HardwareReplacementsSubtab
    description: >-
      The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
          'default or inherit', 'hide' or 'show'.
    type: string
    enum:
    - default or inherit
    - hide
    - show
  HelpSettings1:
    title: HelpSettings1
    description: >-
      Settings for describing the modifications to various Help page features. Each property in this object accepts one of
          'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
          the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
          Dashboard; see the documentation for each property to see the allowed values.
    type: object
    properties:
      helpTab:
        $ref: '#/definitions/HelpTab'
      getHelpSubtab:
        $ref: '#/definitions/GetHelpSubtab'
      communitySubtab:
        $ref: '#/definitions/CommunitySubtab'
      casesSubtab:
        $ref: '#/definitions/CasesSubtab'
      dataProtectionRequestsSubtab:
        $ref: '#/definitions/DataProtectionRequestsSubtab'
      getHelpSubtabKnowledgeBaseSearch:
        description: The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
        type: string
      universalSearchKnowledgeBaseSearch:
        $ref: '#/definitions/UniversalSearchKnowledgeBaseSearch'
      ciscoMerakiProductDocumentation:
        description: The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
        type: string
      supportContactInfo:
        description: The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
        type: string
      newFeaturesSubtab:
        $ref: '#/definitions/NewFeaturesSubtab'
      firewallInfoSubtab:
        $ref: '#/definitions/FirewallInfoSubtab'
      apiDocsSubtab:
        $ref: '#/definitions/ApiDocsSubtab'
      hardwareReplacementsSubtab:
        $ref: '#/definitions/HardwareReplacementsSubtab'
      smForums:
        $ref: '#/definitions/SmForums'
  Mode4:
    title: Mode4
    description: Either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. This parameter is legacy and only applies to coterm licensing; it should not be specified when claiming per-device licenses. Please see <a target='_blank' href='https://documentation.meraki.com/zGeneral_Administration/Licensing/Adding_an_Enterprise_license_to_an_existing_Dashboard_account'>this article</a> for more information.
    type: string
    enum:
    - addDevices
    - renew
  moveOrganizationLicensesSeats:
    title: moveOrganizationLicensesSeats
    example:
      destOrganizationId: 2930418
      licenseId: 1234
      seatCount: 20
    type: object
    properties:
      destOrganizationId:
        description: The ID of the organization to move the SM seats to
        type: string
      licenseId:
        description: The ID of the SM license to move the seats from
        type: string
      seatCount:
        description: The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license
        type: integer
        format: int32
    required:
    - destOrganizationId
    - licenseId
    - seatCount
  updateOrganizationSecurityIntrusionSettings:
    title: updateOrganizationSecurityIntrusionSettings
    example:
      whitelistedRules:
      - ruleId: meraki:intrusion/snort/GID/01/SID/688
        message: SQL sa login failed
      - ruleId: meraki:intrusion/snort/GID/01/SID/5805
        message: MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines
    type: object
    properties:
      whitelistedRules:
        description: Sets a list of specific SNORT® signatures to whitelist
        type: array
        items:
          $ref: '#/definitions/WhitelistedRule'
    required:
    - whitelistedRules
  checkinNetworkSmDevices:
    title: checkinNetworkSmDevices
    example:
      ids: '"1284392014819"'
    type: object
    properties:
      wifiMacs:
        description: The wifiMacs of the devices to be checked-in.
        type: string
      ids:
        description: The ids of the devices to be checked-in.
        type: string
      serials:
        description: The serials of the devices to be checked-in.
        type: string
      scope:
        description: The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in.
        type: string
  EncryptionMode:
    title: EncryptionMode
    description: The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'
    type: string
    enum:
    - wep
    - wpa
  RadiusAccountingServer:
    title: RadiusAccountingServer
    type: object
    properties:
      host:
        description: IP address to which the APs will send RADIUS accounting messages
        type: string
      port:
        description: Port on the RADIUS server that is listening for accounting messages
        type: integer
        format: int32
      secret:
        description: Shared key used to authenticate messages between the APs and RADIUS server
        type: string
    required:
    - host
    - secret
  Protocol8:
    title: Protocol8
    description: The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY"
    type: string
    enum:
    - ANY
    - TCP
    - UDP
  updateNetworkSwitchSettingsQosRulesOrder:
    title: updateNetworkSwitchSettingsQosRulesOrder
    example:
      ruleIds:
      - 1284392014819
      - 2983092129865
    type: object
    properties:
      ruleIds:
        description: A list of quality of service rule IDs arranged in order in which they should be processed by the switch.
        type: array
        items:
          type: string
    required:
    - ruleIds
  updateNetworkSwitchSettingsStormControl:
    title: updateNetworkSwitchSettingsStormControl
    example:
      broadcastThreshold: 30
      multicastThreshold: 30
      unknownUnicastThreshold: 30
    type: object
    properties:
      broadcastThreshold:
        description: Percentage (1 to 99) of total available port bandwidth for broadcast traffic type. Default value 100 percent rate is to clear the configuration.
        type: integer
        format: int32
      multicastThreshold:
        description: Percentage (1 to 99) of total available port bandwidth for multicast traffic type. Default value 100 percent rate is to clear the configuration.
        type: integer
        format: int32
      unknownUnicastThreshold:
        description: Percentage (1 to 99) of total available port bandwidth for unknown unicast (dlf-destination lookup failure) traffic type. Default value 100 percent rate is to clear the configuration.
        type: integer
        format: int32
  Wan11:
    title: Wan11
    description: The bandwidth settings for the 'wan1' uplink
    type: object
    properties:
      limitUp:
        description: The maximum upload limit (integer, in Kbps). null indicates no limit
        type: integer
        format: int32
      limitDown:
        description: The maximum download limit (integer, in Kbps). null indicates no limit
        type: integer
        format: int32
  Wan21:
    title: Wan21
    description: The bandwidth settings for the 'wan2' uplink
    type: object
    properties:
      limitUp:
        description: The maximum upload limit (integer, in Kbps). null indicates no limit
        type: integer
        format: int32
      limitDown:
        description: The maximum download limit (integer, in Kbps). null indicates no limit
        type: integer
        format: int32
  updateNetworkVlansEnabledState:
    title: updateNetworkVlansEnabledState
    example:
      enabled: true
    type: object
    properties:
      enabled:
        description: Boolean indicating whether to enable (true) or disable (false) VLANs for the network
        type: boolean
    required:
    - enabled
  createOrganizationActionBatch:
    title: createOrganizationActionBatch
    example:
      confirmed: true
      synchronous: false
      actions:
      - resource: /devices/QXXX-XXXX-XXXX/switchPorts/3
        operation: update
        body:
          enabled: false
    type: object
    properties:
      confirmed:
        description: Set to true for immediate execution. Set to false if the action should be previewed before executing. This property cannot be unset once it is true. Defaults to false.
        type: boolean
      synchronous:
        description: Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch. Defaults to false.
        type: boolean
      actions:
        description: A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)
        type: array
        items:
          $ref: '#/definitions/Action'
    required:
    - actions
  AppliesTo:
    title: AppliesTo
    description: Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.
    type: string
    enum:
    - All organization admins
    - All enterprise admins
    - All network admins
    - All admins of networks...
    - All admins of networks tagged...
    - Specific admins...
    - All admins
    - All SAML admins
  GetHelpSubtab:
    title: GetHelpSubtab
    description: >-
      The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
          that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
          and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
    type: string
    enum:
    - default or inherit
    - hide
    - show
  SmForums:
    title: SmForums
    description: >-
      The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
          organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
    type: string
    enum:
    - default or inherit
    - hide
    - show
  assignOrganizationLicensesSeats:
    title: assignOrganizationLicensesSeats
    example:
      licenseId: 1234
      networkId: N_24329156
      seatCount: 20
    type: object
    properties:
      licenseId:
        description: The ID of the SM license to assign seats from
        type: string
      networkId:
        description: The ID of the SM network to assign the seats to
        type: string
      seatCount:
        description: The number of seats to assign to the SM network. Must be less than or equal to the total number of seats of the license
        type: integer
        format: int32
    required:
    - licenseId
    - networkId
    - seatCount
  updateOrganizationThirdPartyVPNPeers:
    title: updateOrganizationThirdPartyVPNPeers
    example:
      peers:
      - name: My peer 1
        publicIp: 123.123.123.1
        privateSubnets:
        - 192.168.1.0/24
        - 192.168.128.0/24
        secret: asdf1234
        ipsecPolicies:
          ikeCipherAlgo:
          - tripledes
          ikeAuthAlgo:
          - sha1
          ikeDiffieHellmanGroup:
          - group2
          ikeLifetime: 28800
          childCipherAlgo:
          - aes128
          childAuthAlgo:
          - sha1
          childPfsGroup:
          - disabled
          childLifetime: 28800
      - name: My peer 2
        publicIp: 123.123.123.2
        remoteId: miles@meraki.com
        privateSubnets:
        - 192.168.2.0/24
        - 192.168.129.0/24
        secret: asdf56785678567856785678
        ipsecPoliciesPreset: default
    type: object
    properties:
      peers:
        description: The list of VPN peers
        type: array
        items:
          $ref: '#/definitions/Peer'
    required:
    - peers
  AllowedUrl:
    title: AllowedUrl
    type: object
    properties:
      url:
        description: The url to whitelist
        type: string
      comment:
        description: Comment about the whitelisted entity
        type: string
    required:
    - url
    - comment
  Hub:
    title: Hub
    type: object
    properties:
      hubId:
        description: The network ID of the hub.
        type: string
      useDefaultRoute:
        description: Only valid in 'spoke' mode. Indicates whether default route traffic should be sent to this hub.
        type: boolean
    required:
    - hubId
  Subnet:
    title: Subnet
    type: object
    properties:
      localSubnet:
        description: The CIDR notation subnet used within the VPN
        type: string
      useVpn:
        description: Indicates the presence of the subnet in the VPN
        type: boolean
    required:
    - localSubnet
  createNetworkSmTargetGroup:
    title: createNetworkSmTargetGroup
    example:
      name: My target group
      scope: none
      tags: '[]'
      type: devices
    type: object
    properties:
      name:
        description: The name of this target group
        type: string
      scope:
        description: The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.
        type: string
  ssidNumber:
    title: ssidNumber
    example: 0
    type: integer
    format: int32
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
  Rule11:
    title: Rule11
    type: object
    properties:
      definitions:
        description: A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
        type: array
        items:
          $ref: '#/definitions/Definition'
      perClientBandwidthLimits:
        $ref: '#/definitions/PerClientBandwidthLimits'
      dscpTagValue:
        description: >-
          The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
              For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
        type: integer
        format: int32
      pcpTagValue:
        description: >-
          The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).
              null means 'Do not set PCP tag'.
        type: integer
        format: int32
    required:
    - definitions
  DefaultPolicy:
    title: DefaultPolicy
    description: "'allow' or 'block' new DHCP servers. Default value is 'allow'."
    type: string
    enum:
    - allow
    - block
  updateNetworkSwitchSettingsStp:
    title: updateNetworkSwitchSettingsStp
    example:
      rstpEnabled: true
      stpBridgePriority:
      - switches:
        - Q234-ABCD-0001
        - Q234-ABCD-0002
        - Q234-ABCD-0003
        stpPriority: 4096
      - stacks:
        - 789102
        - 123456
        - 129102
        stpPriority: 28672
    type: object
    properties:
      rstpEnabled:
        description: The spanning tree protocol status in network
        type: boolean
      stpBridgePriority:
        description: STP bridge priority for switches/stacks or switch profiles. An empty array will clear the STP bridge priority settings.
        type: array
        items:
          $ref: '#/definitions/StpBridgePriority'
  ApBandSettings1:
    title: ApBandSettings1
    description: Settings that will be enabled if selectionType is set to 'ap'.
    type: object
    properties:
      bandOperationMode:
        $ref: '#/definitions/BandOperationMode1'
      bandSteeringEnabled:
        description: Steers client to most open band. Can be either true or false.
        type: boolean
  FiveGhzSettings1:
    title: FiveGhzSettings1
    description: Settings related to 5Ghz band
    type: object
    properties:
      maxPower:
        description: Sets max power (dBm) of 5Ghz band. Can be integer between 8 and 30.
        type: integer
        format: int32
      minPower:
        description: Sets min power (dBm) of 5Ghz band. Can be integer between 8 and 30.
        type: integer
        format: int32
      minBitrate:
        description: Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'.
        type: integer
        format: int32
      validAutoChannels:
        description: Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'.
        type: array
        items:
          type: integer
          format: int32
      channelWidth:
        description: Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'.
        type: string
      rxsop:
        description: >-
          The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after
              consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will
              reset this to the default.
        type: integer
        format: int32
  updateOrganization:
    title: updateOrganization
    example:
      name: My organization
    type: object
    properties:
      name:
        description: The name of the organization
        type: string
  License:
    title: License
    type: object
    properties:
      key:
        description: The key of the license
        type: string
      mode:
        $ref: '#/definitions/Mode4'
    required:
    - key
  state:
    title: state
    type: string
    enum:
    - active
    - expired
    - expiring
    - unused
    - unusedActive
    - recentlyQueued
  createNetworkSmAppPolaris:
    title: createNetworkSmAppPolaris
    example:
      scope: withAny, tag1, tag2
      manifestUrl: https://website.com/assets/manifest.plist
      preventAutoInstall: true
      usesVPP: true
    type: object
    properties:
      scope:
        description: The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned
        type: string
      manifestUrl:
        description: The manifest URL of the Polaris app (one of manifestUrl and bundleId must be provided)
        type: string
      bundleId:
        description: The bundleId of the Polaris app (one of manifestUrl and bundleId must be provided)
        type: string
      preventAutoInstall:
        description: (optional) Whether or not SM should auto-install this app (one of true or false). False by default.
        type: boolean
      usesVPP:
        description: (optional) Whether or not the app should use VPP by device assignment (one of true or false). False by default.
        type: boolean
    required:
    - scope
  updateNetworkSmDevicesTags:
    title: updateNetworkSmDevicesTags
    example:
      scope: withAny, old_tag
      updateAction: add
      tags: tag1,tag2
    type: object
    properties:
      wifiMacs:
        description: The wifiMacs of the devices to be modified.
        type: string
      ids:
        description: The ids of the devices to be modified.
        type: string
      serials:
        description: The serials of the devices to be modified.
        type: string
      scope:
        description: The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be modified.
        type: string
      tags:
        description: The tags to be added, deleted, or updated.
        type: string
      updateAction:
        description: One of add, delete, or update. Only devices that have been modified will be returned.
        type: string
    required:
    - tags
    - updateAction
  User:
    title: User
    type: object
    properties:
      username:
        description: The username for the SNMP user. Required.
        type: string
      passphrase:
        description: The passphrase for the SNMP user. Required.
        type: string
    required:
    - username
    - passphrase
  SplashPage:
    title: SplashPage
    description: The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth' or 'Sponsored guest'). This attribute is not supported for template children.
    type: string
    enum:
    - None
    - Click-through splash page
    - Billing
    - Password-protected with Meraki RADIUS
    - Password-protected with custom RADIUS
    - Password-protected with Active Directory
    - Password-protected with LDAP
    - SMS authentication
    - Systems Manager Sentry
    - Facebook Wi-Fi
    - Google OAuth
    - Sponsored guest
  updateNetworkSwitchPortSchedule:
    title: updateNetworkSwitchPortSchedule
    example:
      name: Weekdays schedule
      portSchedule:
        monday:
          active: true
          from: 9:00
          to: 17:00
        tuesday:
          active: true
          from: 9:00
          to: 17:00
        wednesday:
          active: true
          from: 9:00
          to: 17:00
        thursday:
          active: true
          from: 9:00
          to: 17:00
        friday:
          active: true
          from: 9:00
          to: 17:00
        saturday:
          active: false
          from: 0:00
          to: 24:00
        sunday:
          active: false
          from: 0:00
          to: 24:00
    type: object
    properties:
      name:
        description: The name for your port schedule.
        type: string
      portSchedule:
        $ref: '#/definitions/PortSchedule'
  updateNetworkSwitchSettingsMulticast:
    title: updateNetworkSwitchSettingsMulticast
    example:
      defaultSettings:
        igmpSnoopingEnabled: true
        floodUnknownMulticastTrafficEnabled: true
      overrides:
      - switches:
        - Q234-ABCD-0001
        - Q234-ABCD-0002
        - Q234-ABCD-0003
        igmpSnoopingEnabled: true
        floodUnknownMulticastTrafficEnabled: true
      - stacks:
        - 789102
        - 123456
        - 129102
        igmpSnoopingEnabled: true
        floodUnknownMulticastTrafficEnabled: true
    type: object
    properties:
      defaultSettings:
        $ref: '#/definitions/DefaultSettings'
      overrides:
        description: Array of paired switches/stacks/profiles and corresponding multicast settings. An empty array will clear the multicast settings.
        type: array
        items:
          $ref: '#/definitions/Override1'
  Override1:
    title: Override1
    type: object
    properties:
      switchProfiles:
        description: List of switch profiles ids for template network
        type: array
        items:
          type: string
      switches:
        description: List of switch serials for non-template network
        type: array
        items:
          type: string
      stacks:
        description: List of switch stack ids for non-template network
        type: array
        items:
          type: string
      igmpSnoopingEnabled:
        description: IGMP snooping setting for switches, switch stacks or switch profiles
        type: boolean
      floodUnknownMulticastTrafficEnabled:
        description: Flood unknown multicast traffic setting for switches, switch stacks or switch profiles
        type: boolean
    required:
    - igmpSnoopingEnabled
    - floodUnknownMulticastTrafficEnabled
  updateNetworkTrafficAnalysisSettings:
    title: updateNetworkTrafficAnalysisSettings
    example:
      mode: detailed
      customPieChartItems:
      - name: Item from hostname
        type: host
        value: example.com
      - name: Item from port
        type: port
        value: 440
      - name: Item from IP
        type: ipRange
        value: 192.1.0.0
      - name: Item from IP range (CIDR)
        type: ipRange
        value: 192.2.0.0/16
      - name: Item from IP range with port
        type: ipRange
        value: 192.3.0.0/16:80
    type: object
    properties:
      mode:
        $ref: '#/definitions/Mode3'
      customPieChartItems:
        description: The list of items that make up the custom pie chart for traffic reporting.
        type: array
        items:
          $ref: '#/definitions/CustomPieChartItem'
  updateNetworkTrafficShaping:
    title: updateNetworkTrafficShaping
    example:
      defaultRulesEnabled: true
      rules:
      - definitions:
        - type: host
          value: google.com
        - type: port
          value: 9090
        - type: ipRange
          value: 192.1.0.0
        - type: ipRange
          value: 192.1.0.0/16
        - type: ipRange
          value: 10.1.0.0/16:80
        - type: localNet
          value: 192.168.0.0/16
        - type: applicationCategory
          value:
            id: meraki:layer7/category/2
            name: Blogging
        - type: application
          value:
            id: meraki:layer7/application/133
            name: Battle.net
        perClientBandwidthLimits:
          settings: custom
          bandwidthLimits:
            limitUp: 1000000
            limitDown: 1000000
        dscpTagValue: 
        priority: normal
    type: object
    properties:
      defaultRulesEnabled:
        description: >-
          Whether default traffic shaping rules are enabled (true) or disabled (false).
              There are 4 default rules, which can
              be seen on your network's traffic shaping page. Note that default rules
              count against the rule limit of 8.
        type: boolean
      rules:
        description: >-
          An array of traffic shaping rules. Rules are applied in the order that
              they are specified in. An empty list (or null) means no rules. Note that
              you are allowed a maximum of 8 rules.
        type: array
        items:
          $ref: '#/definitions/Rule13'
  Rule13:
    title: Rule13
    type: object
    properties:
      definitions:
        description: A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
        type: array
        items:
          $ref: '#/definitions/Definition'
      perClientBandwidthLimits:
        $ref: '#/definitions/PerClientBandwidthLimits'
      dscpTagValue:
        description: >-
          The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
              For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
        type: integer
        format: int32
      priority:
        description: >-
          A string, indicating the priority level for packets bound to your rule.
              Can be 'low', 'normal' or 'high'.
        type: string
    required:
    - definitions
  DhcpHandling:
    title: DhcpHandling
    description: "The appliance's handling of DHCP requests on this VLAN. One of: 'Run a DHCP server', 'Relay DHCP to another server' or 'Do not respond to DHCP requests'"
    type: string
    enum:
    - Run a DHCP server
    - Relay DHCP to another server
    - Do not respond to DHCP requests
  updateNetworkWarmSpareSettings:
    title: updateNetworkWarmSpareSettings
    example:
      enabled: true
      spareSerial: Q234-ABCD-5678
      uplinkMode: virtual
      virtualIp1: 1.2.3.4
      virtualIp2: 1.2.3.4
    type: object
    properties:
      enabled:
        description: Enable warm spare
        type: boolean
      spareSerial:
        description: Serial number of the warm spare appliance
        type: string
      uplinkMode:
        description: Uplink mode, either virtual or public
        type: string
      virtualIp1:
        description: The WAN 1 shared IP
        type: string
      virtualIp2:
        description: The WAN 2 shared IP
        type: string
    required:
    - enabled
  Action:
    title: Action
    type: object
    properties:
      resource:
        description: Unique identifier for the resource to be acted on
        type: string
      operation:
        description: The operation to be used
        type: string
      body:
        description: The body of the action
        example: {}
        type: string
        default: '{}'
    required:
    - resource
    - operation
  HelpSettings:
    title: HelpSettings
    description: >-
      Settings for describing the modifications to various Help page features. Each property in this object accepts one of
          'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
          the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
          Dashboard; see the documentation for each property to see the allowed values.
       Each property defaults to 'default or inherit' when not provided.
    type: object
    properties:
      helpTab:
        $ref: '#/definitions/HelpTab'
      getHelpSubtab:
        $ref: '#/definitions/GetHelpSubtab'
      communitySubtab:
        $ref: '#/definitions/CommunitySubtab'
      casesSubtab:
        $ref: '#/definitions/CasesSubtab'
      dataProtectionRequestsSubtab:
        $ref: '#/definitions/DataProtectionRequestsSubtab'
      getHelpSubtabKnowledgeBaseSearch:
        description: The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
        type: string
      universalSearchKnowledgeBaseSearch:
        $ref: '#/definitions/UniversalSearchKnowledgeBaseSearch'
      ciscoMerakiProductDocumentation:
        description: The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
        type: string
      supportContactInfo:
        description: The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
        type: string
      newFeaturesSubtab:
        $ref: '#/definitions/NewFeaturesSubtab'
      firewallInfoSubtab:
        $ref: '#/definitions/FirewallInfoSubtab'
      apiDocsSubtab:
        $ref: '#/definitions/ApiDocsSubtab'
      hardwareReplacementsSubtab:
        $ref: '#/definitions/HardwareReplacementsSubtab'
      smForums:
        $ref: '#/definitions/SmForums'
  createOrganizationInsightMonitoredMediaServer:
    title: createOrganizationInsightMonitoredMediaServer
    example:
      name: Sample VoIP Provider
      address: 123.123.123.1
    type: object
    properties:
      name:
        description: The name of the VoIP provider
        type: string
      address:
        description: The IP address (IPv4 only) or hostname of the media server to monitor
        type: string
    required:
    - name
    - address
  updateOrganizationSamlRole:
    title: updateOrganizationSamlRole
    example: {}
    type: object
    properties:
      role:
        description: The role of the SAML administrator
        type: string
      orgAccess:
        description: The privilege of the SAML administrator on the organization
        type: string
      tags:
        description: The list of tags that the SAML administrator has privleges on
        type: array
        items:
          $ref: '#/definitions/Tag2'
      networks:
        description: The list of networks that the SAML administrator has privileges on
        type: array
        items:
          $ref: '#/definitions/Network2'
  updateNetworkOneToOneNatRules:
    title: updateNetworkOneToOneNatRules
    example:
      rules:
      - name: Service behind NAT
        lanIp: 192.168.128.22
        publicIp: 146.12.3.33
        uplink: internet1
        allowedInbound:
        - protocol: tcp
          destinationPorts:
          - 80
          allowedIps:
          - 10.82.112.0/24
          - 10.82.0.0/16
        - protocol: udp
          destinationPorts:
          - 8080
          allowedIps:
          - 10.81.110.5
          - 10.81.0.0/16
    type: object
    properties:
      rules:
        description: An array of 1:1 nat rules
        type: array
        items:
          $ref: '#/definitions/Rule8'
    required:
    - rules
  updateNetworkPortForwardingRules:
    title: updateNetworkPortForwardingRules
    example:
      rules:
      - lanIp: 192.168.128.1
        allowedIps:
        - any
        name: Description of Port Forwarding Rule
        protocol: tcp
        publicPort: 8100-8101
        localPort: 442-443
        uplink: both
    type: object
    properties:
      rules:
        description: An array of port forwarding params
        type: array
        items:
          $ref: '#/definitions/Rule9'
    required:
    - rules
  updateNetworkSiteToSiteVpn:
    title: updateNetworkSiteToSiteVpn
    example:
      mode: spoke
      hubs:
      - hubId: N_4901849
        useDefaultRoute: true
      - hubId: N_1892489
        useDefaultRoute: false
      subnets:
      - localSubnet: 192.168.1.0/24
        useVpn: true
      - localSubnet: 192.168.128.0/24
        useVpn: true
    type: object
    properties:
      mode:
        $ref: '#/definitions/Mode2'
      hubs:
        description: The list of VPN hubs, in order of preference. In spoke mode, at least 1 hub is required.
        type: array
        items:
          $ref: '#/definitions/Hub'
      subnets:
        description: The list of subnets and their VPN presence.
        type: array
        items:
          $ref: '#/definitions/Subnet'
    required:
    - mode
  Mode2:
    title: Mode2
    description: The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'
    type: string
    enum:
    - none
    - spoke
    - hub
  createNetworkSmBypassActivationLockAttempt:
    title: createNetworkSmBypassActivationLockAttempt
    example:
      ids:
      - 1284392014819
      - 2983092129865
    type: object
    properties:
      ids:
        description: The ids of the devices to attempt activation lock bypass.
        type: array
        items:
          type: string
    required:
    - ids
  RadiusLoadBalancingPolicy:
    title: RadiusLoadBalancingPolicy
    description: This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')
    type: string
    enum:
    - Strict priority order
    - Round robin
  ApTagsAndVlanId:
    title: ApTagsAndVlanId
    type: object
    properties:
      tags:
        description: Comma-separated list of AP tags
        type: string
      vlanId:
        description: Numerical identifier that is assigned to the VLAN
        type: integer
        format: int32
  Policy7:
    title: Policy7
    description: "'allow' or 'deny' traffic specified by this rule."
    type: string
    enum:
    - allow
    - deny
  updateNetworkSwitchLinkAggregation:
    title: updateNetworkSwitchLinkAggregation
    example:
      id: NDU2N18yXzM=
      switchPorts:
      - serial: Q234-ABCD-0001
        portId: 1
      - serial: Q234-ABCD-0002
        portId: 2
      - serial: Q234-ABCD-0003
        portId: 3
      - serial: Q234-ABCD-0004
        portId: 4
      - serial: Q234-ABCD-0005
        portId: 5
      - serial: Q234-ABCD-0006
        portId: 6
      - serial: Q234-ABCD-0007
        portId: 7
      - serial: Q234-ABCD-0008
        portId: 8
    type: object
    properties:
      switchPorts:
        description: Array of switch or stack ports for updating aggregation group. Minimum 2 and maximum 8 ports are supported.
        type: array
        items:
          $ref: '#/definitions/SwitchPort'
      switchProfilePorts:
        description: Array of switch profile ports for updating aggregation group. Minimum 2 and maximum 8 ports are supported.
        type: array
        items:
          $ref: '#/definitions/SwitchProfilePort'
  Mode3:
    title: Mode3
    description: >-
      The traffic analysis mode for the network. Can be one of 'disabled' (do not collect traffic types),
          'basic' (collect generic traffic categories), or 'detailed' (collect destination hostnames).
    type: string
    enum:
    - disabled
    - basic
    - detailed
  updateNetworkVlan:
    title: updateNetworkVlan
    example:
      name: My VLAN
      applianceIp: 1.2.3.4
      subnet: 192.168.1.0/24
      fixedIpAssignments:
        22:33:44:55:66:77:
          ip: 1.2.3.4
          name: Some client name
      reservedIpRanges:
      - start: 192.168.1.0
        end: 192.168.1.1
        comment: A reserved IP range
      dnsNameservers: google_dns
      dhcpHandling: Run a DHCP server
      dhcpLeaseTime: 1 day
      dhcpBootOptionsEnabled: false
      dhcpBootNextServer: 
      dhcpBootFilename: 
      dhcpOptions:
      - code: 5
        type: text
        value: five
    type: object
    properties:
      name:
        description: The name of the VLAN
        type: string
      subnet:
        description: The subnet of the VLAN
        type: string
      applianceIp:
        description: The local IP of the appliance on the VLAN
        type: string
      vpnNatSubnet:
        description: The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN
        type: string
      dhcpHandling:
        $ref: '#/definitions/DhcpHandling'
      dhcpRelayServerIps:
        description: The IPs of the DHCP servers that DHCP requests should be relayed to
        type: array
        items:
          type: string
      dhcpLeaseTime:
        $ref: '#/definitions/DhcpLeaseTime'
      dhcpBootOptionsEnabled:
        description: Use DHCP boot options specified in other properties
        type: boolean
      dhcpBootNextServer:
        description: DHCP boot option to direct boot clients to the server to load the boot file from
        type: string
      dhcpBootFilename:
        description: DHCP boot option for boot filename
        type: string
      fixedIpAssignments:
        description: The DHCP fixed IP assignments on the VLAN. This should be an object that contains mappings from MAC addresses to objects that themselves each contain "ip" and "name" string fields. See the sample request/response for more details.
        type: object
      reservedIpRanges:
        description: The DHCP reserved IP ranges on the VLAN
        type: array
        items:
          $ref: '#/definitions/ReservedIpRange1'
      dnsNameservers:
        description: The DNS nameservers used for DHCP responses, either "upstream_dns", "google_dns", "opendns", or a newline seperated string of IP addresses or domain names
        type: string
      dhcpOptions:
        description: The list of DHCP options that will be included in DHCP responses. Each object in the list should have "code", "type", and "value" properties.
        type: array
        items:
          $ref: '#/definitions/DhcpOption'
  BandOperationMode:
    title: BandOperationMode
    description: Choice between 'dual', '2.4ghz' or '5ghz'. Defaults to dual.
    type: string
    enum:
    - dual
    - 2.4ghz
    - 5ghz
  NewFeaturesSubtab:
    title: NewFeaturesSubtab
    description: The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
    type: string
    enum:
    - default or inherit
    - hide
    - show
  createOrganizationNetwork:
    title: createOrganizationNetwork
    example:
      name: Long Island Office
      timeZone: America/Los_Angeles
      tags: ' tag1 tag2 '
      disableMyMerakiCom: false
      type: appliance switch camera
    type: object
    properties:
      name:
        description: The name of the new network
        type: string
      type:
        description: The type of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, or a space-separated list of those for a combined network.
        type: string
      tags:
        description: A space-separated list of tags to be applied to the network
        type: string
      timeZone:
        description: The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>
        type: string
      copyFromNetworkId:
        description: The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly.
        type: string
      disableMyMerakiCom:
        description: Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)
        type: boolean
      disableRemoteStatusPage:
        description: Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false
        type: boolean
    required:
    - name
    - type
  combineOrganizationNetworks:
    title: combineOrganizationNetworks
    example:
      name: Long Island Office
      networkIds:
      - N_1234
      - N_5678
    type: object
    properties:
      name:
        description: The name of the combined network
        type: string
      networkIds:
        description: A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network
        type: array
        items:
          type: string
      enrollmentString:
        description: A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break. All networks that are part of this combined network will have their enrollment string appended by '-network_type'. If left empty, all exisitng enrollment strings will be deleted.
        type: string
    required:
    - name
    - networkIds
  updateNetworkSmTargetGroup:
    title: updateNetworkSmTargetGroup
    example:
      name: My target group
      scope: none
      tags: '[]'
      type: devices
    type: object
    properties:
      name:
        description: The name of this target group
        type: string
      scope:
        description: The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.
        type: string
  updateNetworkSnmpSettings:
    title: updateNetworkSnmpSettings
    example:
      access: users
      users:
      - username: AzureDiamond
        passphrase: hunter2
    type: object
    properties:
      access:
        $ref: '#/definitions/Access1'
      communityString:
        description: The SNMP community string. Only relevant if 'access' is set to 'community'.
        type: string
      users:
        description: The list of SNMP users. Only relevant if 'access' is set to 'users'.
        type: array
        items:
          $ref: '#/definitions/User'
  updateNetworkSsidL3FirewallRules:
    title: updateNetworkSsidL3FirewallRules
    example:
      rules:
      - comment: Allow TCP traffic to subnet with HTTP servers.
        policy: allow
        protocol: tcp
        destPort: 443
        destCidr: 192.168.1.0/24
    type: object
    properties:
      rules:
        description: An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule)
        type: array
        items:
          $ref: '#/definitions/Rule10'
      allowLanAccess:
        description: Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)
        type: boolean
  createNetworkSwitchLinkAggregation:
    title: createNetworkSwitchLinkAggregation
    example:
      switchPorts:
      - serial: Q234-ABCD-0001
        portId: 1
      - serial: Q234-ABCD-0002
        portId: 2
      - serial: Q234-ABCD-0003
        portId: 3
      - serial: Q234-ABCD-0004
        portId: 4
      - serial: Q234-ABCD-0005
        portId: 5
      - serial: Q234-ABCD-0006
        portId: 6
      - serial: Q234-ABCD-0007
        portId: 7
      - serial: Q234-ABCD-0008
        portId: 8
    type: object
    properties:
      switchPorts:
        description: Array of switch or stack ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
        type: array
        items:
          $ref: '#/definitions/SwitchPort'
      switchProfilePorts:
        description: Array of switch profile ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
        type: array
        items:
          $ref: '#/definitions/SwitchProfilePort'
  createNetworkSwitchPortSchedule:
    title: createNetworkSwitchPortSchedule
    example:
      name: Weekdays schedule
      portSchedule:
        monday:
          active: true
          from: 9:00
          to: 17:00
        tuesday:
          active: true
          from: 9:00
          to: 17:00
        wednesday:
          active: true
          from: 9:00
          to: 17:00
        thursday:
          active: true
          from: 9:00
          to: 17:00
        friday:
          active: true
          from: 9:00
          to: 17:00
        saturday:
          active: false
          from: 0:00
          to: 24:00
        sunday:
          active: false
          from: 0:00
          to: 24:00
    type: object
    properties:
      name:
        description: The name for your port schedule. Required
        type: string
      portSchedule:
        $ref: '#/definitions/PortSchedule'
    required:
    - name
  updateNetworkSwitchSettingsDscpToCosMappings:
    title: updateNetworkSwitchSettingsDscpToCosMappings
    example:
      mappings:
      - dscp: 1
        cos: 1
        title: Video
    type: object
    properties:
      mappings:
        description: An array of DSCP to CoS mappings. An empty array will reset the mappings to default.
        type: array
        items:
          $ref: '#/definitions/Mapping'
    required:
    - mappings
  Mapping:
    title: Mapping
    type: object
    properties:
      dscp:
        description: The Differentiated Services Code Point (DSCP) tag in the IP header that will be mapped to a particular Class-of-Service (CoS) queue. Value can be in the range of 0 to 63 inclusive.
        type: integer
        format: int32
      cos:
        description: The actual layer-2 CoS queue the DSCP value is mapped to. These are not bits set on outgoing frames. Value can be in the range of 0 to 5 inclusive.
        type: integer
        format: int32
      title:
        description: Label for the mapping (optional).
        type: string
    required:
    - dscp
    - cos
  Tag:
    title: Tag
    type: object
    properties:
      tag:
        description: The name of the tag
        type: string
      access:
        description: The privilege of the dashboard administrator on the tag
        type: string
    required:
    - tag
    - access
  Network:
    title: Network
    type: object
    properties:
      id:
        description: The network ID
        type: string
      access:
        description: The privilege of the dashboard administrator on the network
        type: string
    required:
    - id
    - access
  CasesSubtab:
    title: CasesSubtab
    description: >-
      The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
          of 'default or inherit', 'hide' or 'show'.
    type: string
    enum:
    - default or inherit
    - hide
    - show
  DataProtectionRequestsSubtab:
    title: DataProtectionRequestsSubtab
    description: >-
      The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
          be audited. Can be one of 'default or inherit', 'hide' or 'show'.
    type: string
    enum:
    - default or inherit
    - hide
    - show
  updateOrganizationBrandingPolicy:
    title: updateOrganizationBrandingPolicy
    example:
      brandingPolicyId: 456
      name: My Branding Policy
      enabled: true
      adminSettings:
        appliesTo: All admins of networks...
        values:
        - N_1234
        - L_5678
      helpSettings:
        helpTab: show
        getHelpSubtab: default or inherit
        communitySubtab: show
        casesSubtab: hide
        dataProtectionRequestsSubtab: default or inherit
        getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
        universalSearchKnowledgeBaseSearch: hide
        ciscoMerakiProductDocumentation: show
        supportContactInfo: show
        newFeaturesSubtab: show
        firewallInfoSubtab: hide
        apiDocsSubtab: default or inherit
        hardwareReplacementsSubtab: hide
        smForums: hide
    type: object
    properties:
      name:
        description: Name of the Dashboard branding policy.
        type: string
      enabled:
        description: Boolean indicating whether this policy is enabled.
        type: boolean
      adminSettings:
        $ref: '#/definitions/AdminSettings'
      helpSettings:
        $ref: '#/definitions/HelpSettings1'
  cloneOrganization:
    title: cloneOrganization
    example:
      name: My organization
    type: object
    properties:
      name:
        description: The name of the new organization
        type: string
    required:
    - name
security:
- Cisco-Meraki-API-Key: []
tags:
- name: API usage
- name: Action batches
- name: Admins
- name: Alert settings
- name: Bluetooth clients
- name: Bluetooth settings
- name: Camera quality retention profiles
- name: Cameras
- name: Change log
- name: Clients
- name: Config templates
- name: Connectivity monitoring destinations
- name: Content filtering categories
- name: Content filtering rules
- name: Dashboard branding policies
- name: Devices
- name: Events
- name: Firewalled services
- name: Floorplans
- name: Group policies
- name: HTTP servers
- name: Intrusion settings
- name: Licenses
- name: Link aggregations
- name: MG DHCP settings
- name: MG LAN settings
- name: MG connectivity monitoring destinations
- name: MG port forwarding rules
- name: MG subnet pool settings
- name: MG uplink settings
- name: MR L3 firewall
- name: MV Sense
- name: MX 1:1 NAT rules
- name: MX 1:Many NAT rules
- name: MX L3 firewall
- name: MX L7 application categories
- name: MX L7 firewall
- name: MX VLAN ports
- name: MX VPN firewall
- name: MX cellular firewall
- name: MX inbound firewall
- name: MX port forwarding rules
- name: MX static routes
- name: MX warm spare settings
- name: Malware settings
- name: Management interface settings
- name: Meraki auth users
- name: Monitored media servers
- name: Named tag scope
- name: NetFlow settings
- name: Networks
- name: OpenAPI Spec
- name: Organizations
- name: PII
- name: Radio settings
- name: SAML roles
- name: SM
- name: SNMP settings
- name: SSIDs
- name: Security events
- name: Splash login attempts
- name: Splash settings
- name: Switch ACLs
- name: Switch port schedules
- name: Switch ports
- name: Switch profiles
- name: Switch settings
- name: Switch stacks
- name: Syslog servers
- name: Traffic analysis settings
- name: Traffic shaping
- name: Uplink settings
- name: VLANs
- name: Webhook logs
- name: Wireless health
- name: Wireless settings
