// Code generated by go-swagger; DO NOT EDIT.

package v_l_a_ns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cisco-sso/meraki-cli/models"
)

// NewUpdateNetworkVlanParams creates a new UpdateNetworkVlanParams object
// with the default values initialized.
func NewUpdateNetworkVlanParams() *UpdateNetworkVlanParams {
	var ()
	return &UpdateNetworkVlanParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateNetworkVlanParamsWithTimeout creates a new UpdateNetworkVlanParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateNetworkVlanParamsWithTimeout(timeout time.Duration) *UpdateNetworkVlanParams {
	var ()
	return &UpdateNetworkVlanParams{

		timeout: timeout,
	}
}

// NewUpdateNetworkVlanParamsWithContext creates a new UpdateNetworkVlanParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateNetworkVlanParamsWithContext(ctx context.Context) *UpdateNetworkVlanParams {
	var ()
	return &UpdateNetworkVlanParams{

		Context: ctx,
	}
}

// NewUpdateNetworkVlanParamsWithHTTPClient creates a new UpdateNetworkVlanParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateNetworkVlanParamsWithHTTPClient(client *http.Client) *UpdateNetworkVlanParams {
	var ()
	return &UpdateNetworkVlanParams{
		HTTPClient: client,
	}
}

/*UpdateNetworkVlanParams contains all the parameters to send to the API endpoint
for the update network vlan operation typically these are written to a http.Request
*/
type UpdateNetworkVlanParams struct {

	/*NetworkID*/
	NetworkID string
	/*UpdateNetworkVlan*/
	UpdateNetworkVlan *models.UpdateNetworkVlan
	/*VlanID*/
	VlanID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update network vlan params
func (o *UpdateNetworkVlanParams) WithTimeout(timeout time.Duration) *UpdateNetworkVlanParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update network vlan params
func (o *UpdateNetworkVlanParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update network vlan params
func (o *UpdateNetworkVlanParams) WithContext(ctx context.Context) *UpdateNetworkVlanParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update network vlan params
func (o *UpdateNetworkVlanParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update network vlan params
func (o *UpdateNetworkVlanParams) WithHTTPClient(client *http.Client) *UpdateNetworkVlanParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update network vlan params
func (o *UpdateNetworkVlanParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNetworkID adds the networkID to the update network vlan params
func (o *UpdateNetworkVlanParams) WithNetworkID(networkID string) *UpdateNetworkVlanParams {
	o.SetNetworkID(networkID)
	return o
}

// SetNetworkID adds the networkId to the update network vlan params
func (o *UpdateNetworkVlanParams) SetNetworkID(networkID string) {
	o.NetworkID = networkID
}

// WithUpdateNetworkVlan adds the updateNetworkVlan to the update network vlan params
func (o *UpdateNetworkVlanParams) WithUpdateNetworkVlan(updateNetworkVlan *models.UpdateNetworkVlan) *UpdateNetworkVlanParams {
	o.SetUpdateNetworkVlan(updateNetworkVlan)
	return o
}

// SetUpdateNetworkVlan adds the updateNetworkVlan to the update network vlan params
func (o *UpdateNetworkVlanParams) SetUpdateNetworkVlan(updateNetworkVlan *models.UpdateNetworkVlan) {
	o.UpdateNetworkVlan = updateNetworkVlan
}

// WithVlanID adds the vlanID to the update network vlan params
func (o *UpdateNetworkVlanParams) WithVlanID(vlanID string) *UpdateNetworkVlanParams {
	o.SetVlanID(vlanID)
	return o
}

// SetVlanID adds the vlanId to the update network vlan params
func (o *UpdateNetworkVlanParams) SetVlanID(vlanID string) {
	o.VlanID = vlanID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateNetworkVlanParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param networkId
	if err := r.SetPathParam("networkId", o.NetworkID); err != nil {
		return err
	}

	if o.UpdateNetworkVlan != nil {
		if err := r.SetBodyParam(o.UpdateNetworkVlan); err != nil {
			return err
		}
	}

	// path param vlanId
	if err := r.SetPathParam("vlanId", o.VlanID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
