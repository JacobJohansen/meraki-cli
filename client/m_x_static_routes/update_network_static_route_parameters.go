// Code generated by go-swagger; DO NOT EDIT.

package m_x_static_routes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cisco-sso/meraki-cli/models"
)

// NewUpdateNetworkStaticRouteParams creates a new UpdateNetworkStaticRouteParams object
// with the default values initialized.
func NewUpdateNetworkStaticRouteParams() *UpdateNetworkStaticRouteParams {
	var ()
	return &UpdateNetworkStaticRouteParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateNetworkStaticRouteParamsWithTimeout creates a new UpdateNetworkStaticRouteParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateNetworkStaticRouteParamsWithTimeout(timeout time.Duration) *UpdateNetworkStaticRouteParams {
	var ()
	return &UpdateNetworkStaticRouteParams{

		timeout: timeout,
	}
}

// NewUpdateNetworkStaticRouteParamsWithContext creates a new UpdateNetworkStaticRouteParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateNetworkStaticRouteParamsWithContext(ctx context.Context) *UpdateNetworkStaticRouteParams {
	var ()
	return &UpdateNetworkStaticRouteParams{

		Context: ctx,
	}
}

// NewUpdateNetworkStaticRouteParamsWithHTTPClient creates a new UpdateNetworkStaticRouteParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateNetworkStaticRouteParamsWithHTTPClient(client *http.Client) *UpdateNetworkStaticRouteParams {
	var ()
	return &UpdateNetworkStaticRouteParams{
		HTTPClient: client,
	}
}

/*UpdateNetworkStaticRouteParams contains all the parameters to send to the API endpoint
for the update network static route operation typically these are written to a http.Request
*/
type UpdateNetworkStaticRouteParams struct {

	/*NetworkID*/
	NetworkID string
	/*StaticRouteID*/
	StaticRouteID string
	/*UpdateNetworkStaticRoute*/
	UpdateNetworkStaticRoute *models.UpdateNetworkStaticRoute

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update network static route params
func (o *UpdateNetworkStaticRouteParams) WithTimeout(timeout time.Duration) *UpdateNetworkStaticRouteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update network static route params
func (o *UpdateNetworkStaticRouteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update network static route params
func (o *UpdateNetworkStaticRouteParams) WithContext(ctx context.Context) *UpdateNetworkStaticRouteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update network static route params
func (o *UpdateNetworkStaticRouteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update network static route params
func (o *UpdateNetworkStaticRouteParams) WithHTTPClient(client *http.Client) *UpdateNetworkStaticRouteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update network static route params
func (o *UpdateNetworkStaticRouteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNetworkID adds the networkID to the update network static route params
func (o *UpdateNetworkStaticRouteParams) WithNetworkID(networkID string) *UpdateNetworkStaticRouteParams {
	o.SetNetworkID(networkID)
	return o
}

// SetNetworkID adds the networkId to the update network static route params
func (o *UpdateNetworkStaticRouteParams) SetNetworkID(networkID string) {
	o.NetworkID = networkID
}

// WithStaticRouteID adds the staticRouteID to the update network static route params
func (o *UpdateNetworkStaticRouteParams) WithStaticRouteID(staticRouteID string) *UpdateNetworkStaticRouteParams {
	o.SetStaticRouteID(staticRouteID)
	return o
}

// SetStaticRouteID adds the staticRouteId to the update network static route params
func (o *UpdateNetworkStaticRouteParams) SetStaticRouteID(staticRouteID string) {
	o.StaticRouteID = staticRouteID
}

// WithUpdateNetworkStaticRoute adds the updateNetworkStaticRoute to the update network static route params
func (o *UpdateNetworkStaticRouteParams) WithUpdateNetworkStaticRoute(updateNetworkStaticRoute *models.UpdateNetworkStaticRoute) *UpdateNetworkStaticRouteParams {
	o.SetUpdateNetworkStaticRoute(updateNetworkStaticRoute)
	return o
}

// SetUpdateNetworkStaticRoute adds the updateNetworkStaticRoute to the update network static route params
func (o *UpdateNetworkStaticRouteParams) SetUpdateNetworkStaticRoute(updateNetworkStaticRoute *models.UpdateNetworkStaticRoute) {
	o.UpdateNetworkStaticRoute = updateNetworkStaticRoute
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateNetworkStaticRouteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param networkId
	if err := r.SetPathParam("networkId", o.NetworkID); err != nil {
		return err
	}

	// path param staticRouteId
	if err := r.SetPathParam("staticRouteId", o.StaticRouteID); err != nil {
		return err
	}

	if o.UpdateNetworkStaticRoute != nil {
		if err := r.SetBodyParam(o.UpdateNetworkStaticRoute); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
