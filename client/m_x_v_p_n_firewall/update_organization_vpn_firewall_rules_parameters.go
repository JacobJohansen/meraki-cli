// Code generated by go-swagger; DO NOT EDIT.

package m_x_v_p_n_firewall

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cisco-sso/meraki-cli/models"
)

// NewUpdateOrganizationVpnFirewallRulesParams creates a new UpdateOrganizationVpnFirewallRulesParams object
// with the default values initialized.
func NewUpdateOrganizationVpnFirewallRulesParams() *UpdateOrganizationVpnFirewallRulesParams {
	var ()
	return &UpdateOrganizationVpnFirewallRulesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateOrganizationVpnFirewallRulesParamsWithTimeout creates a new UpdateOrganizationVpnFirewallRulesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateOrganizationVpnFirewallRulesParamsWithTimeout(timeout time.Duration) *UpdateOrganizationVpnFirewallRulesParams {
	var ()
	return &UpdateOrganizationVpnFirewallRulesParams{

		timeout: timeout,
	}
}

// NewUpdateOrganizationVpnFirewallRulesParamsWithContext creates a new UpdateOrganizationVpnFirewallRulesParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateOrganizationVpnFirewallRulesParamsWithContext(ctx context.Context) *UpdateOrganizationVpnFirewallRulesParams {
	var ()
	return &UpdateOrganizationVpnFirewallRulesParams{

		Context: ctx,
	}
}

// NewUpdateOrganizationVpnFirewallRulesParamsWithHTTPClient creates a new UpdateOrganizationVpnFirewallRulesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateOrganizationVpnFirewallRulesParamsWithHTTPClient(client *http.Client) *UpdateOrganizationVpnFirewallRulesParams {
	var ()
	return &UpdateOrganizationVpnFirewallRulesParams{
		HTTPClient: client,
	}
}

/*UpdateOrganizationVpnFirewallRulesParams contains all the parameters to send to the API endpoint
for the update organization vpn firewall rules operation typically these are written to a http.Request
*/
type UpdateOrganizationVpnFirewallRulesParams struct {

	/*OrganizationID*/
	OrganizationID string
	/*UpdateOrganizationVpnFirewallRules*/
	UpdateOrganizationVpnFirewallRules *models.UpdateOrganizationVpnFirewallRules

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update organization vpn firewall rules params
func (o *UpdateOrganizationVpnFirewallRulesParams) WithTimeout(timeout time.Duration) *UpdateOrganizationVpnFirewallRulesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update organization vpn firewall rules params
func (o *UpdateOrganizationVpnFirewallRulesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update organization vpn firewall rules params
func (o *UpdateOrganizationVpnFirewallRulesParams) WithContext(ctx context.Context) *UpdateOrganizationVpnFirewallRulesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update organization vpn firewall rules params
func (o *UpdateOrganizationVpnFirewallRulesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update organization vpn firewall rules params
func (o *UpdateOrganizationVpnFirewallRulesParams) WithHTTPClient(client *http.Client) *UpdateOrganizationVpnFirewallRulesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update organization vpn firewall rules params
func (o *UpdateOrganizationVpnFirewallRulesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOrganizationID adds the organizationID to the update organization vpn firewall rules params
func (o *UpdateOrganizationVpnFirewallRulesParams) WithOrganizationID(organizationID string) *UpdateOrganizationVpnFirewallRulesParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the update organization vpn firewall rules params
func (o *UpdateOrganizationVpnFirewallRulesParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WithUpdateOrganizationVpnFirewallRules adds the updateOrganizationVpnFirewallRules to the update organization vpn firewall rules params
func (o *UpdateOrganizationVpnFirewallRulesParams) WithUpdateOrganizationVpnFirewallRules(updateOrganizationVpnFirewallRules *models.UpdateOrganizationVpnFirewallRules) *UpdateOrganizationVpnFirewallRulesParams {
	o.SetUpdateOrganizationVpnFirewallRules(updateOrganizationVpnFirewallRules)
	return o
}

// SetUpdateOrganizationVpnFirewallRules adds the updateOrganizationVpnFirewallRules to the update organization vpn firewall rules params
func (o *UpdateOrganizationVpnFirewallRulesParams) SetUpdateOrganizationVpnFirewallRules(updateOrganizationVpnFirewallRules *models.UpdateOrganizationVpnFirewallRules) {
	o.UpdateOrganizationVpnFirewallRules = updateOrganizationVpnFirewallRules
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateOrganizationVpnFirewallRulesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param organizationId
	if err := r.SetPathParam("organizationId", o.OrganizationID); err != nil {
		return err
	}

	if o.UpdateOrganizationVpnFirewallRules != nil {
		if err := r.SetBodyParam(o.UpdateOrganizationVpnFirewallRules); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
