// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cisco-sso/meraki-cli/client/action_batches"
	"github.com/cisco-sso/meraki-cli/client/admins"
	"github.com/cisco-sso/meraki-cli/client/alert_settings"
	"github.com/cisco-sso/meraki-cli/client/api_usage"
	"github.com/cisco-sso/meraki-cli/client/bluetooth_clients"
	"github.com/cisco-sso/meraki-cli/client/bluetooth_settings"
	"github.com/cisco-sso/meraki-cli/client/camera_quality_retention_profiles"
	"github.com/cisco-sso/meraki-cli/client/cameras"
	"github.com/cisco-sso/meraki-cli/client/change_log"
	"github.com/cisco-sso/meraki-cli/client/clients"
	"github.com/cisco-sso/meraki-cli/client/config_templates"
	"github.com/cisco-sso/meraki-cli/client/connectivity_monitoring_destinations"
	"github.com/cisco-sso/meraki-cli/client/content_filtering_categories"
	"github.com/cisco-sso/meraki-cli/client/content_filtering_rules"
	"github.com/cisco-sso/meraki-cli/client/dashboard_branding_policies"
	"github.com/cisco-sso/meraki-cli/client/devices"
	"github.com/cisco-sso/meraki-cli/client/events"
	"github.com/cisco-sso/meraki-cli/client/firewalled_services"
	"github.com/cisco-sso/meraki-cli/client/floorplans"
	"github.com/cisco-sso/meraki-cli/client/group_policies"
	"github.com/cisco-sso/meraki-cli/client/http_servers"
	"github.com/cisco-sso/meraki-cli/client/intrusion_settings"
	"github.com/cisco-sso/meraki-cli/client/licenses"
	"github.com/cisco-sso/meraki-cli/client/link_aggregations"
	"github.com/cisco-sso/meraki-cli/client/m_g_connectivity_monitoring_destinations"
	"github.com/cisco-sso/meraki-cli/client/m_g_d_h_c_p_settings"
	"github.com/cisco-sso/meraki-cli/client/m_g_l_a_n_settings"
	"github.com/cisco-sso/meraki-cli/client/m_g_port_forwarding_rules"
	"github.com/cisco-sso/meraki-cli/client/m_g_subnet_pool_settings"
	"github.com/cisco-sso/meraki-cli/client/m_g_uplink_settings"
	"github.com/cisco-sso/meraki-cli/client/m_r_l3_firewall"
	"github.com/cisco-sso/meraki-cli/client/m_v_sense"
	"github.com/cisco-sso/meraki-cli/client/m_x_1_1_n_a_t_rules"
	"github.com/cisco-sso/meraki-cli/client/m_x_1_many_n_a_t_rules"
	"github.com/cisco-sso/meraki-cli/client/m_x_cellular_firewall"
	"github.com/cisco-sso/meraki-cli/client/m_x_inbound_firewall"
	"github.com/cisco-sso/meraki-cli/client/m_x_l3_firewall"
	"github.com/cisco-sso/meraki-cli/client/m_x_l7_application_categories"
	"github.com/cisco-sso/meraki-cli/client/m_x_l7_firewall"
	"github.com/cisco-sso/meraki-cli/client/m_x_port_forwarding_rules"
	"github.com/cisco-sso/meraki-cli/client/m_x_static_routes"
	"github.com/cisco-sso/meraki-cli/client/m_x_v_l_a_n_ports"
	"github.com/cisco-sso/meraki-cli/client/m_x_v_p_n_firewall"
	"github.com/cisco-sso/meraki-cli/client/m_x_warm_spare_settings"
	"github.com/cisco-sso/meraki-cli/client/malware_settings"
	"github.com/cisco-sso/meraki-cli/client/management_interface_settings"
	"github.com/cisco-sso/meraki-cli/client/meraki_auth_users"
	"github.com/cisco-sso/meraki-cli/client/monitored_media_servers"
	"github.com/cisco-sso/meraki-cli/client/named_tag_scope"
	"github.com/cisco-sso/meraki-cli/client/net_flow_settings"
	"github.com/cisco-sso/meraki-cli/client/networks"
	"github.com/cisco-sso/meraki-cli/client/open_api_spec"
	"github.com/cisco-sso/meraki-cli/client/organizations"
	"github.com/cisco-sso/meraki-cli/client/p_i_i"
	"github.com/cisco-sso/meraki-cli/client/radio_settings"
	"github.com/cisco-sso/meraki-cli/client/s_a_m_l_roles"
	"github.com/cisco-sso/meraki-cli/client/s_m"
	"github.com/cisco-sso/meraki-cli/client/s_n_m_p_settings"
	"github.com/cisco-sso/meraki-cli/client/s_s_i_ds"
	"github.com/cisco-sso/meraki-cli/client/security_events"
	"github.com/cisco-sso/meraki-cli/client/splash_login_attempts"
	"github.com/cisco-sso/meraki-cli/client/splash_settings"
	"github.com/cisco-sso/meraki-cli/client/switch_a_c_ls"
	"github.com/cisco-sso/meraki-cli/client/switch_port_schedules"
	"github.com/cisco-sso/meraki-cli/client/switch_ports"
	"github.com/cisco-sso/meraki-cli/client/switch_profiles"
	"github.com/cisco-sso/meraki-cli/client/switch_settings"
	"github.com/cisco-sso/meraki-cli/client/switch_stacks"
	"github.com/cisco-sso/meraki-cli/client/syslog_servers"
	"github.com/cisco-sso/meraki-cli/client/traffic_analysis_settings"
	"github.com/cisco-sso/meraki-cli/client/traffic_shaping"
	"github.com/cisco-sso/meraki-cli/client/uplink_settings"
	"github.com/cisco-sso/meraki-cli/client/v_l_a_ns"
	"github.com/cisco-sso/meraki-cli/client/webhook_logs"
	"github.com/cisco-sso/meraki-cli/client/wireless_health"
	"github.com/cisco-sso/meraki-cli/client/wireless_settings"
)

// Default meraki dashboard HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "api.meraki.com"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/api/v0"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new meraki dashboard HTTP client.
func NewHTTPClient(formats strfmt.Registry) *MerakiDashboard {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new meraki dashboard HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *MerakiDashboard {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new meraki dashboard client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *MerakiDashboard {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(MerakiDashboard)
	cli.Transport = transport
	cli.ActionBatches = action_batches.New(transport, formats)
	cli.Admins = admins.New(transport, formats)
	cli.AlertSettings = alert_settings.New(transport, formats)
	cli.APIUsage = api_usage.New(transport, formats)
	cli.BluetoothClients = bluetooth_clients.New(transport, formats)
	cli.BluetoothSettings = bluetooth_settings.New(transport, formats)
	cli.CameraQualityRetentionProfiles = camera_quality_retention_profiles.New(transport, formats)
	cli.Cameras = cameras.New(transport, formats)
	cli.ChangeLog = change_log.New(transport, formats)
	cli.Clients = clients.New(transport, formats)
	cli.ConfigTemplates = config_templates.New(transport, formats)
	cli.ConnectivityMonitoringDestinations = connectivity_monitoring_destinations.New(transport, formats)
	cli.ContentFilteringCategories = content_filtering_categories.New(transport, formats)
	cli.ContentFilteringRules = content_filtering_rules.New(transport, formats)
	cli.DashboardBrandingPolicies = dashboard_branding_policies.New(transport, formats)
	cli.Devices = devices.New(transport, formats)
	cli.Events = events.New(transport, formats)
	cli.FirewalledServices = firewalled_services.New(transport, formats)
	cli.Floorplans = floorplans.New(transport, formats)
	cli.GroupPolicies = group_policies.New(transport, formats)
	cli.HTTPServers = http_servers.New(transport, formats)
	cli.IntrusionSettings = intrusion_settings.New(transport, formats)
	cli.Licenses = licenses.New(transport, formats)
	cli.LinkAggregations = link_aggregations.New(transport, formats)
	cli.MgConnectivityMonitoringDestinations = m_g_connectivity_monitoring_destinations.New(transport, formats)
	cli.MgdhcpSettings = m_g_d_h_c_p_settings.New(transport, formats)
	cli.MglanSettings = m_g_l_a_n_settings.New(transport, formats)
	cli.MgPortForwardingRules = m_g_port_forwarding_rules.New(transport, formats)
	cli.MgSubnetPoolSettings = m_g_subnet_pool_settings.New(transport, formats)
	cli.MgUplinkSettings = m_g_uplink_settings.New(transport, formats)
	cli.MrL3Firewall = m_r_l3_firewall.New(transport, formats)
	cli.MvSense = m_v_sense.New(transport, formats)
	cli.Mx11natRules = m_x_1_1_n_a_t_rules.New(transport, formats)
	cli.Mx1ManynatRules = m_x_1_many_n_a_t_rules.New(transport, formats)
	cli.MxCellularFirewall = m_x_cellular_firewall.New(transport, formats)
	cli.MxInboundFirewall = m_x_inbound_firewall.New(transport, formats)
	cli.MxL3Firewall = m_x_l3_firewall.New(transport, formats)
	cli.MxL7ApplicationCategories = m_x_l7_application_categories.New(transport, formats)
	cli.MxL7Firewall = m_x_l7_firewall.New(transport, formats)
	cli.MxPortForwardingRules = m_x_port_forwarding_rules.New(transport, formats)
	cli.MxStaticRoutes = m_x_static_routes.New(transport, formats)
	cli.MxvlanPorts = m_x_v_l_a_n_ports.New(transport, formats)
	cli.MxvpnFirewall = m_x_v_p_n_firewall.New(transport, formats)
	cli.MxWarmSpareSettings = m_x_warm_spare_settings.New(transport, formats)
	cli.MalwareSettings = malware_settings.New(transport, formats)
	cli.ManagementInterfaceSettings = management_interface_settings.New(transport, formats)
	cli.MerakiAuthUsers = meraki_auth_users.New(transport, formats)
	cli.MonitoredMediaServers = monitored_media_servers.New(transport, formats)
	cli.NamedTagScope = named_tag_scope.New(transport, formats)
	cli.NetFlowSettings = net_flow_settings.New(transport, formats)
	cli.Networks = networks.New(transport, formats)
	cli.OpenAPISpec = open_api_spec.New(transport, formats)
	cli.Organizations = organizations.New(transport, formats)
	cli.Pii = p_i_i.New(transport, formats)
	cli.RadioSettings = radio_settings.New(transport, formats)
	cli.SamlRoles = s_a_m_l_roles.New(transport, formats)
	cli.Sm = s_m.New(transport, formats)
	cli.SnmpSettings = s_n_m_p_settings.New(transport, formats)
	cli.SsiDs = s_s_i_ds.New(transport, formats)
	cli.SecurityEvents = security_events.New(transport, formats)
	cli.SplashLoginAttempts = splash_login_attempts.New(transport, formats)
	cli.SplashSettings = splash_settings.New(transport, formats)
	cli.SwitchacLs = switch_a_c_ls.New(transport, formats)
	cli.SwitchPortSchedules = switch_port_schedules.New(transport, formats)
	cli.SwitchPorts = switch_ports.New(transport, formats)
	cli.SwitchProfiles = switch_profiles.New(transport, formats)
	cli.SwitchSettings = switch_settings.New(transport, formats)
	cli.SwitchStacks = switch_stacks.New(transport, formats)
	cli.SyslogServers = syslog_servers.New(transport, formats)
	cli.TrafficAnalysisSettings = traffic_analysis_settings.New(transport, formats)
	cli.TrafficShaping = traffic_shaping.New(transport, formats)
	cli.UplinkSettings = uplink_settings.New(transport, formats)
	cli.VlaNs = v_l_a_ns.New(transport, formats)
	cli.WebhookLogs = webhook_logs.New(transport, formats)
	cli.WirelessHealth = wireless_health.New(transport, formats)
	cli.WirelessSettings = wireless_settings.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// MerakiDashboard is a client for meraki dashboard
type MerakiDashboard struct {
	ActionBatches action_batches.ClientService

	Admins admins.ClientService

	AlertSettings alert_settings.ClientService

	APIUsage api_usage.ClientService

	BluetoothClients bluetooth_clients.ClientService

	BluetoothSettings bluetooth_settings.ClientService

	CameraQualityRetentionProfiles camera_quality_retention_profiles.ClientService

	Cameras cameras.ClientService

	ChangeLog change_log.ClientService

	Clients clients.ClientService

	ConfigTemplates config_templates.ClientService

	ConnectivityMonitoringDestinations connectivity_monitoring_destinations.ClientService

	ContentFilteringCategories content_filtering_categories.ClientService

	ContentFilteringRules content_filtering_rules.ClientService

	DashboardBrandingPolicies dashboard_branding_policies.ClientService

	Devices devices.ClientService

	Events events.ClientService

	FirewalledServices firewalled_services.ClientService

	Floorplans floorplans.ClientService

	GroupPolicies group_policies.ClientService

	HTTPServers http_servers.ClientService

	IntrusionSettings intrusion_settings.ClientService

	Licenses licenses.ClientService

	LinkAggregations link_aggregations.ClientService

	MgConnectivityMonitoringDestinations m_g_connectivity_monitoring_destinations.ClientService

	MgdhcpSettings m_g_d_h_c_p_settings.ClientService

	MglanSettings m_g_l_a_n_settings.ClientService

	MgPortForwardingRules m_g_port_forwarding_rules.ClientService

	MgSubnetPoolSettings m_g_subnet_pool_settings.ClientService

	MgUplinkSettings m_g_uplink_settings.ClientService

	MrL3Firewall m_r_l3_firewall.ClientService

	MvSense m_v_sense.ClientService

	Mx11natRules m_x_1_1_n_a_t_rules.ClientService

	Mx1ManynatRules m_x_1_many_n_a_t_rules.ClientService

	MxCellularFirewall m_x_cellular_firewall.ClientService

	MxInboundFirewall m_x_inbound_firewall.ClientService

	MxL3Firewall m_x_l3_firewall.ClientService

	MxL7ApplicationCategories m_x_l7_application_categories.ClientService

	MxL7Firewall m_x_l7_firewall.ClientService

	MxPortForwardingRules m_x_port_forwarding_rules.ClientService

	MxStaticRoutes m_x_static_routes.ClientService

	MxvlanPorts m_x_v_l_a_n_ports.ClientService

	MxvpnFirewall m_x_v_p_n_firewall.ClientService

	MxWarmSpareSettings m_x_warm_spare_settings.ClientService

	MalwareSettings malware_settings.ClientService

	ManagementInterfaceSettings management_interface_settings.ClientService

	MerakiAuthUsers meraki_auth_users.ClientService

	MonitoredMediaServers monitored_media_servers.ClientService

	NamedTagScope named_tag_scope.ClientService

	NetFlowSettings net_flow_settings.ClientService

	Networks networks.ClientService

	OpenAPISpec open_api_spec.ClientService

	Organizations organizations.ClientService

	Pii p_i_i.ClientService

	RadioSettings radio_settings.ClientService

	SamlRoles s_a_m_l_roles.ClientService

	Sm s_m.ClientService

	SnmpSettings s_n_m_p_settings.ClientService

	SsiDs s_s_i_ds.ClientService

	SecurityEvents security_events.ClientService

	SplashLoginAttempts splash_login_attempts.ClientService

	SplashSettings splash_settings.ClientService

	SwitchacLs switch_a_c_ls.ClientService

	SwitchPortSchedules switch_port_schedules.ClientService

	SwitchPorts switch_ports.ClientService

	SwitchProfiles switch_profiles.ClientService

	SwitchSettings switch_settings.ClientService

	SwitchStacks switch_stacks.ClientService

	SyslogServers syslog_servers.ClientService

	TrafficAnalysisSettings traffic_analysis_settings.ClientService

	TrafficShaping traffic_shaping.ClientService

	UplinkSettings uplink_settings.ClientService

	VlaNs v_l_a_ns.ClientService

	WebhookLogs webhook_logs.ClientService

	WirelessHealth wireless_health.ClientService

	WirelessSettings wireless_settings.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *MerakiDashboard) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.ActionBatches.SetTransport(transport)
	c.Admins.SetTransport(transport)
	c.AlertSettings.SetTransport(transport)
	c.APIUsage.SetTransport(transport)
	c.BluetoothClients.SetTransport(transport)
	c.BluetoothSettings.SetTransport(transport)
	c.CameraQualityRetentionProfiles.SetTransport(transport)
	c.Cameras.SetTransport(transport)
	c.ChangeLog.SetTransport(transport)
	c.Clients.SetTransport(transport)
	c.ConfigTemplates.SetTransport(transport)
	c.ConnectivityMonitoringDestinations.SetTransport(transport)
	c.ContentFilteringCategories.SetTransport(transport)
	c.ContentFilteringRules.SetTransport(transport)
	c.DashboardBrandingPolicies.SetTransport(transport)
	c.Devices.SetTransport(transport)
	c.Events.SetTransport(transport)
	c.FirewalledServices.SetTransport(transport)
	c.Floorplans.SetTransport(transport)
	c.GroupPolicies.SetTransport(transport)
	c.HTTPServers.SetTransport(transport)
	c.IntrusionSettings.SetTransport(transport)
	c.Licenses.SetTransport(transport)
	c.LinkAggregations.SetTransport(transport)
	c.MgConnectivityMonitoringDestinations.SetTransport(transport)
	c.MgdhcpSettings.SetTransport(transport)
	c.MglanSettings.SetTransport(transport)
	c.MgPortForwardingRules.SetTransport(transport)
	c.MgSubnetPoolSettings.SetTransport(transport)
	c.MgUplinkSettings.SetTransport(transport)
	c.MrL3Firewall.SetTransport(transport)
	c.MvSense.SetTransport(transport)
	c.Mx11natRules.SetTransport(transport)
	c.Mx1ManynatRules.SetTransport(transport)
	c.MxCellularFirewall.SetTransport(transport)
	c.MxInboundFirewall.SetTransport(transport)
	c.MxL3Firewall.SetTransport(transport)
	c.MxL7ApplicationCategories.SetTransport(transport)
	c.MxL7Firewall.SetTransport(transport)
	c.MxPortForwardingRules.SetTransport(transport)
	c.MxStaticRoutes.SetTransport(transport)
	c.MxvlanPorts.SetTransport(transport)
	c.MxvpnFirewall.SetTransport(transport)
	c.MxWarmSpareSettings.SetTransport(transport)
	c.MalwareSettings.SetTransport(transport)
	c.ManagementInterfaceSettings.SetTransport(transport)
	c.MerakiAuthUsers.SetTransport(transport)
	c.MonitoredMediaServers.SetTransport(transport)
	c.NamedTagScope.SetTransport(transport)
	c.NetFlowSettings.SetTransport(transport)
	c.Networks.SetTransport(transport)
	c.OpenAPISpec.SetTransport(transport)
	c.Organizations.SetTransport(transport)
	c.Pii.SetTransport(transport)
	c.RadioSettings.SetTransport(transport)
	c.SamlRoles.SetTransport(transport)
	c.Sm.SetTransport(transport)
	c.SnmpSettings.SetTransport(transport)
	c.SsiDs.SetTransport(transport)
	c.SecurityEvents.SetTransport(transport)
	c.SplashLoginAttempts.SetTransport(transport)
	c.SplashSettings.SetTransport(transport)
	c.SwitchacLs.SetTransport(transport)
	c.SwitchPortSchedules.SetTransport(transport)
	c.SwitchPorts.SetTransport(transport)
	c.SwitchProfiles.SetTransport(transport)
	c.SwitchSettings.SetTransport(transport)
	c.SwitchStacks.SetTransport(transport)
	c.SyslogServers.SetTransport(transport)
	c.TrafficAnalysisSettings.SetTransport(transport)
	c.TrafficShaping.SetTransport(transport)
	c.UplinkSettings.SetTransport(transport)
	c.VlaNs.SetTransport(transport)
	c.WebhookLogs.SetTransport(transport)
	c.WirelessHealth.SetTransport(transport)
	c.WirelessSettings.SetTransport(transport)
}
