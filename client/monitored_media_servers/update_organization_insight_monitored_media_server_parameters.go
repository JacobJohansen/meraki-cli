// Code generated by go-swagger; DO NOT EDIT.

package monitored_media_servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cisco-sso/meraki-cli/models"
)

// NewUpdateOrganizationInsightMonitoredMediaServerParams creates a new UpdateOrganizationInsightMonitoredMediaServerParams object
// with the default values initialized.
func NewUpdateOrganizationInsightMonitoredMediaServerParams() *UpdateOrganizationInsightMonitoredMediaServerParams {
	var ()
	return &UpdateOrganizationInsightMonitoredMediaServerParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateOrganizationInsightMonitoredMediaServerParamsWithTimeout creates a new UpdateOrganizationInsightMonitoredMediaServerParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateOrganizationInsightMonitoredMediaServerParamsWithTimeout(timeout time.Duration) *UpdateOrganizationInsightMonitoredMediaServerParams {
	var ()
	return &UpdateOrganizationInsightMonitoredMediaServerParams{

		timeout: timeout,
	}
}

// NewUpdateOrganizationInsightMonitoredMediaServerParamsWithContext creates a new UpdateOrganizationInsightMonitoredMediaServerParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateOrganizationInsightMonitoredMediaServerParamsWithContext(ctx context.Context) *UpdateOrganizationInsightMonitoredMediaServerParams {
	var ()
	return &UpdateOrganizationInsightMonitoredMediaServerParams{

		Context: ctx,
	}
}

// NewUpdateOrganizationInsightMonitoredMediaServerParamsWithHTTPClient creates a new UpdateOrganizationInsightMonitoredMediaServerParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateOrganizationInsightMonitoredMediaServerParamsWithHTTPClient(client *http.Client) *UpdateOrganizationInsightMonitoredMediaServerParams {
	var ()
	return &UpdateOrganizationInsightMonitoredMediaServerParams{
		HTTPClient: client,
	}
}

/*UpdateOrganizationInsightMonitoredMediaServerParams contains all the parameters to send to the API endpoint
for the update organization insight monitored media server operation typically these are written to a http.Request
*/
type UpdateOrganizationInsightMonitoredMediaServerParams struct {

	/*MonitoredMediaServerID*/
	MonitoredMediaServerID string
	/*OrganizationID*/
	OrganizationID string
	/*UpdateOrganizationInsightMonitoredMediaServer*/
	UpdateOrganizationInsightMonitoredMediaServer *models.UpdateOrganizationInsightMonitoredMediaServer

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update organization insight monitored media server params
func (o *UpdateOrganizationInsightMonitoredMediaServerParams) WithTimeout(timeout time.Duration) *UpdateOrganizationInsightMonitoredMediaServerParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update organization insight monitored media server params
func (o *UpdateOrganizationInsightMonitoredMediaServerParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update organization insight monitored media server params
func (o *UpdateOrganizationInsightMonitoredMediaServerParams) WithContext(ctx context.Context) *UpdateOrganizationInsightMonitoredMediaServerParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update organization insight monitored media server params
func (o *UpdateOrganizationInsightMonitoredMediaServerParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update organization insight monitored media server params
func (o *UpdateOrganizationInsightMonitoredMediaServerParams) WithHTTPClient(client *http.Client) *UpdateOrganizationInsightMonitoredMediaServerParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update organization insight monitored media server params
func (o *UpdateOrganizationInsightMonitoredMediaServerParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMonitoredMediaServerID adds the monitoredMediaServerID to the update organization insight monitored media server params
func (o *UpdateOrganizationInsightMonitoredMediaServerParams) WithMonitoredMediaServerID(monitoredMediaServerID string) *UpdateOrganizationInsightMonitoredMediaServerParams {
	o.SetMonitoredMediaServerID(monitoredMediaServerID)
	return o
}

// SetMonitoredMediaServerID adds the monitoredMediaServerId to the update organization insight monitored media server params
func (o *UpdateOrganizationInsightMonitoredMediaServerParams) SetMonitoredMediaServerID(monitoredMediaServerID string) {
	o.MonitoredMediaServerID = monitoredMediaServerID
}

// WithOrganizationID adds the organizationID to the update organization insight monitored media server params
func (o *UpdateOrganizationInsightMonitoredMediaServerParams) WithOrganizationID(organizationID string) *UpdateOrganizationInsightMonitoredMediaServerParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the update organization insight monitored media server params
func (o *UpdateOrganizationInsightMonitoredMediaServerParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WithUpdateOrganizationInsightMonitoredMediaServer adds the updateOrganizationInsightMonitoredMediaServer to the update organization insight monitored media server params
func (o *UpdateOrganizationInsightMonitoredMediaServerParams) WithUpdateOrganizationInsightMonitoredMediaServer(updateOrganizationInsightMonitoredMediaServer *models.UpdateOrganizationInsightMonitoredMediaServer) *UpdateOrganizationInsightMonitoredMediaServerParams {
	o.SetUpdateOrganizationInsightMonitoredMediaServer(updateOrganizationInsightMonitoredMediaServer)
	return o
}

// SetUpdateOrganizationInsightMonitoredMediaServer adds the updateOrganizationInsightMonitoredMediaServer to the update organization insight monitored media server params
func (o *UpdateOrganizationInsightMonitoredMediaServerParams) SetUpdateOrganizationInsightMonitoredMediaServer(updateOrganizationInsightMonitoredMediaServer *models.UpdateOrganizationInsightMonitoredMediaServer) {
	o.UpdateOrganizationInsightMonitoredMediaServer = updateOrganizationInsightMonitoredMediaServer
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateOrganizationInsightMonitoredMediaServerParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param monitoredMediaServerId
	if err := r.SetPathParam("monitoredMediaServerId", o.MonitoredMediaServerID); err != nil {
		return err
	}

	// path param organizationId
	if err := r.SetPathParam("organizationId", o.OrganizationID); err != nil {
		return err
	}

	if o.UpdateOrganizationInsightMonitoredMediaServer != nil {
		if err := r.SetBodyParam(o.UpdateOrganizationInsightMonitoredMediaServer); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
