// Code generated by go-swagger; DO NOT EDIT.

package traffic_analysis_settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cisco-sso/meraki-cli/models"
)

// NewUpdateNetworkTrafficAnalysisSettingsParams creates a new UpdateNetworkTrafficAnalysisSettingsParams object
// with the default values initialized.
func NewUpdateNetworkTrafficAnalysisSettingsParams() *UpdateNetworkTrafficAnalysisSettingsParams {
	var ()
	return &UpdateNetworkTrafficAnalysisSettingsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateNetworkTrafficAnalysisSettingsParamsWithTimeout creates a new UpdateNetworkTrafficAnalysisSettingsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateNetworkTrafficAnalysisSettingsParamsWithTimeout(timeout time.Duration) *UpdateNetworkTrafficAnalysisSettingsParams {
	var ()
	return &UpdateNetworkTrafficAnalysisSettingsParams{

		timeout: timeout,
	}
}

// NewUpdateNetworkTrafficAnalysisSettingsParamsWithContext creates a new UpdateNetworkTrafficAnalysisSettingsParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateNetworkTrafficAnalysisSettingsParamsWithContext(ctx context.Context) *UpdateNetworkTrafficAnalysisSettingsParams {
	var ()
	return &UpdateNetworkTrafficAnalysisSettingsParams{

		Context: ctx,
	}
}

// NewUpdateNetworkTrafficAnalysisSettingsParamsWithHTTPClient creates a new UpdateNetworkTrafficAnalysisSettingsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateNetworkTrafficAnalysisSettingsParamsWithHTTPClient(client *http.Client) *UpdateNetworkTrafficAnalysisSettingsParams {
	var ()
	return &UpdateNetworkTrafficAnalysisSettingsParams{
		HTTPClient: client,
	}
}

/*UpdateNetworkTrafficAnalysisSettingsParams contains all the parameters to send to the API endpoint
for the update network traffic analysis settings operation typically these are written to a http.Request
*/
type UpdateNetworkTrafficAnalysisSettingsParams struct {

	/*NetworkID*/
	NetworkID string
	/*UpdateNetworkTrafficAnalysisSettings*/
	UpdateNetworkTrafficAnalysisSettings *models.UpdateNetworkTrafficAnalysisSettings

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update network traffic analysis settings params
func (o *UpdateNetworkTrafficAnalysisSettingsParams) WithTimeout(timeout time.Duration) *UpdateNetworkTrafficAnalysisSettingsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update network traffic analysis settings params
func (o *UpdateNetworkTrafficAnalysisSettingsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update network traffic analysis settings params
func (o *UpdateNetworkTrafficAnalysisSettingsParams) WithContext(ctx context.Context) *UpdateNetworkTrafficAnalysisSettingsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update network traffic analysis settings params
func (o *UpdateNetworkTrafficAnalysisSettingsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update network traffic analysis settings params
func (o *UpdateNetworkTrafficAnalysisSettingsParams) WithHTTPClient(client *http.Client) *UpdateNetworkTrafficAnalysisSettingsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update network traffic analysis settings params
func (o *UpdateNetworkTrafficAnalysisSettingsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNetworkID adds the networkID to the update network traffic analysis settings params
func (o *UpdateNetworkTrafficAnalysisSettingsParams) WithNetworkID(networkID string) *UpdateNetworkTrafficAnalysisSettingsParams {
	o.SetNetworkID(networkID)
	return o
}

// SetNetworkID adds the networkId to the update network traffic analysis settings params
func (o *UpdateNetworkTrafficAnalysisSettingsParams) SetNetworkID(networkID string) {
	o.NetworkID = networkID
}

// WithUpdateNetworkTrafficAnalysisSettings adds the updateNetworkTrafficAnalysisSettings to the update network traffic analysis settings params
func (o *UpdateNetworkTrafficAnalysisSettingsParams) WithUpdateNetworkTrafficAnalysisSettings(updateNetworkTrafficAnalysisSettings *models.UpdateNetworkTrafficAnalysisSettings) *UpdateNetworkTrafficAnalysisSettingsParams {
	o.SetUpdateNetworkTrafficAnalysisSettings(updateNetworkTrafficAnalysisSettings)
	return o
}

// SetUpdateNetworkTrafficAnalysisSettings adds the updateNetworkTrafficAnalysisSettings to the update network traffic analysis settings params
func (o *UpdateNetworkTrafficAnalysisSettingsParams) SetUpdateNetworkTrafficAnalysisSettings(updateNetworkTrafficAnalysisSettings *models.UpdateNetworkTrafficAnalysisSettings) {
	o.UpdateNetworkTrafficAnalysisSettings = updateNetworkTrafficAnalysisSettings
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateNetworkTrafficAnalysisSettingsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param networkId
	if err := r.SetPathParam("networkId", o.NetworkID); err != nil {
		return err
	}

	if o.UpdateNetworkTrafficAnalysisSettings != nil {
		if err := r.SetBodyParam(o.UpdateNetworkTrafficAnalysisSettings); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
