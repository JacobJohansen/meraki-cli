// Code generated by go-swagger; DO NOT EDIT.

package floorplans

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cisco-sso/meraki-cli/models"
)

// NewUpdateNetworkFloorPlanParams creates a new UpdateNetworkFloorPlanParams object
// with the default values initialized.
func NewUpdateNetworkFloorPlanParams() *UpdateNetworkFloorPlanParams {
	var ()
	return &UpdateNetworkFloorPlanParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateNetworkFloorPlanParamsWithTimeout creates a new UpdateNetworkFloorPlanParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateNetworkFloorPlanParamsWithTimeout(timeout time.Duration) *UpdateNetworkFloorPlanParams {
	var ()
	return &UpdateNetworkFloorPlanParams{

		timeout: timeout,
	}
}

// NewUpdateNetworkFloorPlanParamsWithContext creates a new UpdateNetworkFloorPlanParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateNetworkFloorPlanParamsWithContext(ctx context.Context) *UpdateNetworkFloorPlanParams {
	var ()
	return &UpdateNetworkFloorPlanParams{

		Context: ctx,
	}
}

// NewUpdateNetworkFloorPlanParamsWithHTTPClient creates a new UpdateNetworkFloorPlanParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateNetworkFloorPlanParamsWithHTTPClient(client *http.Client) *UpdateNetworkFloorPlanParams {
	var ()
	return &UpdateNetworkFloorPlanParams{
		HTTPClient: client,
	}
}

/*UpdateNetworkFloorPlanParams contains all the parameters to send to the API endpoint
for the update network floor plan operation typically these are written to a http.Request
*/
type UpdateNetworkFloorPlanParams struct {

	/*FloorPlanID*/
	FloorPlanID string
	/*NetworkID*/
	NetworkID string
	/*UpdateNetworkFloorPlan*/
	UpdateNetworkFloorPlan *models.UpdateNetworkFloorPlan

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update network floor plan params
func (o *UpdateNetworkFloorPlanParams) WithTimeout(timeout time.Duration) *UpdateNetworkFloorPlanParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update network floor plan params
func (o *UpdateNetworkFloorPlanParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update network floor plan params
func (o *UpdateNetworkFloorPlanParams) WithContext(ctx context.Context) *UpdateNetworkFloorPlanParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update network floor plan params
func (o *UpdateNetworkFloorPlanParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update network floor plan params
func (o *UpdateNetworkFloorPlanParams) WithHTTPClient(client *http.Client) *UpdateNetworkFloorPlanParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update network floor plan params
func (o *UpdateNetworkFloorPlanParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFloorPlanID adds the floorPlanID to the update network floor plan params
func (o *UpdateNetworkFloorPlanParams) WithFloorPlanID(floorPlanID string) *UpdateNetworkFloorPlanParams {
	o.SetFloorPlanID(floorPlanID)
	return o
}

// SetFloorPlanID adds the floorPlanId to the update network floor plan params
func (o *UpdateNetworkFloorPlanParams) SetFloorPlanID(floorPlanID string) {
	o.FloorPlanID = floorPlanID
}

// WithNetworkID adds the networkID to the update network floor plan params
func (o *UpdateNetworkFloorPlanParams) WithNetworkID(networkID string) *UpdateNetworkFloorPlanParams {
	o.SetNetworkID(networkID)
	return o
}

// SetNetworkID adds the networkId to the update network floor plan params
func (o *UpdateNetworkFloorPlanParams) SetNetworkID(networkID string) {
	o.NetworkID = networkID
}

// WithUpdateNetworkFloorPlan adds the updateNetworkFloorPlan to the update network floor plan params
func (o *UpdateNetworkFloorPlanParams) WithUpdateNetworkFloorPlan(updateNetworkFloorPlan *models.UpdateNetworkFloorPlan) *UpdateNetworkFloorPlanParams {
	o.SetUpdateNetworkFloorPlan(updateNetworkFloorPlan)
	return o
}

// SetUpdateNetworkFloorPlan adds the updateNetworkFloorPlan to the update network floor plan params
func (o *UpdateNetworkFloorPlanParams) SetUpdateNetworkFloorPlan(updateNetworkFloorPlan *models.UpdateNetworkFloorPlan) {
	o.UpdateNetworkFloorPlan = updateNetworkFloorPlan
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateNetworkFloorPlanParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param floorPlanId
	if err := r.SetPathParam("floorPlanId", o.FloorPlanID); err != nil {
		return err
	}

	// path param networkId
	if err := r.SetPathParam("networkId", o.NetworkID); err != nil {
		return err
	}

	if o.UpdateNetworkFloorPlan != nil {
		if err := r.SetBodyParam(o.UpdateNetworkFloorPlan); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
