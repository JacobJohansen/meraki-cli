// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cisco-sso/meraki-cli/models"
)

// NewBlinkNetworkDeviceLedsParams creates a new BlinkNetworkDeviceLedsParams object
// with the default values initialized.
func NewBlinkNetworkDeviceLedsParams() *BlinkNetworkDeviceLedsParams {
	var ()
	return &BlinkNetworkDeviceLedsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewBlinkNetworkDeviceLedsParamsWithTimeout creates a new BlinkNetworkDeviceLedsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewBlinkNetworkDeviceLedsParamsWithTimeout(timeout time.Duration) *BlinkNetworkDeviceLedsParams {
	var ()
	return &BlinkNetworkDeviceLedsParams{

		timeout: timeout,
	}
}

// NewBlinkNetworkDeviceLedsParamsWithContext creates a new BlinkNetworkDeviceLedsParams object
// with the default values initialized, and the ability to set a context for a request
func NewBlinkNetworkDeviceLedsParamsWithContext(ctx context.Context) *BlinkNetworkDeviceLedsParams {
	var ()
	return &BlinkNetworkDeviceLedsParams{

		Context: ctx,
	}
}

// NewBlinkNetworkDeviceLedsParamsWithHTTPClient creates a new BlinkNetworkDeviceLedsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewBlinkNetworkDeviceLedsParamsWithHTTPClient(client *http.Client) *BlinkNetworkDeviceLedsParams {
	var ()
	return &BlinkNetworkDeviceLedsParams{
		HTTPClient: client,
	}
}

/*BlinkNetworkDeviceLedsParams contains all the parameters to send to the API endpoint
for the blink network device leds operation typically these are written to a http.Request
*/
type BlinkNetworkDeviceLedsParams struct {

	/*BlinkNetworkDeviceLeds*/
	BlinkNetworkDeviceLeds *models.BlinkNetworkDeviceLeds
	/*NetworkID*/
	NetworkID string
	/*Serial*/
	Serial string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the blink network device leds params
func (o *BlinkNetworkDeviceLedsParams) WithTimeout(timeout time.Duration) *BlinkNetworkDeviceLedsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the blink network device leds params
func (o *BlinkNetworkDeviceLedsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the blink network device leds params
func (o *BlinkNetworkDeviceLedsParams) WithContext(ctx context.Context) *BlinkNetworkDeviceLedsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the blink network device leds params
func (o *BlinkNetworkDeviceLedsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the blink network device leds params
func (o *BlinkNetworkDeviceLedsParams) WithHTTPClient(client *http.Client) *BlinkNetworkDeviceLedsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the blink network device leds params
func (o *BlinkNetworkDeviceLedsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBlinkNetworkDeviceLeds adds the blinkNetworkDeviceLeds to the blink network device leds params
func (o *BlinkNetworkDeviceLedsParams) WithBlinkNetworkDeviceLeds(blinkNetworkDeviceLeds *models.BlinkNetworkDeviceLeds) *BlinkNetworkDeviceLedsParams {
	o.SetBlinkNetworkDeviceLeds(blinkNetworkDeviceLeds)
	return o
}

// SetBlinkNetworkDeviceLeds adds the blinkNetworkDeviceLeds to the blink network device leds params
func (o *BlinkNetworkDeviceLedsParams) SetBlinkNetworkDeviceLeds(blinkNetworkDeviceLeds *models.BlinkNetworkDeviceLeds) {
	o.BlinkNetworkDeviceLeds = blinkNetworkDeviceLeds
}

// WithNetworkID adds the networkID to the blink network device leds params
func (o *BlinkNetworkDeviceLedsParams) WithNetworkID(networkID string) *BlinkNetworkDeviceLedsParams {
	o.SetNetworkID(networkID)
	return o
}

// SetNetworkID adds the networkId to the blink network device leds params
func (o *BlinkNetworkDeviceLedsParams) SetNetworkID(networkID string) {
	o.NetworkID = networkID
}

// WithSerial adds the serial to the blink network device leds params
func (o *BlinkNetworkDeviceLedsParams) WithSerial(serial string) *BlinkNetworkDeviceLedsParams {
	o.SetSerial(serial)
	return o
}

// SetSerial adds the serial to the blink network device leds params
func (o *BlinkNetworkDeviceLedsParams) SetSerial(serial string) {
	o.Serial = serial
}

// WriteToRequest writes these params to a swagger request
func (o *BlinkNetworkDeviceLedsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BlinkNetworkDeviceLeds != nil {
		if err := r.SetBodyParam(o.BlinkNetworkDeviceLeds); err != nil {
			return err
		}
	}

	// path param networkId
	if err := r.SetPathParam("networkId", o.NetworkID); err != nil {
		return err
	}

	// path param serial
	if err := r.SetPathParam("serial", o.Serial); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
