// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetNetworkDeviceLossAndLatencyHistoryParams creates a new GetNetworkDeviceLossAndLatencyHistoryParams object
// with the default values initialized.
func NewGetNetworkDeviceLossAndLatencyHistoryParams() *GetNetworkDeviceLossAndLatencyHistoryParams {
	var ()
	return &GetNetworkDeviceLossAndLatencyHistoryParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetNetworkDeviceLossAndLatencyHistoryParamsWithTimeout creates a new GetNetworkDeviceLossAndLatencyHistoryParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetNetworkDeviceLossAndLatencyHistoryParamsWithTimeout(timeout time.Duration) *GetNetworkDeviceLossAndLatencyHistoryParams {
	var ()
	return &GetNetworkDeviceLossAndLatencyHistoryParams{

		timeout: timeout,
	}
}

// NewGetNetworkDeviceLossAndLatencyHistoryParamsWithContext creates a new GetNetworkDeviceLossAndLatencyHistoryParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetNetworkDeviceLossAndLatencyHistoryParamsWithContext(ctx context.Context) *GetNetworkDeviceLossAndLatencyHistoryParams {
	var ()
	return &GetNetworkDeviceLossAndLatencyHistoryParams{

		Context: ctx,
	}
}

// NewGetNetworkDeviceLossAndLatencyHistoryParamsWithHTTPClient creates a new GetNetworkDeviceLossAndLatencyHistoryParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetNetworkDeviceLossAndLatencyHistoryParamsWithHTTPClient(client *http.Client) *GetNetworkDeviceLossAndLatencyHistoryParams {
	var ()
	return &GetNetworkDeviceLossAndLatencyHistoryParams{
		HTTPClient: client,
	}
}

/*GetNetworkDeviceLossAndLatencyHistoryParams contains all the parameters to send to the API endpoint
for the get network device loss and latency history operation typically these are written to a http.Request
*/
type GetNetworkDeviceLossAndLatencyHistoryParams struct {

	/*IP
	  The destination IP used to obtain the requested stats. This is required.

	*/
	IP string
	/*NetworkID*/
	NetworkID string
	/*Resolution
	  The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60.

	*/
	Resolution *int32
	/*Serial*/
	Serial string
	/*T0
	  The beginning of the timespan for the data. The maximum lookback period is 365 days from today.

	*/
	T0 *string
	/*T1
	  The end of the timespan for the data. t1 can be a maximum of 31 days after t0.

	*/
	T1 *string
	/*Timespan
	  The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.

	*/
	Timespan *float64
	/*Uplink
	  The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, cellular. The default is wan1.

	*/
	Uplink *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) WithTimeout(timeout time.Duration) *GetNetworkDeviceLossAndLatencyHistoryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) WithContext(ctx context.Context) *GetNetworkDeviceLossAndLatencyHistoryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) WithHTTPClient(client *http.Client) *GetNetworkDeviceLossAndLatencyHistoryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIP adds the ip to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) WithIP(ip string) *GetNetworkDeviceLossAndLatencyHistoryParams {
	o.SetIP(ip)
	return o
}

// SetIP adds the ip to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) SetIP(ip string) {
	o.IP = ip
}

// WithNetworkID adds the networkID to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) WithNetworkID(networkID string) *GetNetworkDeviceLossAndLatencyHistoryParams {
	o.SetNetworkID(networkID)
	return o
}

// SetNetworkID adds the networkId to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) SetNetworkID(networkID string) {
	o.NetworkID = networkID
}

// WithResolution adds the resolution to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) WithResolution(resolution *int32) *GetNetworkDeviceLossAndLatencyHistoryParams {
	o.SetResolution(resolution)
	return o
}

// SetResolution adds the resolution to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) SetResolution(resolution *int32) {
	o.Resolution = resolution
}

// WithSerial adds the serial to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) WithSerial(serial string) *GetNetworkDeviceLossAndLatencyHistoryParams {
	o.SetSerial(serial)
	return o
}

// SetSerial adds the serial to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) SetSerial(serial string) {
	o.Serial = serial
}

// WithT0 adds the t0 to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) WithT0(t0 *string) *GetNetworkDeviceLossAndLatencyHistoryParams {
	o.SetT0(t0)
	return o
}

// SetT0 adds the t0 to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) SetT0(t0 *string) {
	o.T0 = t0
}

// WithT1 adds the t1 to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) WithT1(t1 *string) *GetNetworkDeviceLossAndLatencyHistoryParams {
	o.SetT1(t1)
	return o
}

// SetT1 adds the t1 to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) SetT1(t1 *string) {
	o.T1 = t1
}

// WithTimespan adds the timespan to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) WithTimespan(timespan *float64) *GetNetworkDeviceLossAndLatencyHistoryParams {
	o.SetTimespan(timespan)
	return o
}

// SetTimespan adds the timespan to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) SetTimespan(timespan *float64) {
	o.Timespan = timespan
}

// WithUplink adds the uplink to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) WithUplink(uplink *string) *GetNetworkDeviceLossAndLatencyHistoryParams {
	o.SetUplink(uplink)
	return o
}

// SetUplink adds the uplink to the get network device loss and latency history params
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) SetUplink(uplink *string) {
	o.Uplink = uplink
}

// WriteToRequest writes these params to a swagger request
func (o *GetNetworkDeviceLossAndLatencyHistoryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param ip
	qrIP := o.IP
	qIP := qrIP
	if qIP != "" {
		if err := r.SetQueryParam("ip", qIP); err != nil {
			return err
		}
	}

	// path param networkId
	if err := r.SetPathParam("networkId", o.NetworkID); err != nil {
		return err
	}

	if o.Resolution != nil {

		// query param resolution
		var qrResolution int32
		if o.Resolution != nil {
			qrResolution = *o.Resolution
		}
		qResolution := swag.FormatInt32(qrResolution)
		if qResolution != "" {
			if err := r.SetQueryParam("resolution", qResolution); err != nil {
				return err
			}
		}

	}

	// path param serial
	if err := r.SetPathParam("serial", o.Serial); err != nil {
		return err
	}

	if o.T0 != nil {

		// query param t0
		var qrT0 string
		if o.T0 != nil {
			qrT0 = *o.T0
		}
		qT0 := qrT0
		if qT0 != "" {
			if err := r.SetQueryParam("t0", qT0); err != nil {
				return err
			}
		}

	}

	if o.T1 != nil {

		// query param t1
		var qrT1 string
		if o.T1 != nil {
			qrT1 = *o.T1
		}
		qT1 := qrT1
		if qT1 != "" {
			if err := r.SetQueryParam("t1", qT1); err != nil {
				return err
			}
		}

	}

	if o.Timespan != nil {

		// query param timespan
		var qrTimespan float64
		if o.Timespan != nil {
			qrTimespan = *o.Timespan
		}
		qTimespan := swag.FormatFloat64(qrTimespan)
		if qTimespan != "" {
			if err := r.SetQueryParam("timespan", qTimespan); err != nil {
				return err
			}
		}

	}

	if o.Uplink != nil {

		// query param uplink
		var qrUplink string
		if o.Uplink != nil {
			qrUplink = *o.Uplink
		}
		qUplink := qrUplink
		if qUplink != "" {
			if err := r.SetQueryParam("uplink", qUplink); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
