// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetDeviceClientsParams creates a new GetDeviceClientsParams object
// with the default values initialized.
func NewGetDeviceClientsParams() *GetDeviceClientsParams {
	var ()
	return &GetDeviceClientsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDeviceClientsParamsWithTimeout creates a new GetDeviceClientsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDeviceClientsParamsWithTimeout(timeout time.Duration) *GetDeviceClientsParams {
	var ()
	return &GetDeviceClientsParams{

		timeout: timeout,
	}
}

// NewGetDeviceClientsParamsWithContext creates a new GetDeviceClientsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDeviceClientsParamsWithContext(ctx context.Context) *GetDeviceClientsParams {
	var ()
	return &GetDeviceClientsParams{

		Context: ctx,
	}
}

// NewGetDeviceClientsParamsWithHTTPClient creates a new GetDeviceClientsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDeviceClientsParamsWithHTTPClient(client *http.Client) *GetDeviceClientsParams {
	var ()
	return &GetDeviceClientsParams{
		HTTPClient: client,
	}
}

/*GetDeviceClientsParams contains all the parameters to send to the API endpoint
for the get device clients operation typically these are written to a http.Request
*/
type GetDeviceClientsParams struct {

	/*Serial*/
	Serial string
	/*T0
	  The beginning of the timespan for the data. The maximum lookback period is 31 days from today.

	*/
	T0 *string
	/*Timespan
	  The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.

	*/
	Timespan *float64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get device clients params
func (o *GetDeviceClientsParams) WithTimeout(timeout time.Duration) *GetDeviceClientsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get device clients params
func (o *GetDeviceClientsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get device clients params
func (o *GetDeviceClientsParams) WithContext(ctx context.Context) *GetDeviceClientsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get device clients params
func (o *GetDeviceClientsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get device clients params
func (o *GetDeviceClientsParams) WithHTTPClient(client *http.Client) *GetDeviceClientsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get device clients params
func (o *GetDeviceClientsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSerial adds the serial to the get device clients params
func (o *GetDeviceClientsParams) WithSerial(serial string) *GetDeviceClientsParams {
	o.SetSerial(serial)
	return o
}

// SetSerial adds the serial to the get device clients params
func (o *GetDeviceClientsParams) SetSerial(serial string) {
	o.Serial = serial
}

// WithT0 adds the t0 to the get device clients params
func (o *GetDeviceClientsParams) WithT0(t0 *string) *GetDeviceClientsParams {
	o.SetT0(t0)
	return o
}

// SetT0 adds the t0 to the get device clients params
func (o *GetDeviceClientsParams) SetT0(t0 *string) {
	o.T0 = t0
}

// WithTimespan adds the timespan to the get device clients params
func (o *GetDeviceClientsParams) WithTimespan(timespan *float64) *GetDeviceClientsParams {
	o.SetTimespan(timespan)
	return o
}

// SetTimespan adds the timespan to the get device clients params
func (o *GetDeviceClientsParams) SetTimespan(timespan *float64) {
	o.Timespan = timespan
}

// WriteToRequest writes these params to a swagger request
func (o *GetDeviceClientsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param serial
	if err := r.SetPathParam("serial", o.Serial); err != nil {
		return err
	}

	if o.T0 != nil {

		// query param t0
		var qrT0 string
		if o.T0 != nil {
			qrT0 = *o.T0
		}
		qT0 := qrT0
		if qT0 != "" {
			if err := r.SetQueryParam("t0", qT0); err != nil {
				return err
			}
		}

	}

	if o.Timespan != nil {

		// query param timespan
		var qrTimespan float64
		if o.Timespan != nil {
			qrTimespan = *o.Timespan
		}
		qTimespan := swag.FormatFloat64(qrTimespan)
		if qTimespan != "" {
			if err := r.SetQueryParam("timespan", qTimespan); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
